{"version":3,"sources":["types/sdk/Transaction/GetBalance.ts","types/dashboard/transaction.ts","types/index.ts","types/coins.ts","redux/hooks.ts","redux/reducers/storage.ts","redux/reducers/toggles.ts","components/notification/index.tsx","hooks/useTransactionProcess.tsx","utility/const.ts","redux/api/account.ts","redux/api/customer.ts","redux/api/team.ts","redux/api/transaction.ts","redux/api/teamMember.ts","redux/api/blockscout.ts","redux/api/swap.ts","redux/reducers/notificationSlice.ts","redux/reducers/currencies.ts","redux/reducers/transactions.ts","hooks/useRefetchData.tsx","layouts/dashboard/navbar.tsx","components/dashboard/sidebarlist.tsx","layouts/dashboard/sidebar.tsx","layouts/dashboard/mobileMenu.tsx","pages/dashboard/index.tsx","components/dropdown.tsx","components/success.tsx","components/error.tsx","utility/CSV.tsx","components/pay/payinput.tsx","pages/dashboard/pay.tsx","pages/home.tsx","layouts/home/header.tsx","components/input.tsx","components/create/set.tsx","components/phraseBar.tsx","redux/reducers/unlock.ts","components/create/phrase.tsx","pages/create.tsx","pages/unlock.tsx","components/dashboard/main/coinitem.tsx","components/dashboard/main/statistics.tsx","components/transactionItem.tsx","components/dashboard/main/transactionHistory.tsx","components/import/createPassword.tsx","components/import/login.tsx","components/pay/teaminput.tsx","components/teams/buttons/addMember.tsx","components/teams/buttons/addTeam.tsx","components/teams/buttons/delete.tsx","components/teams/buttons/editMember.tsx","components/teams/buttons/editTeam.tsx","components/avatar.tsx","components/teams/buttons/profile.tsx","components/modal.tsx","components/teams/teamItem.tsx","components/teams/teamContainer.tsx","pages/swap/index.tsx","pages/import/index.tsx","pages/dashboard/assets.tsx","pages/teams/index.tsx","pages/dashboard/main.tsx","pages/transactions/transactions.tsx","pages/transactions/details.tsx","redux/store.ts","utility/init.tsx","pages/dashboard/masspay.tsx","App.tsx","index.tsx","types/sdk.ts"],"names":["GetBalanceResponseEnum","TransactionType","TransactionDirection","TransactionStatus","CoinsURL","CoinsName","CoinsNameVisual","TransactionFeeTokenName","StableTokens","AltcoinsList","CoinsNameLower","CoinsResponse","useAppDispatch","useDispatch","useAppSelector","useSelector","storageSlice","createSlice","name","initialState","val","localStorage","getItem","user","JSON","parse","reducers","setStorage","state","action","setItem","payload","data","removeStorage","removeItem","actions","selectStorage","storage","toggleSlice","mobileMenu","setMenu","selectToggle","toggle","Status","Coins","celo","CELO","coinUrl","value","feeName","lowerName","responseName","celoBalance","cUSD","cUSDBalance","cEUR","cEURBalance","UBE","MOO","MOBI","POOF","useTransactionProcess","transactions","currencies","currencyandbalance","celoCoins","useMemo","res","lodash","groupBy","result","iteratee","newObject","Object","entries","map","key","_","orderBy","o","BigInt","uniqBy","transactionData","values","reverse","transaction","index","amount","coin","coinName","direction","date","amountUSD","surplus","type","hash","rawDate","blockNum","from","toLowerCase","accountAddress","filter","w","to","timeStamp","blockNumber","length","tx","parseFloat","Web3","utils","fromWei","toFixed","find","tokenSymbol","trim","Out","In","dateFormat","Date","parseInt","price","IncomingPayment","QuickTransfer","isTo","Set","reduce","a","c","toString","item","arr","includes","slice","MassPayment","MassPayout","BaseUrl","window","location","hostname","accountAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","set","endpoints","builder","signIn","mutation","query","url","method","body","accountCreate","createPassword","accountExist","unlock","putAccountInfo","setTime","getTime","useSetTimeMutation","useLazyGetTimeQuery","useSignInMutation","useAccountCreateMutation","useCreatePasswordMutation","useAccountExistMutation","useUnlockMutation","customerAPI","usePutAccountInfoMutation","customerCreate","getCustomer","params","deleteCustomer","id","teamAPI","useCustomerCreateMutation","useGetCustomerQuery","useDeleteCustomerMutation","createTeam","getTeams","getTeamsWithMembers","deleteTeam","updateTeam","useCreateTeamMutation","useLazyGetTeamsQuery","useLazyGetTeamsWithMembersQuery","useDeleteTeamMutation","useGetTeamsWithMembersQuery","useUpdateTeamMutation","transactionAPI","keepUnusedDataFor","getBalance","getCurrencies","sendCelo","sendStableToken","sendAltToken","sendMultipleTransactions","useGetBalanceQuery","useLazyGetBalanceQuery","useLazyGetCurrenciesQuery","useSendCeloMutation","useGetCurrenciesQuery","useSendStableTokenMutation","useSendAltTokenMutation","useSendMultipleTransactionsMutation","teamMemberAPI","addMember","getMembers","getMember","deleteMember","updateMember","useAddMemberMutation","useLazyGetMemberQuery","useDeleteMemberMutation","useGetMembersQuery","useLazyGetMembersQuery","useUpdateMemberMutation","BlockScoutApi","getTransactions","useLazyGetTransactionsQuery","useGetTransactionsQuery","swapAPI","getConvertableTokenAmount","swapCoins","useGetConvertableTokenAmountMutation","useSwapCoinsMutation","notificationSlice","onSuccess","onError","onErrorText","notificationSeen","changeError","text","activate","changeSuccess","changeNotificationSeen","selectError","notification","selectErrorText","selectSuccess","NotificationCointainer","list","dispatch","seenTime","useState","openNotify","setNotify","trigger","divRef","useRef","useEffect","time","now","unwrap","then","click","useCallback","e","current","contains","target","addEventListener","removeEventListener","className","onClick","ref","status","OK","title","link","generate","NotificationItem","State","undefined","balances","CurrencySlice","updateAllCurrencies","cusd","ceur","ube","moo","mobi","poof","percent_24","updateBalance","current_balance","updateUserBalance","per_24","percent","coins","reduxValue","SelectCurrencies","SelectBalances","TransactionAPI","setTransactions","SelectTransactions","useRefetchData","currencyTrigger","currencyData","balanceTrigger","balanceData","transactionTrigger","timer","setInterval","updatedCurrency","d","Celo","Cusd","Ceur","Ube","Moo","Mobi","Poof","balance","pCelo","pCusd","pCeur","pUbe","pMoo","pMobi","pPoof","celoPrice","cusdPrice","ceurPrice","ubePrice","mooPrice","mobiPrice","poofPrice","total","updatedBalance","fetching","clearInterval","Visitcard","address","navigator","clipboard","writeText","split","i","Li","children","NavbarDropdown","isOpen","setOpen","style","transform","PaySVG","src","alt","MassPayoutSVG","RequestMoneySVG","FundSVG","Navbar","menuBar","toggled","hideOutline","width","placeholder","DashboardSVG","PayrollSVG","TransactionsSVG","SwapSVG","AssetsSVG","TeamsSVG","SettingSVG","LogoutSVG","Sidebarlist","exact","activeClassName","Sidebar","MobileMenu","document","querySelector","overflowY","height","motion","div","initial","x","animate","transition","exit","Dashboard","AnimatePresence","forwardRef","Viewer","displayName","disableAddressDisplay","startsWith","Dropdown","selected","nameActivation","onSelect","loader","parentClass","childClass","liRef","liHeight","setLiHeight","offsetHeight","outerWidth","obj","Success","onClose","Error","CSV","file","Promise","resolve","reject","URL","createObjectURL","csv","columns","push","Input","selectedWallet","setWallet","setIndex","overallIndex","defaultValue","onChange","required","wallet","step","min","Pay","isError","router","useHistory","refetch","sendMultiple","sendAltcoin","isPaying","setIsPaying","isSuccess","setSuccess","nameRef","addressRef","wallets","setWallets","amountRef","csvImport","setCsvImport","fileInput","setSelectedWallet","setList","files","DataTransfer","Submit","preventDefault","nameList","addressList","amountList","toAddress","tokenType","phrase","encryptedPhrase","stableTokenType","altTokenType","multipleAddresses","console","error","message","onSubmit","Import","catch","Array","fill","cols","rows","goBack","Home","pathname","Header","validation","limit","password","setPassword","repeatPassword","setRepeatPassword","autoComplete","minLength","setData","createAccount","isLoading","create","inputData","userName","surname","companyName","pass","mnemonic","localSave","PhraseBar","scanIcon","see","setSee","replace","inlineSize","toUpperCase","unlockSlide","setUnlock","selectUnlock","KeyPhrase","stringify","Create","Unlock","unlockState","unlockApp","inputRef","useLocation","incorrrect","setIncorrect","onKeyDown","event","autoFocus","CoinItem","usd","rate","img","Statistic","setPercent","setBalance","lastIn","setIn","lastOut","setOut","allInOne","setAllInOne","balanceRedux","cusdBalance","ceurBalance","ubeBalance","mooBalance","mobiBalance","poofBalance","all","chart","celoDeg","Math","floor","cusdDeg","ceurDeg","ubeDeg","mooDeg","mobiDeg","poofDeg","currencObj","currencObj2","indexable","per","sort","b","toLocaleString","localeCompare","myin","myout","forEach","t","getMonth","color","background","TransactionItem","amountCoin","detect","setDetect","clientWidth","Completed","TransactionHistory","CreatePassword","isValid","setValid","Submitted","Login","signin","input","setInput","TeamInput","props","currency","generalWallet","updateValue","newArr","members","newItem","checked","selectedId","some","tick","setSelectedId","onBlur","AddMember","onDisable","triggerTeams","addMemberLoading","None","setSelected","take","Number","MAX_SAFE_INTEGER","teams","firstName","lastName","teamName","walletAddress","firstNameValue","lastNameValue","walletAddressValue","amountValue","alert","teamId","AddTeams","disabled","Delete","onCurrentModal","onDelete","loading","setLoading","size","EditMember","triggerTeam","member","memberLoading","isFetching","updateLoading","selectedTeam","setSelectedTeam","memberName","memberNameValue","addressValue","EditTeam","Avatar","Profile","onEditModal","onDeleteModal","Modal","top","scrollY","innerHeight","TeamItem","modalVisible","setModalVisible","modalEditVisible","setModalEditVisible","deleteModal","setDeleteModal","TeamContainer","editModal","setEditModal","num","setNum","DeleteTeam","Swap","token1","setToken1","token2","setToken2","token1Input","appAmount","setAppAmount","fetchCoin","swap","change","log","output","minimumAmountOut","startSwap","setError","Assets","selectBalance","Teams","teamCount","skipCount","setSkipCount","skipRef","addTeamModal","setAddTeamModal","addMemberModal","setAddMemberModal","setTeams","maxTeamCount","skip","Main","Transactions","setTake","interval","filename","s","gasUsed","gasPrice","blockHash","Details","useParams","totalAmount","setTotalAmount","transactionFee","setTransactionFee","maTx","round","fee","TransactionDetailInput","open","store","configureStore","reducer","Currency","Notification","Storage","Toggle","Transaction","middleware","getDefaultMiddleware","serializableCheck","concat","Initalization","currencyResult","initiate","notifySeen","unsubscribe","balanceResult","transactionsResult","balanceResponse","MassPay","currentBalances","setCurrentBalances","selectedBalances","setSelectedBalances","selectedBalanceResult","setSelectedBalanceResult","teamLoading","resMember","setMembers","team","mems","currenBalanceArr","key2","value2","bal","selectedAmount","balanceRes","setGeneralWallet","CustomRouter","unlockChecking","element","path","render","AuthRouter","match","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.360d04f6.chunk.js","sourcesContent":["export interface GetBalanceResponse {\n\tceloBalance: string;\n\tcUSDBalance: string;\n\tcEURBalance: string;\n\tUBE: string;\n\tMOO: string;\n\tMOBI: string;\n\tPOOF: string;\n}\n\nexport enum GetBalanceResponseEnum {\n\tceloBalance = \"celoBalance\",\n\tcUSDBalance = \"cUSDBalance\",\n\tcEURBalance = \"cEURBalance\",\n\tUBE = \"UBE\",\n\tMOO = \"MOO\",\n\tMOBI = \"MOBI\",\n\tPOOF = \"POOF\",\n}\n","export enum TransactionType {\n    PaySomeone = \"Pay Someone\",\n    MassPayout = \"Mass Payout\",\n    QuickTransfer = \"Quick Transfer\",\n    IncomingPayment = \"Incoming Payment\",\n    MassPayment = \"Mass Payment\",\n}\n\nexport enum TransactionDirection {\n    In,\n    Out\n}\n\nexport enum TransactionStatus{\n    Completed, \n    Pending, \n    Rejected\n}","export * from './dashboard/transaction';\nexport * from './dropdown'","import { GetBalanceResponseEnum } from './sdk';\n\nexport enum CoinsURL {\n\tCELO = '/icons/celoiconsquare.svg',\n\tcUSD = '/icons/celodollar.svg',\n\tcEUR = '/icons/ceur.png',\n\tUBE = '/icons/ubeswap.png',\n\tMOO = '/icons/moola.png',\n\tMOBI = '/icons/mobius.png',\n\tPOOF = '/icons/poof.png',\n\tNone = ''\n}\n\nexport enum CoinsName {\n\tCELO = 'celo',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF'\n}\n\nexport enum CoinsNameVisual {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF'\n}\n\nexport enum TransactionFeeTokenName {\n\tCELO = 'celo',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF'\n}\n\nexport enum StableTokens {\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR'\n}\n\nexport enum AltcoinsList {\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF'\n}\n\nexport enum CoinsNameLower {\n\tCELO = 'celo',\n\tcUSD = 'cUsd',\n\tcEUR = 'cEur',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF'\n}\n\nexport enum CoinsResponse {}\n\nexport const Coins: Coins = {\n\tcelo: {\n\t\tname: CoinsNameVisual.CELO,\n\t\tcoinUrl: CoinsURL.CELO,\n\t\tvalue: CoinsName.CELO,\n\t\tfeeName: TransactionFeeTokenName.CELO,\n\t\tlowerName: CoinsNameLower.CELO,\n\t\tresponseName: GetBalanceResponseEnum.celoBalance\n\t},\n\tcUSD: {\n\t\tname: CoinsNameVisual.cUSD,\n\t\tcoinUrl: CoinsURL.cUSD,\n\t\tvalue: CoinsName.cUSD,\n\t\tfeeName: TransactionFeeTokenName.cUSD,\n\t\tlowerName: CoinsNameLower.cUSD,\n\t\tresponseName: GetBalanceResponseEnum.cUSDBalance\n\t},\n\tcEUR: {\n\t\tname: CoinsNameVisual.cEUR,\n\t\tcoinUrl: CoinsURL.cEUR,\n\t\tvalue: CoinsName.cEUR,\n\t\tfeeName: TransactionFeeTokenName.cEUR,\n\t\tlowerName: CoinsNameLower.cEUR,\n\t\tresponseName: GetBalanceResponseEnum.cEURBalance\n\t},\n\tUBE: {\n\t\tname: CoinsNameVisual.UBE,\n\t\tcoinUrl: CoinsURL.UBE,\n\t\tvalue: CoinsName.UBE,\n\t\tfeeName: TransactionFeeTokenName.UBE,\n\t\tlowerName: CoinsNameLower.UBE,\n\t\tresponseName: GetBalanceResponseEnum.UBE\n\t},\n\tMOO: {\n\t\tname: CoinsNameVisual.MOO,\n\t\tcoinUrl: CoinsURL.MOO,\n\t\tvalue: CoinsName.MOO,\n\t\tfeeName: TransactionFeeTokenName.MOO,\n\t\tlowerName: CoinsNameLower.MOO,\n\t\tresponseName: GetBalanceResponseEnum.MOO\n\t},\n\tMOBI: {\n\t\tname: CoinsNameVisual.MOBI,\n\t\tcoinUrl: CoinsURL.MOBI,\n\t\tvalue: CoinsName.MOBI,\n\t\tfeeName: TransactionFeeTokenName.MOBI,\n\t\tlowerName: CoinsNameLower.MOBI,\n\t\tresponseName: GetBalanceResponseEnum.MOBI\n\t},\n\tPOOF: {\n\t\tname: CoinsNameVisual.POOF,\n\t\tcoinUrl: CoinsURL.POOF,\n\t\tvalue: CoinsName.POOF,\n\t\tfeeName: TransactionFeeTokenName.POOF,\n\t\tlowerName: CoinsNameLower.POOF,\n\t\tresponseName: GetBalanceResponseEnum.POOF\n\t}\n};\n\nexport interface Coins {\n\tcelo: AltCoins;\n\tcUSD: AltCoins;\n\tcEUR: AltCoins;\n\tUBE: AltCoins;\n\tMOO: AltCoins;\n\tMOBI: AltCoins;\n\tPOOF: AltCoins;\n}\n\nexport interface AltCoins {\n\tname: CoinsNameVisual;\n\tcoinUrl: CoinsURL;\n\tvalue: CoinsName;\n\tfeeName: TransactionFeeTokenName;\n\tlowerName: CoinsNameLower;\n\tresponseName: GetBalanceResponseEnum;\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IStorage {\n    accountAddress: string,\n    encryptedPhrase: string,\n    token: string,\n    userName?: string;\n    surname?: string,\n    companyName?: string,\n}\n\ninterface IContainer {\n    user: IStorage | null\n}\n\nconst initialState = (): IContainer => {\n    const val = localStorage.getItem(\"user\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { user: data }\n    }\n    return { user: null };\n}\n\n\nexport const storageSlice = createSlice({\n    name: \"storage\",\n    initialState: initialState(),\n    reducers: {\n        setStorage: (state, action) => {\n            localStorage.setItem(\"user\", action.payload)\n            const data: IStorage = JSON.parse(action.payload)\n            state.user = data\n        },\n        removeStorage: (state) => {\n            localStorage.removeItem(\"user\")\n            state.user = null;\n        }\n    }\n})\n\nexport const { setStorage, removeStorage } = storageSlice.actions\n\nexport const selectStorage = (state: RootState) => state.storage.user\n\nexport default storageSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../store';\n\nconst initialState = {\n\tmobileMenu: false\n};\n\nexport const toggleSlice = createSlice({\n\tname: 'storage',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetMenu: (state, action) =>{\n\t\t\tstate.mobileMenu = action.payload;\n\t\t}\n\t}\n});\n\nexport const {setMenu} = toggleSlice.actions;\n\nexport const selectToggle = (state: RootState) => state.toggle;\n\nexport default toggleSlice.reducer;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport useTransactionProcess from \"../../hooks/useTransactionProcess\";\nimport { useSetTimeMutation } from \"../../redux/api\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { changeNotificationSeen } from \"../../redux/reducers/notificationSlice\";\nimport { RootState } from \"../../redux/store\";\nimport { TransactionType } from \"../../types\";\n\n\nenum Status {\n    OK,\n    Reject,\n    Pending\n}\n\nconst NotificationCointainer = () => {\n    const list = useTransactionProcess()\n    const dispatch = useAppDispatch()\n    const seenTime = useAppSelector((state: RootState) => state.notification.notificationSeen)\n    const [openNotify, setNotify] = useState(false)\n    const [trigger] = useSetTimeMutation()\n\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (openNotify) {\n            trigger({ time: Date.now().toString() }).unwrap().then(() => {\n                dispatch(changeNotificationSeen(Date.now()))\n            })\n        }\n    }, [openNotify])\n\n    const click = useCallback((e) => {\n        if (openNotify && divRef.current && !divRef.current.contains(e.target)) {\n            setNotify(false)\n        }\n    }, [openNotify])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, divRef])\n\n    return <>\n        <IoMdNotificationsOutline className=\"text-2xl cursor-pointer\" onClick={() => setNotify(!openNotify)} />\n        {list && new Date(seenTime) < new Date(parseInt((list ? list[0]?.rawDate : \"0\")) * 1e3) && <div className=\"absolute w-[10px] h-[10px] bg-primary rounded-full -top-1 -right-1\">\n\n        </div>}\n        {openNotify &&\n            <div ref={divRef} className=\"translate-x-[75%] sm:translate-x-0 z-40 absolute shadow-custom min-w-[325px] min-h-[200px] right-0 bg-white mt-7 rounded-xl\">\n                <div className=\"flex flex-col min-h-[325px] sm:min-h-[auto] justify-center sm:justify-between sm:items-stretch items-center\">\n                    {list && list.slice(0, 4).map(item =>\n                        <NotificationItem key={generate()} status={Status.OK} title={item.type} body={`${item.surplus} ${item.amountUSD.toFixed(4)} $`} link={`/dashboard/transactions/${item.blockNum}`} />\n                    )}\n                    {(!list || !list.length) && <div>No notification yet. We'll notify you</div>}\n                </div>\n            </div>\n        }\n    </>\n}\n\nexport default NotificationCointainer;\n\n\nconst NotificationItem = ({ status, title, body, link }: { status: Status, title: TransactionType, body: string, link: string }) => {\n\n    return <div className=\"grid grid-cols-[15%,65%,20%] min-h-[50px] border-b-2 items-center px-3 py-2\">\n        <div>\n            {\n                status === Status.OK && <div className=\"w-[15px] h-[15px] rounded-full bg-blue-600\"></div>\n            }\n        </div>\n        <div className=\"flex flex-col\">\n            <div>{title}</div>\n            <div>{body}</div>\n        </div>\n        <Link to={link}>\n            <div className={'text-primary'}>\n                View\n            </div>\n        </Link>\n    </div>\n}","import { useMemo } from 'react';\nimport { useAppSelector } from '../redux/hooks';\nimport { SelectTransactions } from '../redux/reducers/transactions';\nimport lodash from 'lodash';\nimport { Transactions } from '../types/sdk';\nimport _ from 'lodash';\nimport Web3 from 'web3';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../types/coins';\nimport { selectStorage } from '../redux/reducers/storage';\nimport dateFormat from 'dateformat';\nimport { TransactionDirection, TransactionType } from '../types';\nimport { SelectCurrencies } from '../redux/reducers/currencies';\nimport store, { RootState } from '../redux/store';\nimport { useSelector } from 'react-redux';\n\nexport interface TransactionHook {\n    amount: string;\n    coin: AltCoins | undefined;\n    coinName: string;\n    direction: TransactionDirection;\n    date: string;\n    amountUSD: number;\n    surplus: string;\n    type: TransactionType;\n    hash: string;\n    rawDate: string;\n    blockNum: string;\n}\n\nconst useTransactionProcess = (): TransactionHook[] | undefined => {\n    const transactions = useSelector((state: RootState) => state.transactions.transactions);\n    const currencies = useSelector((state: RootState) => state.currencyandbalance.celoCoins);\n    const storage = useSelector((state: RootState) => state.storage.user);\n\n    return useMemo(() => {\n        if (transactions && currencies && storage) {\n\n            const res = lodash.groupBy(transactions.result, lodash.iteratee('blockNumber'))\n            let newObject: { [name: string]: Transactions[] } = {}\n            Object.entries(res).map(([key, value]) => {\n                const data = _(value).orderBy((o) => BigInt(o.value), ['desc']).uniqBy('hash').value()\n                newObject[key] = data\n            })\n\n            const transactionData = newObject;\n\n            return Object.values(transactionData).reverse().map((transaction, index) => {\n                let amount, coin, coinName, direction, date, amountUSD, surplus, type, hash, rawDate, blockNum;\n                if (transaction[0].from.toLowerCase() !== storage?.accountAddress.toLowerCase()) {\n                    transaction = transaction.filter(w => w.to.toLowerCase() === storage?.accountAddress.toLowerCase())\n                }\n                rawDate = transaction[0].timeStamp;\n                blockNum = transaction[0].blockNumber;\n                if (transaction.length === 1) {\n                    const tx = transaction[0]\n                    hash = tx.blockNumber\n                    amount = parseFloat(Web3.utils.fromWei(tx.value, 'ether')).toFixed(2)\n                    coin = Coins[Object.entries(TransactionFeeTokenName).find(w => w[0] === tx.tokenSymbol)![1]];\n                    coinName = coin.name;\n                    direction = tx.from.trim().toLowerCase() === storage?.accountAddress.trim().toLowerCase() ? TransactionDirection.Out : TransactionDirection.In\n                    date = dateFormat(new Date(parseInt(tx.timeStamp) * 1e3), \"mediumDate\")\n                    amountUSD = (currencies[coin.name]?.price ?? 0) * parseFloat(parseFloat(Web3.utils.fromWei(tx.value, 'ether')).toFixed(4))\n                    surplus = direction === TransactionDirection.In ? '+' : '-'\n                    type = direction === TransactionDirection.In ? TransactionType.IncomingPayment : TransactionType.QuickTransfer\n                } else {\n                    const tx = transaction;\n                    const isTo = [...new Set(transaction.map(w => w.to))].length === 1 && transaction[0].from.toLowerCase() !== storage?.accountAddress.toLowerCase();\n                    hash = tx[0].blockNumber\n                    amount = parseFloat(Web3.utils.fromWei(tx.reduce((a, c) => a + parseFloat(c.value), 0).toString(), 'ether')).toFixed(2)\n                    coinName = tx.reduce((a, item, index, arr) => {\n                        const coin = Coins[Object.entries(TransactionFeeTokenName).find(w => w[0] === item.tokenSymbol)![1]].name\n                        if (!a.includes(coin)) {\n                            a += `${coin}, `;\n                        }\n\n                        return a\n                    }, '')\n                    if (coinName.includes(','))\n                        coinName = coinName.slice(0, -2);\n                    direction = isTo ? TransactionDirection.In : TransactionDirection.Out\n                    date = dateFormat(new Date(parseInt(tx[0].timeStamp) * 1e3), \"mediumDate\")\n                    amountUSD = tx.reduce((a, c) => {\n                        const coin = Coins[Object.entries(TransactionFeeTokenName).find(w => w[0] === c.tokenSymbol)![1]]\n                        a += (currencies[coin.name]?.price ?? 0) * parseFloat(parseFloat(Web3.utils.fromWei(c.value, 'ether')).toFixed(4))\n                        return a;\n                    }, 0)\n                    surplus = isTo ? '+' : '-'\n                    type = isTo ? TransactionType.MassPayment : TransactionType.MassPayout\n                }\n                return { amount, coin, coinName, direction, date, amountUSD, surplus, type, hash, rawDate, blockNum }\n            })\n        };\n    }, [transactions, currencies, storage])\n}\nexport default useTransactionProcess;","const hostname = window.location.hostname;\nexport const BaseUrl = hostname.includes(\"localhost\") ? \"http://app.localhost/api\" : \"/api\"","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AccountCreate, AccountCreateResponse, AccountExist, AccountExistResponse, AccountInfo, CreatePassword, CreatePasswordResponse, Signin, SigninResponse, Unlock, UnlockResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const accountAPI = createApi({\n    reducerPath: 'accountAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        signIn: builder.mutation<SigninResponse, Signin>({\n            query: (data) => ({\n                url: '/account/signin',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        accountCreate: builder.mutation<AccountCreateResponse, AccountCreate>({\n            query: (data) => ({\n                url: `/account/create`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        createPassword: builder.mutation<CreatePasswordResponse, CreatePassword>({\n            query: (data) => ({\n                url: `/account/createPassword`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        accountExist: builder.mutation<AccountExistResponse, AccountExist>({\n            query: (data) => ({\n                url: `/account/isExist`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        unlock: builder.mutation<UnlockResponse, Unlock>({\n            query: (data) => ({\n                url: `/account/reLogin`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        putAccountInfo: builder.mutation<void, AccountInfo>({\n            query: (data) => ({\n                url: `/account`,\n                method: 'PUT',\n                body: data\n            })\n        }),\n        setTime: builder.mutation<void, {time: string}>({\n            query: (data) => ({\n                url: `/account/setTime`,\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getTime: builder.query<{date: string}, void>({\n            query: () => ({\n                url: `/account/time`,\n            })\n        })\n    }),\n})\n\n\nexport const { useLazyGetTimeQuery, useSetTimeMutation , useSignInMutation, useAccountCreateMutation, useCreatePasswordMutation, useAccountExistMutation, useUnlockMutation, usePutAccountInfoMutation } = accountAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { CustomerCreate, CustomerCreateResponse, GetCustomer } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const customerAPI = createApi({\n    reducerPath: 'customerAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        customerCreate: builder.mutation<CustomerCreateResponse, CustomerCreate>({\n            query: (data) => ({\n                url: '/customer/create',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        getCustomer: builder.query<CustomerCreateResponse[], GetCustomer>({\n            query: (data) => ({\n                url: `/customer/byAccount`,\n                params: data\n            })\n        }),\n\n        deleteCustomer: builder.mutation<void, number>({\n            query: (id) => ({\n                url: `/customer/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n    }),\n})\n\n\nexport const { useCustomerCreateMutation, useGetCustomerQuery, useDeleteCustomerMutation } = customerAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { CreateTeam, CreateTeamResponse, GetTeams, GetTeamsResponse, GetTeamsWithMembers, GetTeamsWithMembersResponse, UpdateTeam, UpdateTeamResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamAPI = createApi({\n  reducerPath: 'teamAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BaseUrl,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).storage?.user?.token;\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: (builder) => ({\n    createTeam: builder.mutation<CreateTeamResponse, CreateTeam>({\n      query: (data) => ({\n        url: '/team/create',\n        method: 'POST',\n        body: data\n      }),\n    }),\n\n    getTeams: builder.query<GetTeamsResponse, GetTeams>({\n      query: (data) => ({\n        url: `/team/byAccount`,\n        params: data\n      })\n    }),\n\n    getTeamsWithMembers: builder.query<GetTeamsWithMembersResponse, GetTeamsWithMembers>({\n      query: (data) => ({\n        url: `/team/byAccount/withMembers`,\n        params: data\n      })\n    }),\n\n    deleteTeam: builder.mutation<any, string>({\n      query: (id) => ({\n        url: `/team/${id}`,\n        method: 'DELETE'\n      })\n    }),\n\n    updateTeam: builder.mutation<UpdateTeamResponse, { id: string, body: UpdateTeam }>({\n      query: ({ id, body }) => ({\n        url: `/team/${id}`,\n        method: 'PATCH',\n        body: body\n      })\n    })\n  }),\n})\n\n\nexport const { useCreateTeamMutation, useLazyGetTeamsQuery, useLazyGetTeamsWithMembersQuery ,useGetTeamsWithMembersQuery, useDeleteTeamMutation, useUpdateTeamMutation } = teamAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { GetBalanceResponse, SendCelo, SendCeloResponse, SendStableToken, SendStableTokenResponse, SendMultipleTransaction, SendAltcoin, SendAltcoinResponse, GetCurrencies } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const transactionAPI = createApi({\n    reducerPath: 'transactionAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getBalance: builder.query<GetBalanceResponse, void>({\n            query: () => ({\n                url: '/transaction/balance',\n            })\n        }),\n        getCurrencies: builder.query<GetCurrencies, void>({\n            query: () => ({\n                url: '/transaction/currency',\n            })\n        }),\n        sendCelo: builder.mutation<SendCeloResponse, SendCelo>({\n            query: (data) => ({\n                url: '/transaction/sendCelo',\n                method: 'POST',\n                body: data,\n            })\n        }),\n\n        sendStableToken: builder.mutation<SendStableTokenResponse, SendStableToken>({\n            query: (data) => ({\n                url: '/transaction/sendStableCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendAltToken: builder.mutation<SendAltcoinResponse, SendAltcoin>({\n            query: (data) => ({\n                url: '/transaction/sendAltCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendMultipleTransactions: builder.mutation<void, SendMultipleTransaction>({\n            query: (data) => ({\n                url: '/transaction/multipleTran',\n                method: 'POST',\n                body: data,\n            })\n        })\n    }),\n})\n\n\nexport const { useGetBalanceQuery, useLazyGetBalanceQuery, useLazyGetCurrenciesQuery ,useGetCurrenciesQuery,  useSendCeloMutation, useSendStableTokenMutation, useSendAltTokenMutation, useSendMultipleTransactionsMutation } = transactionAPI\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AddMember, AddMemberResponse, GetTeams, GetTeamsResponse, Member, UpdateMember, UpdateMemberResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamMemberAPI = createApi({\n    reducerPath: 'teamMemberAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        addMember: builder.mutation<AddMemberResponse, AddMember>({\n            query: (data) => ({\n                url: `/team-member/add`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        getMembers: builder.query<GetTeamsResponse, { id: string, params: GetTeams }>({\n            query: ({ id, params }) => ({\n                url: `/team-member/byTeam/${id}`,\n                params: params\n            })\n        }),\n\n        getMember: builder.query<{member: Member}, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`\n            })\n        }),\n\n        deleteMember: builder.mutation<void, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n        updateMember: builder.mutation<UpdateMemberResponse, UpdateMember>({\n            query: (data) => ({\n                url: `/team-member`,\n                method: 'PUT',\n                body: data\n            })\n        })\n    }),\n})\n\n\nexport const { useAddMemberMutation, useLazyGetMemberQuery, useGetMembersQuery, useLazyGetMembersQuery, useDeleteMemberMutation, useUpdateMemberMutation } = teamMemberAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { GetTransactions } from '../../types/sdk';\n\n\nexport const BlockScoutApi = createApi({\n\tbaseQuery: fetchBaseQuery({\n\t\tbaseUrl: 'https://explorer.celo.org/api'\n\t}),\n\tendpoints: (builder) => ({\n\t\tgetTransactions: builder.query<GetTransactions, string>({\n\t\t\tquery: (data) => ({\n\t\t\t\turl: `?module=account&action=tokentx&address=`+data\n\t\t\t})\n\t\t})\n\t})\n});\n\nexport const { useGetTransactionsQuery, useLazyGetTransactionsQuery } = BlockScoutApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { RootState } from '../store';\n\nexport const swapAPI = createApi({\n    reducerPath: 'swapApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getConvertableTokenAmount: builder.mutation<{minimumAmountOut: string}, {input: string, output: string, amount: string}>({\n            query: (data) => ({\n                url: '/transaction/minimumAmountOut',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        swapCoins: builder.mutation<void, {input: string, output: string, amount: string, phrase: string}>({\n            query: (data) =>({\n                url: '/transaction/swap',\n                method: 'POST',\n                body: data\n            })\n        })    \n    }),\n})\n\nexport const {useGetConvertableTokenAmountMutation, useSwapCoinsMutation} = swapAPI\n\n\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\ninterface NotificatinoState {\n    onSuccess: boolean;\n    onError: boolean;\n    onErrorText: string;\n    notificationSeen: number;\n}\n\nconst initialState: NotificatinoState = {\n    onSuccess: false,\n    onError: false,\n    onErrorText: '',\n    notificationSeen: 0\n}\n\nexport const notificationSlice = createSlice({\n    name: 'notification',\n    initialState,\n    reducers: {\n        changeError: (state, action: PayloadAction<{activate: boolean; text?: string}>) => {\n            state.onErrorText = action.payload.text || \"Something went wrong\";\n            state.onError = action.payload.activate;\n        },\n        changeSuccess: (state, action: PayloadAction<boolean>) => {\n            state.onSuccess = action.payload;\n        },\n        changeNotificationSeen: (state, action: PayloadAction<number>) => {\n            state.notificationSeen = action.payload;\n        }\n    },\n})\n\nexport const { changeError, changeSuccess, changeNotificationSeen } = notificationSlice.actions\n\nexport const selectError = (state: RootState) => state.notification.onError\nexport const selectErrorText = (state: RootState) => state.notification.onErrorText\nexport const selectSuccess = (state: RootState) => state.notification.onSuccess\n\nexport default notificationSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\nimport { AltCoins } from '../../types/coins';\nimport Initalization from '../../utility/init';\nimport { RootState } from '../store';\n\nexport interface ICurrencyInternal {\n\tprice?: number;\n\tpercent_24?: number;\n\tcurrent_balance?: number;\n}\n\nexport interface IBalanceItem {\n\tamount: number;\n\tper_24: number;\n\tpercent: number;\n\tcoins: AltCoins;\n\treduxValue: number;\n}\n\ninterface IBalanceMembers {\n\tCELO: IBalanceItem | undefined;\n\tcUSD: IBalanceItem | undefined;\n\tcEUR: IBalanceItem | undefined;\n\tUBE: IBalanceItem | undefined;\n\tMOO: IBalanceItem | undefined;\n\tMOBI: IBalanceItem | undefined;\n\tPOOF: IBalanceItem | undefined;\n}\n\ninterface ICurrency {\n\tceloCoins: ICoinMembers;\n\tbalances: IBalanceMembers;\n}\n\nexport interface ICoinMembers {\n\tCELO: ICurrencyInternal | undefined;\n\tcUSD: ICurrencyInternal | undefined;\n\tcEUR: ICurrencyInternal | undefined;\n\tUBE: ICurrencyInternal | undefined;\n\tMOO: ICurrencyInternal | undefined;\n\tMOBI: ICurrencyInternal | undefined;\n\tPOOF: ICurrencyInternal | undefined;\n}\n\nconst State: ICurrency = {\n\tceloCoins: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined\n\t},\n\tbalances: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined\n\t}\n};\n\nexport const CurrencySlice = createSlice({\n\tname: 'currencySlice',\n\tinitialState: State,\n\treducers: {\n\t\tupdateAllCurrencies: (state: ICurrency, action) => {\n\t\t\tif(!action.payload) return\n\t\t\tconst [ celo, cusd, ceur, ube, moo, mobi, poof ]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { percent_24: celo.percent_24, price: celo.price },\n\t\t\t\tcUSD: { percent_24: cusd.percent_24, price: cusd.price },\n\t\t\t\tcEUR: { percent_24: ceur.percent_24, price: ceur.price },\n\t\t\t\tUBE: { percent_24: ube.percent_24, price: ube.price },\n\t\t\t\tMOO: { percent_24: moo.percent_24, price: moo.price },\n\t\t\t\tMOBI: { percent_24: mobi.percent_24, price: mobi.price },\n\t\t\t\tPOOF: { percent_24: poof.percent_24, price: poof.price }\n\t\t\t};\n\t\t},\n\t\tupdateBalance: (state: ICurrency, action) => {\n\t\t\tif(!action.payload) return\n\t\t\tconst [ celo, cusd, ceur, ube, moo, mobi, poof ]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { ...state.celoCoins.CELO, current_balance: celo.current_balance },\n\t\t\t\tcUSD: { ...state.celoCoins.cUSD, current_balance: cusd.current_balance },\n\t\t\t\tcEUR: { ...state.celoCoins.cEUR, current_balance: ceur.current_balance },\n\t\t\t\tUBE: { ...state.celoCoins.UBE, current_balance: ube.current_balance },\n\t\t\t\tMOO: { ...state.celoCoins.MOO, current_balance: moo.current_balance },\n\t\t\t\tMOBI: { current_balance: mobi.current_balance },\n\t\t\t\tPOOF: { current_balance: poof.current_balance }\n\t\t\t};\n\t\t},\n\t\tupdateUserBalance: (state: ICurrency, action) => {\n\t\t\tif(!action.payload) return\n\t\t\tconst [ celo, cusd, ceur, ube, moo, mobi, poof ]: IBalanceItem[] = action.payload;\n\t\t\tstate.balances = {\n\t\t\t\tCELO: {\n\t\t\t\t\tamount: celo.amount,\n\t\t\t\t\tper_24: celo.per_24,\n\t\t\t\t\tpercent: celo.percent,\n\t\t\t\t\tcoins: celo.coins,\n\t\t\t\t\treduxValue: celo.reduxValue\n\t\t\t\t},\n\t\t\t\tcUSD: {\n\t\t\t\t\tamount: cusd.amount,\n\t\t\t\t\tper_24: cusd.per_24,\n\t\t\t\t\tpercent: cusd.percent,\n\t\t\t\t\tcoins: cusd.coins,\n\t\t\t\t\treduxValue: cusd.reduxValue\n\t\t\t\t},\n\t\t\t\tcEUR: {\n\t\t\t\t\tamount: ceur.amount,\n\t\t\t\t\tper_24: ceur.per_24,\n\t\t\t\t\tpercent: ceur.percent,\n\t\t\t\t\tcoins: ceur.coins,\n\t\t\t\t\treduxValue: ceur.reduxValue\n\t\t\t\t},\n\t\t\t\tUBE: {\n\t\t\t\t\tamount: ube.amount,\n\t\t\t\t\tper_24: ube.per_24,\n\t\t\t\t\tpercent: ube.percent,\n\t\t\t\t\tcoins: ube.coins,\n\t\t\t\t\treduxValue: ube.reduxValue\n\t\t\t\t},\n\t\t\t\tMOO: {\n\t\t\t\t\tamount: moo.amount,\n\t\t\t\t\tper_24: moo.per_24,\n\t\t\t\t\tpercent: moo.percent,\n\t\t\t\t\tcoins: moo.coins,\n\t\t\t\t\treduxValue: moo.reduxValue\n\t\t\t\t},\n\t\t\t\tMOBI: {\n\t\t\t\t\tamount: mobi.amount,\n\t\t\t\t\tper_24: mobi.per_24,\n\t\t\t\t\tpercent: mobi.percent,\n\t\t\t\t\tcoins: mobi.coins,\n\t\t\t\t\treduxValue: mobi.reduxValue\n\t\t\t\t},\n\t\t\t\tPOOF: {\n\t\t\t\t\tamount: poof.amount,\n\t\t\t\t\tper_24: poof.per_24,\n\t\t\t\t\tpercent: poof.percent,\n\t\t\t\t\tcoins: poof.coins,\n\t\t\t\t\treduxValue: poof.reduxValue\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n});\n\nexport const { updateAllCurrencies, updateUserBalance } = CurrencySlice.actions;\n\nexport const SelectCurrencies = (state: RootState): ICoinMembers => state.currencyandbalance.celoCoins;\nexport const SelectBalances = (state: RootState): IBalanceMembers => state.currencyandbalance.balances;\nexport const SelectCelo = (state: RootState) => state.currencyandbalance.celoCoins.CELO;\nexport const SelectCusd = (state: RootState) => state.currencyandbalance.celoCoins.cUSD;\nexport const SelectCeur = (state: RootState) => state.currencyandbalance.celoCoins.cEUR;\n\nexport default CurrencySlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { GetTransactions } from '../../types/sdk/blockscout';\nimport { RootState } from '../store';\n\ninterface InitialTransaction {\n\ttransactions: GetTransactions | undefined;\n}\n\nconst initialState: InitialTransaction = {\n\ttransactions: undefined\n};\n\nexport const TransactionAPI = createSlice({\n\tname: 'transactions',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetTransactions: (state, action) => {\n\t\t\tstate.transactions = action.payload;\n\t\t}\n\t}\n});\n\nexport const { setTransactions } = TransactionAPI.actions;\nexport const SelectTransactions = (state: RootState) => state.transactions.transactions;\nexport default TransactionAPI.reducer;\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLazyGetBalanceQuery, useLazyGetCurrenciesQuery, useLazyGetTransactionsQuery } from '../redux/api'\nimport { updateAllCurrencies, updateUserBalance } from '../redux/reducers/currencies'\nimport { selectStorage } from '../redux/reducers/storage'\nimport { setTransactions } from '../redux/reducers/transactions'\nimport { Coins } from '../types/coins'\n\nconst useRefetchData = () => {\n    const dispatch = useDispatch()\n    const storage = useSelector(selectStorage)\n    const [currencyTrigger, { data: currencyData }] = useLazyGetCurrenciesQuery()\n    const [balanceTrigger, { data: balanceData }] = useLazyGetBalanceQuery()\n    const [transactionTrigger, { data: transactionData }] = useLazyGetTransactionsQuery()\n\n    const fetching = () => {\n        currencyTrigger()\n        balanceTrigger()\n        transactionTrigger(storage!.accountAddress)\n\n        if (currencyData) {\n            const updatedCurrency = currencyData.data.map(d => ({\n                price: d.price,\n                percent_24: d.percent_24\n            }))\n\n            dispatch(updateAllCurrencies(\n                updatedCurrency\n            ))\n\n            const [Celo, Cusd, Ceur, Ube, Moo, Mobi, Poof] = updatedCurrency;\n\n            const celo = Celo\n            const cusd = Cusd\n            const ceur = Ceur\n            const ube = Ube\n            const moo = Moo\n            const mobi = Mobi\n            const poof = Poof\n\n            if (transactionData) {\n                dispatch(setTransactions(transactionData))\n            }\n\n            if (balanceData) {\n                const balance = balanceData;\n                if (balance && celo && cusd && ceur && ube && moo && mobi && poof) {\n                    const pCelo = parseFloat(balance.celoBalance);\n                    const pCusd = parseFloat(balance.cUSDBalance);\n                    const pCeur = parseFloat(balance.cEURBalance);\n                    const pUbe = parseFloat(balance.UBE);\n                    const pMoo = parseFloat(balance.MOO);\n                    const pMobi = parseFloat(balance.MOBI);\n                    const pPoof = parseFloat(balance.POOF);\n\n                    const celoPrice = pCelo * (celo.price ?? 0);\n                    const cusdPrice = pCusd * (cusd.price ?? 0);\n                    const ceurPrice = pCeur * (ceur.price ?? 0);\n                    const ubePrice = pUbe * (ube.price ?? 0);\n                    const mooPrice = pMoo * (moo.price ?? 0);\n                    const mobiPrice = pMobi * (mobi.price ?? 0);\n                    const poofPrice = pPoof * (poof.price ?? 0);\n\n                    const total = celoPrice + cusdPrice + mooPrice + + ceurPrice + ubePrice + mobiPrice + poofPrice;\n\n                    const updatedBalance = [\n                        { amount: pCelo, per_24: Celo.percent_24, percent: (celoPrice * 100) / total, coins: Coins.celo, reduxValue: celo.price },\n                        { amount: pCusd, per_24: Cusd.percent_24, percent: (cusdPrice * 100) / total, coins: Coins.cUSD, reduxValue: cusd.price },\n                        { amount: pCeur, per_24: Ceur.percent_24, percent: (ceurPrice * 100) / total, coins: Coins.cEUR, reduxValue: ceur.price },\n                        { amount: pUbe, per_24: Ube.percent_24, percent: (ubePrice * 100) / total, coins: Coins.UBE, reduxValue: ube.price },\n                        { amount: pMoo, per_24: Moo.percent_24, percent: (mooPrice * 100) / total, coins: Coins.MOO, reduxValue: moo.price },\n                        { amount: pMobi, per_24: Mobi.percent_24, percent: (mobiPrice * 100) / total, coins: Coins.MOBI, reduxValue: mobi.price },\n                        { amount: pPoof, per_24: Poof.percent_24, percent: (poofPrice * 100) / total, coins: Coins.POOF, reduxValue: poof.price }\n                    ]\n\n                    dispatch(updateUserBalance(updatedBalance))\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            fetching()\n        }, 10000)\n\n        return () => clearInterval(timer)\n    })\n\n    return true;\n}\n\nexport default useRefetchData;","import { IoIosArrowDown, IoMdNotificationsOutline } from 'react-icons/io';\nimport { BsSearch } from 'react-icons/bs'\nimport { useState, useEffect, useCallback, useRef, useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { Squash as Hamburger } from 'hamburger-react'\nimport { selectToggle, setMenu } from '../../redux/reducers/toggles';\nimport NotificationCointainer from '../../components/notification'\nimport useRefetchData from '../../hooks/useRefetchData';\n\n\nconst Navbar = () => {\n    const storage = useAppSelector(selectStorage)\n    const menuBar = useAppSelector(selectToggle)\n    const dispatch = useAppDispatch()\n    useRefetchData()\n\n    return <div className=\"grid grid-cols-3 md:grid-cols-5 gap-12\">\n        <div className=\"md:hidden pl-4\">\n            <div className=\"inline-block\" onClick={() => dispatch(setMenu(!menuBar.mobileMenu))}>\n                <Hamburger toggled={menuBar.mobileMenu} hideOutline={true} />\n            </div>\n        </div>\n        <div className=\"h-[50px] flex justify-center md:justify-start items-center md:pl-4 lg:pl-14\">\n            <img src=\"/logo.png\" alt=\"\" width=\"150\" />\n        </div>\n        <div className=\"search col-span-2 hidden md:block\">\n            <div className=\"w-full h-12 shadow backdrop-blur bg-gray-50 rounded-lg flex items-center pl-3 gap-3\">\n                <BsSearch />\n                <input type=\"text\" placeholder={'Search'} className=\"flex-grow bg-transparent outline-none\" />\n            </div>\n        </div>\n        <div className=\"actions hidden md:flex items-center justify-evenly md:col-span-2\">\n            {storage ? <Visitcard name=\"Remox\" address={storage.accountAddress} /> : <ClipLoader />}\n            <NavbarDropdown />\n            <div className=\"relative\">\n                <NotificationCointainer />\n            </div>\n        </div>\n    </div>\n}\n\nexport const Visitcard = ({ name, address }: { name: string, address: string }) => <div className=\"px-5 py-1 flex flex-col bg-gray-50 rounded-xl cursor-pointer\" onClick={() => navigator.clipboard.writeText(address.trim())}>\n    <h3 className=\"text-xl\">{name}</h3>\n    <p className=\"text-xs\" >{address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')}</p>\n</div>\n\nconst Li = ({ children, link }: { children: any, link: string }) => <li className=\"text-left border px-3 py-2 bg-white hover:text-primary hover:border-b-primary cursor-pointer first:rounded-t-xl last:rounded-b-xl\"><Link to={link} className='flex gap-2'>{children}</Link></li>\n\nexport const NavbarDropdown = () => {\n    const [isOpen, setOpen] = useState(false)\n    const divRef = useRef<HTMLDivElement>(null)\n    const click = useCallback((e) => {\n        if (isOpen && divRef.current && !divRef.current.contains(e.target)) {\n            setOpen(false)\n        }\n    }, [isOpen])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, divRef])\n\n    return <div className=\"relative\">\n        <button onClick={() => setOpen(!isOpen)} className=\"bg-primary text-white px-6 py-3 rounded-xl flex items-center gap-x-2\">\n            Move Crypto\n            <div>\n                <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n            </div>\n        </button>\n        {isOpen && <div ref={divRef} className=\"absolute w-[150%] rounded-2xl sm:-left-1/4  -bottom-1 translate-y-full shadow-xl\">\n            <ul>\n                <Li link={'/pay'}><PaySVG /> Pay Someone</Li>\n                <Li link=\"/masspayout\"><MassPayoutSVG />Mass Payout</Li>\n                <Li link=''><RequestMoneySVG /> Request Money</Li>\n                <Li link=''><FundSVG /> Add Funds</Li>\n            </ul>\n        </div>\n        }\n    </div>\n}\n\nconst PaySVG = () => <img src='/icons/senticon.svg' alt=\"\" />\n\nconst MassPayoutSVG = () => <img src='/icons/masspayouticon.svg' alt=\"\" />\n\nconst RequestMoneySVG = () => <img src='/icons/moneyrequesticon.svg' alt=\"\" />\n\nconst FundSVG = () => <img src='/icons/addfundds.svg' alt=\"\" />\n\nexport default Navbar;","import { Link, NavLink } from 'react-router-dom'\nimport { BiLogOut } from 'react-icons/bi'\nimport { useDispatch } from 'react-redux'\nimport { removeStorage } from '../../redux/reducers/storage'\nimport { setMenu } from '../../redux/reducers/toggles'\n\nconst Li = ({ children, onClick, className }: { children?: Array<any>, onClick?: () => void, className?: string }) => <li onClick={onClick} className={`mb-6 text-left font-light text-lg flex gap-3 cursor-pointer ${className}`}>{children}</li>\nconst Sidebarlist = () => {\n    const dispatch = useDispatch()\n    return <>\n        <ul>\n            <NavLink to=\"/dashboard\" exact={true} activeClassName='text-primary'><Li><DashboardSVG />Dashboard</Li></NavLink>\n            <Link to=\"/masspayout\"><Li><PayrollSVG />Payroll</Li></Link>\n            <NavLink to=\"/dashboard/transactions\" activeClassName='text-primary'><Li><TransactionsSVG />Transactions</Li></NavLink>\n            <NavLink to=\"/dashboard/swap\" activeClassName='text-primary'><Li><SwapSVG />Swap</Li></NavLink>\n            <NavLink to=\"/dashboard/assets\" activeClassName='text-primary'><Li><AssetsSVG />Assets</Li></NavLink>\n            <NavLink to=\"/dashboard/teams\" activeClassName='text-primary'><Li><TeamsSVG />Teams</Li></NavLink>\n            <Li><SettingSVG /> <div className=\"relative after:right-0 after:translate-x-[110%] after:translate-y-1/2 after:top-0 after:text-xs after:text-greylish after:content-['Soon'] after:w-10 after:h-5 after:absolute\">Settings</div></Li>\n            <Li onClick={() => {\n                dispatch(setMenu(false))\n                dispatch(removeStorage())\n            }}><LogoutSVG />Log Out</Li>\n        </ul>\n    </>\n}\n\nconst DashboardSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/dashboardicon.svg' alt='Dashboard' />\n\nconst PayrollSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/runpayrollicon.svg' alt=\"Payroll\" />\n\nconst TransactionsSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/Transactionsicon.svg' alt=\"Transaction\" />\n\nconst SwapSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/swap.svg' alt=\"Swap\" />\n\nconst AssetsSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/stocksicon.svg' alt=\"Asset\" />\n\nconst TeamsSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/teamlogo.svg' alt=\"Teams\" />\n\nconst SettingSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/settings.svg' alt=\"\" />\n\nconst LogoutSVG = () => <BiLogOut className=\"w-[28px] h-[28px]\" />\n\nexport default Sidebarlist;","import Siderbarlist from '../../components/dashboard/sidebarlist'\n\nconst Sidebar = () => {\n\n    return <div className=\"flex flex-col gap-14 pl-4 lg:pl-10\">\n\n\n        {/* <div>\n            <Dropdown selected={{ name: \"Remox\", address: \"0x0fd545769A02ee82Fbf6C549B7865C893daEe3E4\" }} />\n        </div> */}\n        <div className=\"lg:pl-4\">\n            <Siderbarlist />\n        </div>\n\n    </div>\n\n}\n\nexport default Sidebar;","import { useAppDispatch } from \"../../redux/hooks\"\nimport { setMenu } from \"../../redux/reducers/toggles\"\nimport {motion} from 'framer-motion'\nimport { useEffect } from \"react\"\n\n\nconst MobileMenu = ({ children }: { children: JSX.Element | JSX.Element[] | string }) => {\n    const dispatch = useAppDispatch()\n    useEffect(() => {\n        document.querySelector('body')!.style.overflowY = \"hidden\"\n        document.querySelector('body')!.style.height = \"100vh\"\n        return () => {\n            document.querySelector('body')!.style.overflowY = \"\"\n            document.querySelector('body')!.style.height = \"auto\"\n        }\n    }, [])\n    return <>\n        <div className=\"absolute w-screen h-screen z-50 bg-white bg-opacity-60\" onClick={()=>{\n            dispatch(setMenu(false))\n        }}></div>\n        <motion.div initial={{x: -500}} animate={{x: 0}} transition={{type: 'tween'}} exit={{x: -500}} className=\"w-[50vw] fixed -translate-x-50 h-full bg-white z-[100] border-r-2\">\n            <div className=\"h-full flex flex-col items-center justify-center\">\n                {children}\n            </div>\n        </motion.div>\n    </>\n}\n\nexport default MobileMenu","import Navbar, { NavbarDropdown, Visitcard } from '../../layouts/dashboard/navbar'\nimport Sidebar from '../../layouts/dashboard/sidebar';\nimport MobileMenu from '../../layouts/dashboard/mobileMenu'\nimport Siderbarlist from '../../components/dashboard/sidebarlist'\nimport { useAppSelector } from '../../redux/hooks';\nimport { selectToggle } from '../../redux/reducers/toggles';\nimport { AnimatePresence } from 'framer-motion';\nimport { IoMdNotificationsOutline } from 'react-icons/io';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { ClipLoader } from 'react-spinners';\nimport NotificationCointainer from '../../components/notification';\n\nconst Dashboard = ({ children }: { children?: JSX.Element | JSX.Element[] }) => {\n    const toggle = useAppSelector(selectToggle)\n    const storage = useAppSelector(selectStorage)\n\n    return <>\n        <AnimatePresence>\n            {toggle.mobileMenu &&\n                <MobileMenu>\n                    <div className=\"flex flex-col space-y-10 px-10\">\n                        <div className=\"actions flex flex-col items-center justify-evenly space-y-5\">\n                            {storage ? <Visitcard name=\"Remox\" address={storage.accountAddress} /> : <ClipLoader />}\n                            <NavbarDropdown />\n                            <div className=\"relative\">\n                                <NotificationCointainer />\n                            </div>\n                        </div>\n                        <Siderbarlist />\n                    </div>\n                </MobileMenu>\n            }\n        </AnimatePresence>\n        <div className=\"flex flex-col pt-6 gap-16\">\n            <Navbar></Navbar>\n            <div className=\"grid grid-cols-2 md:grid-cols-11 md:gap-12\">\n                <div className=\"hidden md:block md:col-span-2\"><Sidebar /></div>\n                <div className=\"col-span-11 md:col-span-8 pl-2 md:pl-7 pr-2\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Dashboard;","import { IoIosArrowDown } from 'react-icons/io'\nimport { Dispatch, forwardRef, useEffect, useRef, useState } from 'react'\nimport { generate } from 'shortid'\nimport { DropDownItem } from '../types/dropdown'\nimport { MouseEventHandler } from 'react'\nimport { CoinsURL } from '../types/coins'\nimport { ClipLoader } from 'react-spinners'\n\nconst Li = forwardRef<HTMLLIElement, { children: Array<any> | any, onClick: MouseEventHandler, className: string }>(({ children, onClick, className }, ref) => <li ref={ref} onClick={onClick} className={`${className} text-left border px-3 py-2 bg-white hover:bg-gray-200 cursor-pointer`}>{children}</li>)\n\nconst Viewer = ({ displayName, name, address, coinUrl, className, disableAddressDisplay }: { displayName?: string, name: string, address?: string, coinUrl?: CoinsURL, className?: string, disableAddressDisplay?: boolean }) => <div className=\"flex flex-col\">\n    <div className=\"flex flex-col\">\n        {displayName && <div className=\"pl-2 items-center text-sm text-greylish opacity-80\">\n            {displayName}\n        </div>}\n        <div className=\"text-left flex space-x-2 items-center\">\n            <div><img src={coinUrl} className={coinUrl ? `w-[20px] h-[20px]` : ''} alt=\"\" /></div>\n            <div className={`${className ?? ''} font-normal truncate`} title={name}>{name}</div>\n        </div>\n    </div>\n    {!disableAddressDisplay && <div className={`text-left text-[10px] text-gray-500`}>{!address?.startsWith('0x') ? address : address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')}</div>}\n</div>\n\nconst Dropdown = ({ selected, list, nameActivation = false, onSelect, className, loader = false, disableAddressDisplay = false, parentClass = '', childClass = '', displayName }: { disableAddressDisplay?: boolean, parentClass?: string, className?: string, selected: DropDownItem, list: Array<DropDownItem>, nameActivation?: boolean, onSelect?: Dispatch<DropDownItem>, loader?: boolean, childClass?: string, displayName?: string }) => {\n    const [isOpen, setOpen] = useState(false)\n    const liRef = useRef<HTMLLIElement>()\n    const [liHeight, setLiHeight] = useState(0)\n\n    useEffect(() => {\n        if (liRef.current && liHeight === 0) {\n            setLiHeight(liRef.current.offsetHeight)\n        }\n    })\n\n    return (\n        <div className={`relative ${parentClass}`}>\n            <div onClick={() => list?.length > 0 ? setOpen(!isOpen) : null} className={`flex ${className || ''} ${loader ? 'justify-center' : 'justify-between'} items-center border rounded-xl ${isOpen && 'rounded-b-none'} py-2 px-3 cursor-pointer`}>\n                {!loader ? <div className=\"truncate\">\n                    {Viewer({ name: selected.name, address: selected?.address ?? selected?.amount, coinUrl: selected?.coinUrl, className: selected?.className, disableAddressDisplay: disableAddressDisplay, displayName })}\n                </div> : <ClipLoader />}\n                {list && list.length > 0 && <div>\n                    <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n                </div>}\n            </div>\n            {isOpen && <div className=\"absolute left-0 bottom-0 translate-y-full z-10 w-full overflow-hidden\">\n                <ul id=\"ala\" className=\"flex flex-col overflow-y-auto \" style={list.length > 5 ?\n                    { height: window.outerWidth > 768?`${liHeight * 5}px`:`${liHeight * 3}px` }\n                    :\n                    { height: 'auto' }\n                }>\n                    {list?.filter((w) => {\n                        if (!nameActivation) {\n                            return w?.address !== selected?.address\n                        } else if (w.name) {\n                            return w?.name !== selected?.name\n                        } else if (w.id) {\n                            return w?.id !== selected?.id\n                        }\n\n                    })?.map((w, i) => {\n                        const obj: { ref?: any } = {}\n                        if (i === 0) {\n                            obj.ref = liRef\n                        }\n                        return <Li {...obj} key={generate()} className={childClass} onClick={() => { onSelect!(w); setOpen(false) }}>\n                            {Viewer({ name: w?.name, address: w?.address ?? w?.amount, coinUrl: w?.coinUrl, className: w?.className, disableAddressDisplay })}\n                        </Li>\n                    }\n                    )}\n                </ul>\n            </div>}\n        </div>\n    )\n}\n\nexport default Dropdown;","import { Dispatch } from \"react\";\n\nconst Success = ({ onClose, text = \"Payment Successfully Completed\", className }: { onClose: Dispatch<boolean>, text?: string, className?: string }) => {\n\n    return <div className={`absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 ${className}`}>\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/success.svg\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{text}</div>\n        <button className=\"px-16 py-4 text-white bg-primary font-bold shadow-xl rounded-xl\" onClick={() => onClose(false)}>\n            Close\n        </button>\n    </div>\n}\n\n\nexport default Success;","import { Dispatch } from \"react\";\nimport { useAppSelector } from \"../redux/hooks\";\nimport { selectErrorText } from \"../redux/reducers/notificationSlice\";\n\n\nconst Error = ({ onClose }: { onClose: Dispatch<boolean>}) => {\n    const title = useAppSelector(selectErrorText)\n\n    return <div className=\"absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8\">\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/icons/error.svg\" width=\"200\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{title}</div>\n        <button className=\"px-16 py-4 text-white bg-primary font-bold shadow-xl\" onClick={() => onClose(false)}>\n            Close\n        </button>\n    </div>\n}\n\n\nexport default Error;","import { csv } from 'd3-fetch'\n\nclass CSV {\n    static async Import(file: File): Promise<string[][]> {\n        return new Promise(async (resolve, reject) => {\n\n            const url = URL.createObjectURL(file)\n\n            const res = await csv(url)\n            if (res) {\n                if (res.columns[0].toLowerCase().includes(\"name;address;amount;coin\")) {\n                    const result: string[][] = []\n                    for (let index = 0; index < res.length; index++) {\n                        const data = Object.values(res[index])[0]?.split(';')\n                        if (data && data.length > 0) {\n                            result.push(data)\n                        }else{\n                            reject(new Error(`Row is null`))\n                        }\n                    }\n                    resolve(result)\n                } else {\n                    reject(new Error(\"Columns are invalid. Please, set the column order like that: Name Address Amount Coin\"))\n                }\n            } else {\n                reject(new Error(`Cannot import an empty file`))\n            }\n        })\n    }\n}\n\nexport default CSV;","import { Dispatch, useEffect } from \"react\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport Dropdown from \"../dropdown\";\n\n\nconst Input = ({ index, name, address, selectedWallet, setWallet, setIndex, overallIndex, amount }: { index: number, name: Array<string>, address: Array<string>, selectedWallet: DropDownItem[], setWallet: Dispatch<DropDownItem[]>, setIndex: Dispatch<number>, overallIndex: number, amount: Array<string> }) => {\n\n    useEffect(() => {\n        if (!selectedWallet[index]) {\n            setWallet([...selectedWallet, Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]])\n        }\n    }, [])\n\n    return <>\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Name\" defaultValue={name[index]} type=\"text\" name={`name__${index}`} onChange={(e) => name[index] = e.target.value} required />\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Address\" defaultValue={address[index]} type=\"text\" name={`address__${index}`} onChange={(e) => address[index] = e.target.value} required />\n        <div className=\"col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid grid-cols-[50%,50%]\">\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n            <input className=\"outline-none\" placeholder=\"Amount\" defaultValue={amount[index]} type=\"number\" name={`amount__${index}`} onChange={(e) => amount[index] = e.target.value} required step={'any'} min={0} />\n        </div>\n        <div className=\"flex items-center\">\n            {overallIndex > 1 && <BsFillTrashFill className=\"text-red-500 cursor-pointer\" onClick={()=>{\n                name[index] = '';\n                address[index] = '';\n                amount[index] = '' \n                const val = [...selectedWallet];\n                val[index] = Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]\n                setWallet(val);\n                setIndex(overallIndex-1)\n            }}/>}\n        </div>\n    </>\n}\nexport default Input;","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"../../components/dropdown\";\nimport { generate } from 'shortid'\nimport { useHistory } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { MultipleTransactionData } from \"../../types/sdk\";\nimport CSV from '../../utility/CSV'\nimport { useGetBalanceQuery, useSendCeloMutation, useSendStableTokenMutation, useSendMultipleTransactionsMutation, useSendAltTokenMutation } from \"../../redux/api\";\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport Input from \"../../components/pay/payinput\";\nimport { AltCoins, AltcoinsList, Coins, CoinsNameVisual, StableTokens, TransactionFeeTokenName } from \"../../types/coins\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\";\nimport { useLazyGetTransactionsQuery } from '../../redux/api/blockscout'\nimport { setTransactions } from \"../../redux/reducers/transactions\";\n\n\nconst Pay = () => {\n\n    const storage = useSelector(selectStorage)\n    const isError = useSelector(selectError)\n    const dispatch = useAppDispatch()\n    const router = useHistory();\n\n    const { data, refetch } = useGetBalanceQuery()\n\n    const [sendCelo] = useSendCeloMutation()\n    const [sendStableToken] = useSendStableTokenMutation()\n    const [sendMultiple] = useSendMultipleTransactionsMutation()\n    const [sendAltcoin] = useSendAltTokenMutation()\n\n\n    const [index, setIndex] = useState(1)\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n\n    const nameRef = useRef<Array<string>>([])\n    const addressRef = useRef<Array<string>>([])\n    const [wallets, setWallets] = useState<DropDownItem[]>([])\n    const amountRef = useRef<Array<string>>([])\n\n    const [csvImport, setCsvImport] = useState<string[][]>([]);\n\n    const fileInput = useRef<HTMLInputElement>(null);\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n    useEffect(() => {\n        if (selectedWallet && selectedWallet.coinUrl && selectedWallet.type) {\n            const val: DropDownItem[] = [];\n            for (let index = 0; index < wallets.length; index++) {\n                val.push({ name: selectedWallet.name.split(' ')[1], coinUrl: selectedWallet.coinUrl, type: selectedWallet.type })\n            }\n            setWallets(val);\n        }\n    }, [selectedWallet])\n\n    useEffect(() => {\n        if (csvImport.length > 0) {\n            const list = csvImport.filter(w=> w[0] && w[1] && w[2] && w[3])\n            for (let index = 0; index < list.length; index++) {\n                const [name, address, amount, coin] = list[index].slice(0,4)\n              \n                if (name) nameRef.current.push(name);\n                if (address) addressRef.current.push(address);\n                if (amount) amountRef.current.push(amount);\n                if (coin) {\n                    const wallet = [...wallets];\n                    wallet[index] = { ...Coins[coin as TransactionFeeTokenName], type: Coins[coin as TransactionFeeTokenName].value };\n                    setWallets(wallet)\n                }\n            }\n            setIndex((index === 1 ? 0 : index) + list.length)\n            fileInput.current!.files = new DataTransfer().files;\n        }\n    }, [csvImport])\n\n\n    useEffect(() => {\n        if (data) {\n            const coins = Object.values(Coins).map((coin: AltCoins) => ({\n                name: `${parseFloat(data[coin.responseName]).toFixed(3)} ${coin.name}`,\n                type: coin.value,\n                amount: data[coin.responseName],\n                coinUrl: coin.coinUrl,\n            }))\n            setWallets([{ name: coins[0].name.split(' ')[1], coinUrl: coins[0].coinUrl, type: coins[0].type }])\n            setSelectedWallet(coins[0])\n            setList(coins)\n        }\n    }, [data])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        setIsPaying(true)\n\n        try {\n            const result: Array<MultipleTransactionData> = []\n\n            const [nameList, addressList, amountList] = [nameRef.current, addressRef.current, amountRef.current]\n\n            if (selectedWallet && selectedWallet.type && nameList.length === addressList.length && nameList.length === amountList.length) {\n                for (let index = 0; index < nameList.length; index++) {\n                    if (addressList[index] && amountList[index] && nameList[index] && wallets[index].type) {\n                        result.push({\n                            toAddress: addressList[index],\n                            amount: amountList[index],\n                            tokenType: wallets[index].type!,\n                        })\n                    }\n                }\n            }\n\n            if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                if (result[0]!.tokenType === Coins.celo.value) {\n                    await sendCelo({\n                        toAddress: result[0].toAddress,\n                        amount: result[0].amount,\n                        phrase: storage!.encryptedPhrase\n                    }).unwrap()\n\n                } else if (result[0]!.tokenType === CoinsNameVisual.cUSD || result[0]!.tokenType === CoinsNameVisual.cEUR) {\n                    await sendStableToken({\n                        toAddress: result[0].toAddress,\n                        amount: result[0].amount,\n                        phrase: storage!.encryptedPhrase,\n                        stableTokenType: result[0].tokenType === CoinsNameVisual.cUSD ? 'cUSD' as StableTokens : 'cEUR' as StableTokens\n                    }).unwrap()\n                } else {\n                    await sendAltcoin({\n                        toAddress: result[0].toAddress,\n                        amount: result[0].amount,\n                        phrase: storage!.encryptedPhrase,\n                        altTokenType: AltcoinsList[(result[0].tokenType as AltcoinsList)]\n                    }).unwrap()\n                }\n            }\n            else if (result.length > 1) {\n                const arr: Array<MultipleTransactionData> = result.map(w => ({\n                    toAddress: w.toAddress,\n                    amount: w.amount,\n                    tokenType: w.tokenType\n                }))\n\n                await sendMultiple({\n                    multipleAddresses: arr,\n                    phrase: storage!.encryptedPhrase\n                }).unwrap()\n            }\n            setSuccess(true);\n            refetch()\n            \n\n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n        setIsPaying(false);\n    }\n\n    return <div className=\"sm:px-32\">\n        <form onSubmit={Submit}>\n            <div className=\"sm:flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"sm:min-w-[85vw] min-h-[75vh] h-auto \">\n                    <div className=\"text-left w-full\">\n                        <div>Pay Someone</div>\n                    </div>\n                    <div className=\"shadow-xl border sm:flex flex-col gap-3 gap-y-10 sm:gap-10 py-10\">\n                        <div className=\"sm:flex flex-col pl-3 sm:pl-12 sm:pr-[25%] gap-3 gap-y-10  sm:gap-10\">\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Paying From</span>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-4\">\n                                    {!(data && selectedWallet) ? <ClipLoader /> : <Dropdown onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={list} disableAddressDisplay={true} />}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex space-x-5 sm:space-x-0 sm:justify-between py-4 items-center\">\n                                    <span className=\"text-left\">Paying To</span>\n                                    <button type=\"button\" onClick={() => {\n                                        fileInput.current?.click()\n                                    }} className=\"px-2 py-1 shadow-lg border border-primary text-primary rounded-xl text-sm font-light hover:text-white hover:bg-primary\">\n                                        + Import CSV\n                                    </button>\n                                    <input ref={fileInput} type=\"file\" className=\"hidden\" onChange={(e) => e.target.files!.length > 0 ? CSV.Import(e.target.files![0]).then(e => setCsvImport(e)).catch(e => console.error(e)) : null} />\n                                </div>\n                                <div className=\"grid grid-cols-4 sm:grid-cols-[25%,40%,30%,5%] gap-5\">\n                                    {wallets.length > 0 && Array(index).fill(\" \").map((e, i) => <Input key={generate()} setIndex={setIndex} overallIndex={index} index={i} name={nameRef.current} address={addressRef.current} amount={amountRef.current} selectedWallet={wallets} setWallet={setWallets} />)}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col py-5 sm:py-0\">\n                                <div className=\"grid grid-cols-2 sm:grid-cols-4\">\n                                    <button type=\"button\" className=\"px-3 py-1 sm:px-6 sm:py-3 min-w-[200px] border-2 border-primary text-primary rounded-xl\" onClick={() => {\n                                        setIndex(index + 1)\n                                    }}>\n                                        + Add More\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center pt-5 sm:pt-0\">\n                            <div className=\"flex flex-col-reverse sm:grid grid-cols-2 w-[200px] sm:w-[400px] justify-center gap-5\">\n                                <button type=\"button\" className=\"border-2 border-primary px-3 py-2 text-primary rounded-lg\" onClick={() => router.goBack()}>Close</button>\n                                <button type=\"submit\" className=\"bg-primary px-3 py-2 text-white flex items-center justify-center rounded-lg\">{isPaying ? <ClipLoader /> : 'Pay'}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: val, text: '' }))} />}\n    </div>\n}\n\n\n\nexport default Pay;","import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"../redux/reducers/storage\";\n\n\nconst Home = () => {\n    const storage = useSelector(selectStorage)\n\n\n    return <>\n        <section className=\"flex justify-center items-center w-full h-screen\">\n            <div className=\"w-[800px] h-[600px] bg-[#eeeeee] bg-opacity-40 flex flex-col justify-center items-center gap-14\">\n                <div className=\"w-[200px] sm:w-[400px] flex flex-col items-center justify-center gap-10\">\n                    <img src=\"/logo.png\" alt=\"\" className=\"w-full\"/>\n                    <span className=\"font-light text-greylish text-center\">All-in-One Tool For Crypto Treasury Management</span>\n                </div>\n                <div className=\"flex flex-col gap-5\">\n                    <Link to={storage ? { pathname: '/dashboard' } : { pathname: '/import' }} className=\"text-center\">\n                        <button className=\"border-2 bg-white text-primary border-primary shadow-xl px-8 py-3 rounded-xl\">Enter App</button>\n                    </Link>\n                    <Link to=\"/create\" className=\"text-center\">\n                        <button className=\"border-2 bg-primary text-white shadow-xl px-8 py-3 rounded-xl\">Create Account</button>\n                    </Link>\n                </div>\n            </div>\n        </section>\n    </>\n\n};\n\nexport default Home;","const Header = ()=> <header className=\"flex md:px-40 h-[75px] justify-center md:justify-start items-center absolute top-0 w-full\">\n    <div>\n        <img src=\"/logo.png\" alt=\"\" className=\"w-[150px]\" />\n    </div>\n</header>\n\n\nexport default Header;","import { MdDone } from 'react-icons/md'\nimport { VscError } from 'react-icons/vsc'\nimport { Dispatch, useEffect, useState } from 'react'\n\n// Input in SET\nconst Input = ({ title, name, type = \"text\", validation, limit = 0, required = false, className = \"\"}: { title: string, name: string, type?: string, validation?: Dispatch<boolean>, limit?: number, required?: boolean, className?: string}) => {\n    const [password, setPassword] = useState<string>();\n    const [repeatPassword, setRepeatPassword] = useState<string>();\n\n    useEffect(() => {\n        if (validation) {\n            if (repeatPassword && password && repeatPassword === password) {\n                validation(true);\n            } else {\n                validation(false);\n            }\n        }\n    }, [repeatPassword, password])\n    return <>\n        <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{title}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={name} autoComplete='new-password' minLength={limit} className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setPassword(e.target.value);\n                }} required={required} />\n            </div>\n        </div>\n        {type === \"password\" ? <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{'Repeat Password'}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={'repeatPassword'} autoComplete='new-password' className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setRepeatPassword(e.target.value);\n                }} required />\n                {repeatPassword && password && <div>\n                    {repeatPassword === password ? <MdDone className=\"text-green-600\" /> : <VscError className=\"text-red-600\" />}\n                </div>}\n            </div>\n        </div> : null}\n    </>\n}\n\nexport default Input;","import { useMemo, Dispatch } from 'react';\nimport Input from '../input'\nimport { useHistory } from 'react-router-dom'\nimport { generate } from 'shortid'\nimport { AccountCreate } from '../../types/sdk';\nimport { SyntheticEvent } from 'react';\nimport { PassDataFromSetToPhrase } from '../../types/create'\nimport { useAccountCreateMutation } from '../../redux/api/account';\nimport { ClipLoader } from 'react-spinners';\n\n// SET Component\nconst Set = ({ setData }: { setData: Dispatch<PassDataFromSetToPhrase> }) => {\n\n    const [createAccount, { isLoading }] = useAccountCreateMutation()\n\n\n    const router = useHistory()\n\n    const list = useMemo<Array<{ title: string, type?: string, name: string }>>(() => [\n        { title: \"First Name\", name: \"userName\" }, { title: \"Last Name\", name: \"surname\" },\n        { title: \"Organization Name\", name: \"companyName\" }, { title: \"Password\", name: \"password\", type: \"password\", limit: 6 },\n    ], [])\n\n    const create = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLFormElement\n\n        if (target[\"password\"].value !== target[\"repeatPassword\"].value) return\n\n        const inputData: AccountCreate = {\n            userName: target[\"userName\"].value,\n            surname: target[\"surname\"].value,\n            companyName: target[\"companyName\"].value,\n            password: target[\"password\"].value,\n        }\n\n        try {\n            const data = await createAccount(inputData).unwrap()\n\n            const obj = {\n                accountAddress: data.accountAddress,\n                encryptedPhrase: data.encryptedPhrase,\n                token: data.token,\n                userName: inputData.userName,\n                surname: inputData.surname,\n                companyName: inputData.companyName,\n            };\n\n            // dispatch(setStorage(JSON.stringify(obj)))\n\n            const pass: PassDataFromSetToPhrase = {\n                accountAddress: data.accountAddress,\n                mnemonic: data.mnemonic,\n                localSave: obj,\n            }\n\n            setData(pass)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return <>{!isLoading ? <form onSubmit={create} className=\"py-[100px] sm:py-0 sm:h-full\">\n        <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\n            <div className=\"flex flex-col gap-4\">\n                <div className=\"text-xl sm:text-3xl text-primary text-center\">Set Account Details</div>\n                <div className=\"text-greylish tracking-wide font-light text-lg text-center\">This password encrypts your accounts on this device.</div>\n            </div>\n            <div className=\"grid sm:grid-cols-3 gap-x-24 gap-y-8 px-3\">\n                {list.map(w => <Input key={generate()} {...w} />)}\n            </div>\n            <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\n                <button className=\"rounded-xl w-[150px] h-[50px] border-2 border-primary text-primary shadow-lg bg-white\" onClick={() => router.push('/')}>Back</button>\n                <button type=\"submit\" className=\"rounded-xl w-[150px] h-[50px] text-white shadow-lg bg-primary\">Set Account</button>\n            </div>\n        </section>\n    </form> : <div className=\" h-screen flex items-center justify-center\"><ClipLoader /></div>}</>\n}\n\n\nexport default Set;","import { useState, useEffect } from 'react'\n\nconst PhraseBar = ({ address, mnemonic = false, scanIcon = true }: { address: string, mnemonic?: boolean, scanIcon?: boolean }) => {\n    const [data, setData] = useState('');\n    const [see, setSee] = useState(false);\n    useEffect(() => {\n        if (mnemonic && !see) {\n            const value = address.split(\" \").reduce((a, c) => {\n                return a += ` ${c.replace(/[A-Z]/gi, \"*\")}`\n            })\n            return setData(value)\n        } else if (mnemonic) return setData(address);\n\n        let value = address.startsWith(\"0x\") ? address.slice(2) : address.replace(' ', '');\n        value = value.split('').reduce((a, c, i) => {\n            if (i > 0 && i % 4 === 0) a += ' ';\n            return a + c;\n        }, '')\n        return setData(value)\n    }, [see])\n\n    return <div>\n        <div className=\"bg-greylish bg-opacity-10 py-5 pl-2 pr-12 rounded-lg break-words relative\" style={!mnemonic ? { inlineSize: `${window.outerWidth>640?\"300px\":\"240px\"}` } : { inlineSize: `${window.outerWidth>640?\"420px\":\"240px\"}` }}>\n            <div className=\"font-light\">{mnemonic ? data : data.toUpperCase()}</div>\n            <div className=\"absolute -right-5 top-1/2 -translate-y-1/2 flex flex-col gap-3\">\n                {mnemonic ?\n                    <div className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => setSee(!see)}>\n                        <img src={'/icons/see.svg'} width=\"15\" height={15} alt=\"see\" />\n                    </div>\n                    :\n                    scanIcon ? <div className=\"bg-primary p-2 rounded-xl cursor-pointer\">\n                        <img src={'/icons/scanning.svg'} alt=\"scanning\" />\n                    </div> : null}\n\n                <div className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => navigator.clipboard.writeText(address.trim())}>\n                    <img src={'/icons/copy.svg'} alt=\"copy\" />\n                </div>\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default PhraseBar;","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IUnlock {\n    unlock: boolean;\n}\n\nconst initialState: IUnlock = {\n    unlock: false\n}\n\n\nexport const unlockSlide = createSlice({\n    name: \"unlock\",\n    initialState: initialState,\n    reducers: {\n        setUnlock: (state, action) => {\n            state.unlock =  action.payload;\n        }\n    }\n})\n\nexport const { setUnlock } = unlockSlide.actions\n\nexport const selectUnlock = (state: RootState) => state.unlock.unlock\n\nexport default unlockSlide.reducer","import { useHistory } from 'react-router-dom'\nimport PhraseBar from '../phraseBar'\nimport { PassDataFromSetToPhrase } from '../../types/create'\nimport { useDispatch } from 'react-redux'\nimport { setStorage } from '../../redux/reducers/storage'\nimport { setUnlock } from '../../redux/reducers/unlock'\n\n// KeyPhrase Component\nconst KeyPhrase = ({ data }: { data: PassDataFromSetToPhrase }) => {\n    const router = useHistory();\n    const dispatch = useDispatch()\n    return <section className=\"w-full pt-[100px] sm:pt-0 sm:h-screen flex flex-col items-center justify-center\">\n        <div className=\"text-primary text-3xl tracking-wide text-center\">\n            Your New Remox Account\n        </div>\n        <div className=\"flex flex-col\">\n            <div className='grid sm:grid-cols-2 py-14 border-b'>\n                <div>\n                    <h2 className=\"text-center sm:text-left\">Public Address</h2>\n                    <span className=\"text-greylish text-center sm:text-left pb-3\">It’s like your username on Remox.<br />You can share this with friends.</span>\n                </div>\n                <div>\n                    <PhraseBar address={data?.accountAddress} />\n                </div>\n            </div>\n            <div className='grid sm:grid-cols-2 py-14'>\n                <div>\n                    <h2 className=\"text-center sm:text-left\"> Address</h2>\n                    <span className=\"text-greylish text-left pb-3\">It’s like your username on Remox.<br />You can share this with friends.</span>\n                </div>\n                <div>\n                    <PhraseBar mnemonic={true} address={data?.mnemonic} />\n                </div>\n            </div>\n        </div>\n        <div className=\"flex sm:flex-row flex-col-reverse pb-3 justify-center items-center gap-10 pt-8\">\n            <button className=\"rounded-xl w-[150px] h-[50px] border-2 border-primary text-primary shadow-lg bg-white\" onClick={() => router.goBack()}>Back</button>\n            <button className=\"rounded-xl w-[150px] h-[50px] text-white shadow-lg bg-primary\" onClick={() => {dispatch(setUnlock(true)); dispatch(setStorage(JSON.stringify(data.localSave))); router.push(\"/dashboard\") }}>Continue</button>\n        </div>\n    </section>\n}\n\nexport default KeyPhrase;","import { useState} from 'react'\nimport Header from '../layouts/home/header'\nimport Set from '../components/create/set'\nimport KeyPhrase from '../components/create/phrase'\nimport { PassDataFromSetToPhrase } from '../types/create'\n\nconst Create = () => {\n    const [data, setData] = useState<PassDataFromSetToPhrase>();\n\n    return <div className=\"h-screen w-full\">\n        <Header />\n        {!data ? <Set setData={setData} /> : <KeyPhrase data={data!} />}\n    </div>\n}\n\n\n\n\nexport default Create;","import PhraseBar from '../components/phraseBar';\nimport Header from '../layouts/home/header'\nimport { useRef, useState, useEffect } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { ClipLoader } from 'react-spinners';\nimport { selectStorage, setStorage } from '../redux/reducers/storage';\nimport { useUnlockMutation } from '../redux/api';\nimport { selectUnlock, setUnlock } from '../redux/reducers/unlock';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\n\nconst Unlock = () => {\n    const unlockState = useAppSelector(selectUnlock)\n    const storage = useAppSelector(selectStorage)\n\n    const [unlockApp, { isLoading }] = useUnlockMutation()\n\n    const dispatch = useAppDispatch();\n    const inputRef = useRef<HTMLInputElement>(null)\n    const location = useLocation()\n    const router = useHistory()\n    const [incorrrect, setIncorrect] = useState(false)\n\n    useEffect(() => {\n        if (router && !storage) router.push('/')\n    }, [unlockState, location, router, storage])\n\n    const Submit = async () => {\n        if (inputRef.current && storage?.accountAddress) {\n            setIncorrect(false);\n\n            try {\n                const data = await unlockApp({\n                    password: inputRef.current.value.trim(),\n                    address: storage.accountAddress\n                }).unwrap()\n\n                dispatch(setStorage(JSON.stringify({ ...storage, token: data!.token })))\n\n                dispatch(setUnlock(true))\n                router.push('/');\n            } catch (error) {\n                setIncorrect(true);\n                console.error(error)\n            }\n        }\n    }\n\n    return <>\n        <Header />\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary\">Unlock Your Wallet</h2>\n            <div className=\"flex flex-col gap-3\">\n                <div>Public Address</div>\n                {storage && <PhraseBar address={storage.accountAddress} scanIcon={false} />}\n            </div>\n            <div className=\"flex flex-col gap-4\">\n                <div>Enter your password to unlock your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submit()\n                    }\n                }} ref={inputRef} type=\"password\" autoComplete='new-password' autoFocus className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600 text-center\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <button onClick={Submit} className=\"bg-primary shadow-lg px-5 py-2 text-white rounded-lg\">{isLoading ? <ClipLoader /> : 'Unlock'}</button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\n\nexport default Unlock;","\n\nconst CoinItem = ({ title, coin, usd, percent, rate, img }: { title: string, coin: string, usd: string, percent: string, rate?: number, img: string }) => {\n\n    return <div className=\"py-2 pl-1 gap-2 pr-5 flex bg-greylish bg-opacity-5 rounded-xl h-[60px]\">\n        <div className=\"w-[20px] flex items-center justify-center\">\n            <img width=\"20\" height=\"20\" src={img} alt=\"\" />\n        </div>\n        <div className=\"flex-grow grid grid-cols-3 gap\">\n            <div className=\"flex flex-col justify-between items-start\">\n                <div className=\"font-semibold text-gray-500 text-sm\">{title}</div>\n                <div className=\"text-greylish opacity-70 text-xs font-light\">{percent}%</div>\n            </div>\n            <div className=\"flex flex-col justify-between items-start\">\n                <div className=\"font-semibold text-gray-500 text-sm\">${usd}</div>\n                <div className=\"text-greylish opacity-70 text-xs font-light\">{`${title} ${coin}`}</div>\n            </div>\n            <div className=\"flex flex-col justify-between items-end\">\n                <div className=\"font-semibold text-gray-500 text-sm\">{rate?.toFixed(2)}%</div>\n                <div className=\"text-greylish opacity-70 text-xs font-light\">24h</div>\n            </div>\n        </div>\n    </div>\n}\n\nexport default CoinItem;","import { useEffect, useMemo, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { IBalanceItem, ICurrencyInternal, SelectBalances, SelectCurrencies } from '../../../redux/reducers/currencies';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../../../types/coins';\nimport { generate } from 'shortid';\nimport Web3 from 'web3'\nimport { useAppSelector } from '../../../redux/hooks';\nimport { selectStorage } from \"../../../redux/reducers/storage\";\nimport { SelectTransactions } from \"../../../redux/reducers/transactions\";\nimport CoinItem from '../../../components/dashboard/main/coinitem';\n\ninterface Balance {\n    amount: number,\n    per_24?: number,\n    percent: number,\n    coins: AltCoins,\n    reduxValue: number | undefined\n}\n\nconst Statistic = () => {\n    const storage = useAppSelector(selectStorage)\n    const transactions = useAppSelector(SelectTransactions)\n\n    const [percent, setPercent] = useState<number>()\n    const [balance, setBalance] = useState<string>()\n\n\n    const [lastIn, setIn] = useState<number>()\n    const [lastOut, setOut] = useState<number>();\n\n    const [allInOne, setAllInOne] = useState<Balance[]>()\n\n\n    const currencies = useAppSelector(SelectCurrencies)\n    const celo = (useAppSelector(SelectCurrencies)).CELO\n    const cusd = (useAppSelector(SelectCurrencies)).cUSD\n    const ceur = (useAppSelector(SelectCurrencies)).cEUR\n    const ube = (useAppSelector(SelectCurrencies)).UBE\n    const moo = (useAppSelector(SelectCurrencies)).MOO\n    const mobi = (useAppSelector(SelectCurrencies)).MOBI\n    const poof = (useAppSelector(SelectCurrencies)).POOF\n\n    const balanceRedux = useAppSelector(SelectBalances)\n    const celoBalance = (useAppSelector(SelectBalances)).CELO\n    const cusdBalance = (useAppSelector(SelectBalances)).cUSD\n    const ceurBalance = (useAppSelector(SelectBalances)).cEUR\n    const ubeBalance = (useAppSelector(SelectBalances)).UBE\n    const mooBalance = (useAppSelector(SelectBalances)).MOO\n    const mobiBalance = (useAppSelector(SelectBalances)).MOBI\n    const poofBalance = (useAppSelector(SelectBalances)).POOF\n\n\n\n    const all = useMemo(() => {\n        if (celoBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            return {\n                celo: celoBalance,\n                cUSD: cusdBalance,\n                cEUR: ceurBalance,\n                UBE: ubeBalance,\n                MOO: mooBalance,\n                MOBI: mobiBalance,\n                POOF: poofBalance\n            }\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n    const chart = useMemo(() => {\n        if (celoBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            const celoDeg = Math.floor(celoBalance.percent * 3.6)\n            const cusdDeg = Math.floor(cusdBalance.percent * 3.6) + celoDeg;\n            const ceurDeg = Math.floor(ceurBalance.percent * 3.6) + cusdDeg;\n            const ubeDeg = Math.floor(ubeBalance.percent * 3.6) + ceurDeg;\n            const mooDeg = Math.floor(mooBalance.percent * 3.6) + ubeDeg;\n            const mobiDeg = Math.floor(mooBalance.percent * 3.6) + mooDeg;\n            const poofDeg = Math.floor(poofBalance.percent * 3.6) + mobiDeg;\n\n            if (!celoDeg && !cusdDeg && !ceurDeg && !ubeDeg && !mooDeg && !mobiDeg && !poofDeg) return `conic-gradient(#FF774E 0deg 360deg)`\n\n            return `conic-gradient(#fbce5c 0deg ${celoDeg}deg, #46cd85 ${celoDeg}deg ${cusdDeg}deg, #040404 ${cusdDeg}deg ${ceurDeg}deg, #6D619A ${ceurDeg}deg ${ubeDeg}deg, #3288ec ${ubeDeg}deg ${mooDeg}deg, #e984a0 ${mooDeg}deg ${mobiDeg}deg, #7D72FC ${mobiDeg}deg ${poofDeg}deg)`\n        }\n        return `conic-gradient(#FF774E 0deg 360deg)`\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance, celo, cusd, ceur, ube, moo, mobi, poof])\n\n\n\n\n    useEffect(() => {\n        if (celoBalance && cusdBalance && ceurBalance && ubeBalance && mooBalance && mobiBalance && poofBalance) {\n\n            const total = celoBalance.amount + cusdBalance.amount + ceurBalance.amount + ubeBalance.amount + mooBalance.amount + poofBalance.amount + mobiBalance.amount;\n            const currencObj = Object.values(currencies)\n            const currencObj2: IBalanceItem[] = Object.values(balanceRedux)\n\n            let indexable = 0;\n            const per = currencObj.reduce((a, c: ICurrencyInternal, index) => {\n                if (currencObj2[index].amount > 0) {\n                    a += c.percent_24\n                    indexable++\n                }\n                return a;\n            }, 0)\n\n            const result: number =\n                (celoBalance.amount * celoBalance.reduxValue) + (cusdBalance.amount * cusdBalance.reduxValue) +\n                (ceurBalance.amount * ceurBalance.reduxValue) + (ubeBalance.amount * ubeBalance.reduxValue) +\n                (mooBalance.amount * mooBalance.reduxValue) + (mobiBalance.amount * mobiBalance.reduxValue) +\n                (poofBalance.amount * poofBalance.reduxValue)\n\n            setBalance(result.toFixed(2))\n            setPercent(per / indexable)\n\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n\n\n    useEffect(() => {\n        if (all) {\n            setAllInOne(Object.values(all).sort((a, b) => (b.amount * b.reduxValue).toLocaleString().localeCompare((a.amount * a.reduxValue).toLocaleString())).slice(0, 4))\n        }\n    }, [all])\n\n    useEffect(() => {\n        if (transactions) {\n            let myin = 0;\n            let myout = 0;\n            transactions.result.forEach(t => {\n                const coin = Coins[Object.entries(TransactionFeeTokenName).find(w => w[0] === t.tokenSymbol)![1]];\n                const tTime = new Date(parseInt(t.timeStamp) * 1e3)\n                if (tTime.getMonth() === new Date().getMonth()) {\n                    if (t.from.toLowerCase() === storage?.accountAddress.toLowerCase()) {\n                        myout += (parseFloat(Web3.utils.fromWei(t.value, 'ether')) * (currencies[coin.name]?.price ?? 0))\n                    } else {\n                        myin += (parseFloat(Web3.utils.fromWei(t.value, 'ether')) * (currencies[coin.name]?.price ?? 0))\n                    }\n                }\n            })\n            setIn(myin)\n            setOut(myout)\n        }\n    }, [transactions])\n\n    return <>\n        <div className=\"col-span-2 flex flex-col\">\n            <div className=\"flex justify-between pl-4 h-[30px]\">\n                <div className=\"text-base text-greylish\">Total Balance</div>\n                <div className=\"text-base text-greylish opacity-70\">24h</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-8\">\n                <div className=\"text-4xl\">\n                    {balance || (balance !== undefined && parseFloat(balance) === 0) ? `$${balance}` : <ClipLoader />}\n                </div>\n                <div className=\"flex items-center text-3xl text-greylish opacity-70\" style={\n                    balance !== undefined && parseFloat(balance) !== 0 ? percent && percent > 0 ? { color: 'green' } : { color: 'red' } : { color: 'black' }\n                }>\n                    {balance !== undefined && parseFloat(balance) !== 0 ? percent ? `${percent.toFixed(2)}%` : <ClipLoader /> : '0%'}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money in last month</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-xl sm:text-2xl opacity-80\">\n                    {lastIn !== undefined && balance !== undefined ? `+ $${lastIn?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money out last month</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-greylish opacity-80 text-xl sm:text-2xl\">\n                    {lastOut !== undefined && balance !== undefined ? `- $${lastOut?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"sm:flex flex-col hidden\">\n            <div>Asset</div>\n            <div>\n                {celoBalance !== undefined && cusdBalance !== undefined ? <div className=\"w-[200px] h-[200px] rounded-full relative\" style={{\n                    background: chart\n                }}>\n                    <div className=\"w-[120px] h-[120px] bg-white left-1/2 top-1/2 absolute -translate-x-1/2 -translate-y-1/2 rounded-full\"></div>\n                </div> : null}\n            </div>\n        </div>\n        {\n            allInOne !== undefined ?\n                <div className=\"flex flex-col gap-5 overflow-hidden col-span-2 sm:col-span-1\">\n                    {allInOne.map((item, index) => {\n                        return <CoinItem key={generate()} title={item.coins.name} coin={item.amount.toFixed(2)} usd={((item.reduxValue ?? 0) * item.amount).toFixed(2)} percent={(item.percent || 0).toFixed(1)} rate={item.per_24} img={item.coins.coinUrl} />\n                    })}\n                </div> : <ClipLoader />\n        }</>\n\n}\n\n\nexport default Statistic;","import { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TransactionType, TransactionDirection, TransactionStatus } from \"../types/dashboard/transaction\"\n\nconst TransactionItem = ({ type, direction, date, amountUSD, status, amountCoin, hash }: { hash: string, type: TransactionType, direction: TransactionDirection, date: string, amountUSD: string, amountCoin: string, status: TransactionStatus }) => {\n    \n    const [detect, setDetect] = useState(true);\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(()=>{\n        if(divRef.current && window.outerWidth / divRef.current.clientWidth > 3){\n            setDetect(false)\n        }\n    },[])\n    \n    return <div ref={divRef} className={`grid ${detect ? 'grid-cols-[25%,45%,30%] sm:grid-cols-[45%,25%,15%,15%] pl-5' : 'grid-cols-[1.5fr,1fr,1fr]'} min-h-[115px] py-6 border-b border-black `}>\n        <div className=\"flex space-x-5\">\n            <div className=\"flex items-center justify-center\">\n                <div className=\"bg-greylish bg-opacity-10 w-[40px] h-[40px] flex items-center justify-center rounded-full\">\n                    {TransactionDirection.Out === direction ? <img src=\"/icons/uparrow.svg\" alt=\"\" className=\"w-[25px] h-[25px]\" /> : <img src=\"/icons/uparrow.svg\" className=\"rotate-180\" alt=\"\" />}\n                </div>\n            </div>\n            <div className=\"hidden sm:flex flex-col items-start justify-between\">\n                <div className=\"text-greylish\">\n                    {type === TransactionType.QuickTransfer && <span> Quick Transfer </span>}\n                    {type === TransactionType.IncomingPayment && <span> Incoming Transfer </span>}\n                    {type === TransactionType.MassPayout && <span> Mass Payout </span>}\n                    {type === TransactionType.MassPayment && <span> Mass Payment </span>}\n                </div>\n                <div className=\"text-sm text-greylish\">\n                    {date}\n                </div>\n            </div>\n        </div>\n        <div className={`flex flex-col justify-between ${detect ? 'items-left':'items-center'} text-greylish`}>\n            <div>\n                {amountCoin}\n            </div>\n            <div className=\"text-sm\">\n                {amountUSD}\n            </div>\n        </div>\n        <div className={`md:flex items-center hidden ${detect? 'justify-start':'justify-end'}`}>\n            {TransactionStatus.Completed === status ? <span className=\"text-green-400\">Completed</span> : null}\n        </div>\n        {detect &&\n            <div className=\"flex flex-col justify-center cursor-pointer text-blue-400 items-end pr-5 md:pr-0 lg:pr-5\">\n                <Link to={`/dashboard/transactions/${hash}`}>View</Link>\n            </div>\n        }\n    </div>\n}\n\nexport default TransactionItem;","import { TransactionStatus } from \"../../../types/dashboard/transaction\";\nimport TransactionItem from \"../../transactionItem\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport _ from \"lodash\";\nimport { TransactionHook } from '../../../hooks/useTransactionProcess'\n\nconst TransactionHistory = ({ transactions }: { transactions: TransactionHook[] }) => {\n\n    return <div className=\"flex flex-col shadow-custom max-h-full px-5 pt-5 pb-14 rounded-xl\">\n        <div className=\"flex justify-between\">\n            <div className=\"font-medium text-xl text-greylish tracking-wide\">Recent Transactions</div>\n            <div><Link to=\"/dashboard/transactions\" className=\"text-blue-400\">View All</Link></div>\n        </div>\n        <div className=\"grid grid-cols-1\">\n            {transactions && transactions.slice(0, 4).map(({ hash, amount, coinName, type, direction, date, surplus, amountUSD }) => <TransactionItem key={generate()} hash={hash} amountCoin={`${amount} ${coinName}`} type={type} direction={direction} date={date} amountUSD={`${surplus}${amountUSD.toFixed(3)}$`} status={TransactionStatus.Completed} />)}\n        </div>\n    </div>\n\n}\n\n\n\nexport default TransactionHistory;","import Input from \"../input\"\nimport { useHistory } from 'react-router-dom'\nimport { useState } from 'react'\nimport { ClipLoader } from \"react-spinners\";\nimport { SyntheticEvent } from \"react\";\nimport { useCreatePasswordMutation } from \"../../redux/api/account\";\nimport { IStorage, setStorage } from \"../../redux/reducers/storage\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { setUnlock } from \"../../redux/reducers/unlock\";\n\nconst CreatePassword = ({ phrase }: { phrase: string }) => {\n    const [createPassword, { isLoading }] = useCreatePasswordMutation();\n\n    const dispatch = useAppDispatch()\n    const router = useHistory();\n\n    const [isValid, setValid] = useState(false)\n\n\n    const Submitted = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLFormElement;\n        if(!isValid) return;\n\n        try {\n            const data = await createPassword({ phrase: phrase.trim(), password: target[\"password\"]?.value?.trim() }).unwrap()\n\n            const obj: IStorage = {\n                accountAddress: data!.accountAddress,\n                encryptedPhrase: data!.encryptedPhrase,\n                token: data!.token,\n            };\n\n            \n            dispatch(setStorage(JSON.stringify(obj)))\n            dispatch(setUnlock(true))\n\n            // router.push('/dashboard')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    return <div className=\"h-screen\">\n        <form onSubmit={Submitted} className=\"h-full\">\n            <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\n                <div className=\"flex flex-col gap-4\">\n                    <div className=\"text-center text-3xl text-primary\">Set Account Details</div>\n                    <div className=\"text-center text-greylish tracking-wide font-light text-lg\">This password encrypts your accounts on this device.</div>\n                </div>\n                <div className=\"grid sm:grid-cols-2 gap-x-24 gap-y-8\">\n                    <Input title=\"Password\" name=\"password\" type=\"password\" validation={setValid} className=\"w-[100%] sm:w-[200px]\" limit={6} required={true}/>\n                </div>\n                <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\n                    <button className=\"rounded-xl w-[150px] h-[50px] border-2 border-primary text-primary shadow-lg bg-white\" onClick={() => router.push('/')}>Back</button>\n                    <button type=\"submit\" className=\"rounded-xl w-[150px] h-[50px] text-white shadow-lg bg-primary\">{isLoading ? <ClipLoader /> : 'Set Password'}</button>\n                </div>\n            </section>\n        </form>\n    </div>\n}\n\nexport default CreatePassword;","import { useState } from 'react'\nimport { ClipLoader } from 'react-spinners';\nimport Header from '../../layouts/home/header';\nimport { useSignInMutation } from '../../redux/api/account';\nimport { IStorage, setStorage } from '../../redux/reducers/storage';\nimport { useDispatch } from 'react-redux';\nimport { setUnlock } from '../../redux/reducers/unlock';\n\n\nconst Login = ({ phrase }: { phrase: string }) => {\n    const [signin, { isLoading }] = useSignInMutation()\n\n    const dispatch = useDispatch()\n\n    const [input, setInput] = useState<string>()\n    const [incorrrect, setIncorrect] = useState(false)\n\n\n    const Submitted = async () => {\n        if (input && phrase) {\n            setIncorrect(false)\n\n            try {\n                const data = await signin({ phrase: phrase.trim(), password: input.trim() }).unwrap()\n\n                const obj: IStorage = {\n                    accountAddress: data!.accountAddress,\n                    encryptedPhrase: data!.encryptedPhrase,\n                    token: data!.token,\n                };\n\n                dispatch(setUnlock(true))\n                dispatch(setStorage(JSON.stringify(obj)))\n\n            } catch (error) {\n                console.error(error);\n                setIncorrect(true);\n            }\n\n        }\n    }\n\n    return <>\n        <Header />\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary text-center\">Open Your Wallet</h2>\n            <div className=\"flex flex-col gap-4 items-center\">\n                <div className=\"text-center\">Enter your password to open your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submitted()\n                    }\n                }} onChange={(e) => setInput(e.target.value)} type=\"password\" autoComplete='new-password' className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <button onClick={Submitted} className=\"bg-primary shadow-lg px-5 py-2 text-white rounded-lg\">{isLoading ? <ClipLoader /> : 'Unlock'}</button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\nexport default Login;","import { Dispatch, MutableRefObject, useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member } from \"../../types/sdk\";\nimport Dropdown from \"../dropdown\";\n\n\nconst TeamInput = (props: Member & { index: number, selectedId: string[], generalWallet: DropDownItem, setGeneralWallet: Dispatch<DropDownItem>, setSelectedId: Dispatch<string[]>, members: MutableRefObject<Array<Member & { selected: boolean }>> }) => {\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: Coins[props.currency].name, type: Coins[props.currency].value, value: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl })\n\n    useEffect(() => {\n        if (props.generalWallet?.value) {\n            setSelectedWallet({ name: Coins[props.generalWallet.value!].name, type: Coins[props.generalWallet.value!].value, coinUrl: Coins[props.generalWallet.value!].coinUrl, value: Coins[props.generalWallet.value!].value })\n        }\n    }, [props.generalWallet])\n\n    useEffect(() => {\n        if (selectedWallet && selectedWallet.value) {\n            updateValue({ val: '', wallet: true })\n        }\n    }, [selectedWallet])\n\n    const updateValue = ({ val, wallet = false }: { val: string, wallet?: boolean }) => {\n        const arr = [...props.members.current]\n        const newArr = arr.reduce<Array<Member & { selected: boolean }>>((a, e) => {\n            if (e.id !== props.id) a.push(e)\n            else {\n                let newItem;\n                if (wallet) {\n                    newItem = { ...e, currency: selectedWallet.value! }\n                } else {\n                    newItem = { ...e, amount: val }\n                }\n                a.push(newItem)\n            }\n            return a;\n        }, [])\n        props.members.current = newArr\n    }\n\n    const updateTick = ({ tick }: { tick: boolean }) => {\n        if (!tick) {\n            props.setSelectedId(props.selectedId.filter(w => w !== props.id))\n        } else {\n            props.setSelectedId([...props.selectedId, props.id])\n        }\n    }\n\n    return <>\n        <div className=\"flex items-center\">\n            <input checked={props.selectedId.some(w => w === props.id)} className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" type=\"checkbox\" onChange={(e) => {\n                updateTick({ tick: e.target.checked })\n            }} />\n            <h2 className={`text-black px-3 py-1 name__${props.index} text-sm`}>{props.name}</h2>\n        </div>\n        <div className=\"flex items-center\">\n            <h2 className={`text-black py-1 rounded-md address__${props.index} text-sm truncate`}>{props.address}</h2>\n        </div>\n        <div className=\"col-span-2 sm:col-span-1 flex border border-greylish rounded-md border-opacity-60\">\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n            <input className=\"text-black py-1 outline-none mr-2 rounded-md w-full font-bold\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} min=\"0\" required step={'any'} onBlur={d => props.setSelectedId([...props.selectedId])} onChange={e => updateValue({ val: e.target.value })} />\n        </div>\n        <div className=\"hidden sm:block\"></div>\n    </>\n}\nexport default TeamInput;","import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport { AltCoins, Coins, CoinsName, CoinsURL } from \"../../../types/coins\";\nimport { DropDownItem } from \"../../../types/dropdown\";\nimport Dropdown from \"../../dropdown\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\"\nimport { changeSuccess, changeError, selectError } from '../../../redux/reducers/notificationSlice'\nimport { useLazyGetTeamsQuery } from \"../../../redux/api/team\";\nimport { useAddMemberMutation } from \"../../../redux/api/teamMember\";\nimport Error from \"../../error\";\n\n\nconst AddMember = ({ onDisable }: { onDisable: React.Dispatch<boolean> }) => {\n\n    const isError = useAppSelector(selectError)\n\n    const [triggerTeams, { data, isLoading }] = useLazyGetTeamsQuery()\n    const [addMember, { isLoading: addMemberLoading }] = useAddMemberMutation();\n\n    const [selected, setSelected] = useState<DropDownItem>({ name: \"No Team\", coinUrl: CoinsURL.None })\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>(Coins[CoinsName.CELO]);\n\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        triggerTeams({ take: Number.MAX_SAFE_INTEGER })\n    }, [])\n\n    useEffect(() => {\n        if (!data || (data && data.teams.length === 0)) {\n            setSelected({ name: \"No Team\", coinUrl: CoinsURL.None })\n        }\n    })\n\n    useEffect(() => {\n        if (data && data.teams && data.teams.length > 0) {\n            setSelected({ name: \"Select Team\", coinUrl: CoinsURL.None })\n        }\n    }, [data])\n\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const target = e.target as HTMLFormElement;\n\n        const { firstName, lastName, teamName, walletAddress, amount } = target;\n        const firstNameValue = (firstName as HTMLInputElement).value\n        const lastNameValue = (lastName as HTMLInputElement).value\n        // const teamNameValue = (teamName as HTMLInputElement)?.value\n        const walletAddressValue = (walletAddress as HTMLInputElement).value\n        const amountValue = (amount as HTMLInputElement).value\n\n\n        if (firstNameValue && lastNameValue && walletAddressValue && amountValue) {\n            if (!Object.values(Coins).includes(selectedWallet as AltCoins)) {\n                alert(\"Please, choose a wallet\")\n                return\n            }\n            if (selected === { name: \"Select Team\", coinUrl: CoinsURL.None }) {\n                alert(\"Please, choose a team\")\n                return\n            }\n\n            if (selectedWallet.value && selected.id) {\n\n                try {\n                    await addMember({\n                        name: `${firstNameValue} ${lastNameValue}`,\n                        address: walletAddressValue.trim(),\n                        currency: selectedWallet.value,\n                        amount: amountValue.trim(),\n                        teamId: selected.id\n                    }).unwrap()\n\n                    dispatch(changeSuccess(true))\n                    onDisable(false)\n                } catch (error: any) {\n                    console.error(error)\n                    dispatch(changeError({activate: true, text: error?.data?.message}))\n                }\n            }\n        }\n    }\n\n    return <>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col space-y-8\">\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Personal Details</div>\n                    <div className=\"grid grid-cols-2 gap-x-10\">\n                        <div>\n                            <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" className=\"border-2 pl-2 rounded-md outline-none h-[42px] w-full\" required />\n                        </div>\n                        <div>\n                            <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"border-2 pl-2 rounded-md outline-none h-[42px] w-full\" required />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Choose Team</div>\n                    <div className=\"grid grid-cols-2 w-[85%] gap-x-10\">\n                        <div>\n                            <Dropdown onSelect={setSelected} loader={isLoading} selected={selected} list={data?.teams && data.teams.length > 0 ? [...data.teams.map(w => { return { name: w.title, coinUrl: CoinsURL.None, id: w.id } })] : []} nameActivation={true} className=\"border-2 rounded-md\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Wallet Address</div>\n                    <div>\n                        <input type=\"text\" name=\"walletAddress\" className=\"h-[42px] w-full rounded-lg border-2 pl-2 outline-none\" placeholder=\"Wallet Address\" required />\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Currency and Amount</div>\n                    <div className=\"grid grid-cols-2 w-full sm:w-[85%] gap-x-10\">\n                        <div>\n                            <input type=\"number\" name=\"amount\" className=\"h-[42px] border-2 outline-none pl-4 rounded-md pr-4 w-full\" placeholder=\"Amount\" step=\"any\" required />\n                        </div>\n                        <div>\n                            {selectedWallet && <Dropdown className=\"rounded-md w-full\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins)} />}\n                        </div>\n                    </div>\n                </div>\n                {/* {isError && <Error onClose={(val)=>dispatch(changeError({activate: val, text: ''}))} />} */}\n                <div className=\"flex justify-center\">\n                    <button className=\"px-8 py-3 bg-primary rounded-xl text-white\">\n                        {addMemberLoading ? <ClipLoader /> : \"Add Person\"}\n                    </button>\n                </div>\n            </div>\n        </form>\n    </>\n}\n\nexport default AddMember;","import { useRef } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport { useAppDispatch } from \"../../../redux/hooks\"\nimport { changeSuccess } from '../../../redux/reducers/notificationSlice'\nimport { useCreateTeamMutation } from \"../../../redux/api\";\n\nconst AddTeams = ({ onDisable }: { onDisable: React.Dispatch<boolean>}) => {\n\n    const [createTeam, { error, isLoading }] = useCreateTeamMutation()\n\n    const teamName = useRef<HTMLInputElement>(null)\n    const dispatch = useAppDispatch()\n\n    const create = async () => {\n        if (teamName.current && teamName.current.value.trim()) {\n            try {\n                await createTeam({ title: teamName.current.value.trim() }).unwrap();\n\n                dispatch(changeSuccess(true))\n                onDisable(false)\n            } catch (error) {\n                console.error(error)\n            }\n        }\n    }\n\n    return <div className=\"flex flex-col justify-center space-y-10\">\n        <div className=\"grid grid-cols-2 items-center\">\n            <div>Team Name</div>\n            <div>\n                <input ref={teamName} type=\"text\" className=\"border pl-3 w-full rounded-xl h-10 outline-none\" />\n            </div>\n            {error && <div className=\"text-red-600\"> Something went wrong</div>}\n        </div>\n        {/* <div className=\"grid grid-cols-2 items-center\">\n            <div>Currency to be used</div>\n            <div>\n                <Dropdown onSelect={setSelectedCoin} price={true} selected={selectedCoin} list={[{ name: \"Celo\", coinUrl: CoinsURL.CELO }, { name: \"cUSD\", coinUrl: CoinsURL.cUSD }]} />\n            </div>\n        </div> */}\n        <div className=\"flex justify-center\">\n            <button onClick={create} className=\"px-14 py-2 text-white rounded-xl bg-primary font-light\" disabled={isLoading}>\n                {isLoading ? <ClipLoader /> : \"Add Team\"}\n            </button>\n        </div>\n\n    </div>\n}\n\nexport default AddTeams;","import { Dispatch, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport { changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\n\nconst Delete = ({ name, onCurrentModal, onDelete, onSuccess }: { name: string, onCurrentModal: Dispatch<boolean>, onDelete: () => Promise<void>, onSuccess?: Dispatch<boolean> }) => {\n    const [loading, setLoading] = useState(false)\n    const dispatch = useAppDispatch()\n    return <div className=\"flex flex-col space-y-6\">\n        <div className=\"flex items-center justify-center text-xl\">\n            Delete {name}?\n        </div>\n        <div className=\"flex justify-center items-center space-x-4\">\n            <button className=\"border-2 border-red-500 text-red-500 w-[80px] rounded-xl h-[27px]\" onClick={() => onCurrentModal(false)}>Close</button>\n            <button className=\"border-2 bg-red-500 border-red-500 text-white w-[80px] rounded-xl h-[27px]\" onClick={async () => {\n                setLoading(true);\n                try {\n                    await onDelete()\n                    //onSuccess(true)\n                    dispatch(changeSuccess(true))\n                    onCurrentModal(false)\n                } catch (error) {\n                    console.error(error)\n                }\n                setLoading(false)\n            }}>{loading ? <ClipLoader size={20} /> : 'Delete'}</button>\n        </div>\n    </div>\n}\n\nexport default Delete;","import { Dispatch, SyntheticEvent, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useLazyGetMemberQuery, useLazyGetTeamsQuery, useUpdateMemberMutation } from \"../../../redux/api\";\nimport { changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { Coins, CoinsURL } from \"../../../types/coins\";\nimport { DropDownItem } from \"../../../types/dropdown\";\nimport { Member } from \"../../../types/sdk\";\nimport Dropdown from \"../../dropdown\";\n\n\nconst EditMember = (props: Member & { onCurrentModal: Dispatch<boolean> }) => {\n    const dispatch = useDispatch()\n\n    const [triggerTeam, { data, isLoading }] = useLazyGetTeamsQuery()\n\n    const [getMembers, { data: member, isLoading: memberLoading, isFetching }] = useLazyGetMemberQuery()\n\n    const [updateMember, { isLoading: updateLoading }] = useUpdateMemberMutation()\n\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem>({ name: \"No Team\", coinUrl: CoinsURL.None })\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: '', type: Coins[props.currency].value, value: Coins[props.currency].value, id: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl });\n\n    useEffect(() => {\n        triggerTeam({ take: Number.MAX_SAFE_INTEGER })\n        getMembers(props.id)\n    }, [])\n\n    useEffect(() => {\n        if (member && data) {\n            setSelectedTeam({ name: data.teams.find(w => w.id === member.member.teamId)!.title, coinUrl: CoinsURL.None, id: member.member.teamId })\n        }\n    }, [member, data])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const { memberName, amount, address } = e.target as HTMLFormElement;\n\n        if (memberName && amount && address && selectedWallet && selectedTeam) {\n            if (!selectedWallet.value) {\n                alert(\"Please, choose a Celo wallet\")\n                return\n            }\n            if (!selectedTeam.id) {\n                alert(\"Please, choose a team\")\n                return\n            }\n            const memberNameValue = (memberName as HTMLInputElement).value\n            const amountValue = (amount as HTMLInputElement).value\n            const addressValue = (address as HTMLInputElement).value\n\n            const member: Member = {\n                id: props.id,\n                name: memberNameValue,\n                address: addressValue,\n                amount: amountValue,\n                currency: selectedWallet.value,\n                teamId: selectedTeam.id\n            }\n\n            try {\n                await updateMember(member).unwrap()\n                dispatch(changeSuccess(true))\n            } catch (error) {\n                console.error(error)\n            }\n\n        }\n    }\n\n    return <>\n        <div>\n            {!memberLoading && !isFetching && member ? <form onSubmit={Submit}>\n                <div className=\"text-xl font-bold pb-3\">\n                    Personal Details\n                </div>\n                <div className=\"grid grid-cols-2 gap-y-10\">\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Name</div>\n                        <div className=\"flex space-x-2 items-center w-3/4\">\n                            <input name=\"memberName\" type=\"text\" defaultValue={member.member!.name} className=\"w-full border-2 border-black border-opacity-50 outline-none rounded-md px-3 py-2\" required />\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Team</div>\n                        <div>\n                            <div className=\"flex space-x-2 items-center w-3/4\">\n                                <Dropdown onSelect={setSelectedTeam} parentClass=\"w-full\" loader={isLoading} selected={selectedTeam} list={data?.teams && data.teams.length > 0 ? [...data.teams.map(w => { return { name: w.title, coinUrl: CoinsURL.None, id: w.id } })] : []} nameActivation={true} className=\"border-2 rounded-md w-full\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Pay Amount</div>\n                        <div>\n                            <div className=\"flex space-x-2 items-center  w-3/4 border border-black rounded-md border-opacity-50\">\n                                <div>\n                                    {!selectedWallet ? <ClipLoader /> : <Dropdown onSelect={setSelectedWallet} className=\"border-none\" nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: \"\", type: w.value, value: w.value, coinUrl: w.coinUrl, id: w.value }))} />}\n                                </div>\n                                <div>\n                                    <input name=\"amount\" type=\"number\" defaultValue={member.member!.amount} className=\"w-full outline-none pr-3\" required step={'any'}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Wallet Address</div>\n                        <div className=\"flex space-x-2 items-center w-3/4\">\n                            <input name=\"address\" type=\"text\" defaultValue={member.member!.address} className=\"w-full text-xs border border-black border-opacity-50 outline-none rounded-md px-3 py-2\" required />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex justify-center items-center pt-10\">\n                    <div className=\"flex justify-center\">\n                        <div>\n                            <button className=\"bg-primary w-full rounded-md text-white px-6 py-3\">\n                                {updateLoading ? <ClipLoader /> : \"Save\"}\n                            </button>\n                        </div>\n                    </div>\n                </div> </form>\n                : <div className=\"flex justify-center\"> <ClipLoader /></div>}\n        </div>\n    </>\n}\n\nexport default EditMember;","import { Dispatch, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useUpdateTeamMutation } from \"../../../redux/api\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { TeamInfoWithMembers } from \"../../../types/sdk\";\n\n\nconst EditTeam = (props: TeamInfoWithMembers & { onCurrentModal: Dispatch<boolean> }) => {\n\n    const [updateTeam, { isLoading }] = useUpdateTeamMutation()\n    const [input, setInput] = useState<string>('')\n    const dispatch = useAppDispatch()\n\n\n    return <div className=\"grid grid-rows-[25%,25%,50%] grid-cols-[80%] items-center justify-center h-[200px]\">\n        <div className=\"text-center self-end font-light\">\n            Team Name\n        </div>\n        <div className=\"place-self-center\">\n            <input type=\"text\" defaultValue={props.title} onChange={(e) => setInput(e.target.value)} className=\"text-center px-3 rounded-md py-2 outline-none border-2 border-black border-opacity-50\" required />\n        </div>\n        <div className=\"grid grid-cols-2 self-end gap-x-5\">\n            <button className=\"w-full py-3 border border-primary rounded-xl text-primary\" onClick={() =>{\n                props.onCurrentModal(false)\n            }}>\n                Close\n            </button>\n            <button className=\"w-full px-4 py-3 bg-primary text-white rounded-xl\" onClick={async (e) => {\n                try {\n                    await updateTeam({ id: props.id, body: { title: input } }).unwrap()\n                    dispatch(changeSuccess(true))\n                    props.onCurrentModal(false)\n                } catch (error: any) {\n                    console.error(error)\n                    dispatch(changeError({activate: true, text: error?.data?.message}))\n                }\n            }}>\n                {isLoading ? <ClipLoader /> : 'Save'}\n            </button>\n        </div>\n    </div>\n}\n\nexport default EditTeam;","\nconst Avatar = ({ name }: { name: string }) => {\n\n    return <div className=\"w-[28px] h-[28px] font-[18px] flex items-center justify-center rounded-full bg-greylish bg-opacity-20\">\n        {name.slice(0, 2)}\n    </div>\n}\n\nexport default Avatar;","import { Dispatch } from \"react\";\nimport { Coins } from \"../../../types/coins\";\nimport { Member } from \"../../../types/sdk\";\nimport Avatar from '../../avatar'\n\nconst Profile = (props: Member & { teamName: string, onDeleteModal: Dispatch<boolean>, onCurrentModal: Dispatch<boolean>, onEditModal: Dispatch<boolean> }) => {\n\n    return <>\n        <div>\n            <div className=\"text-xl font-bold pb-3\">\n                Personal Details\n            </div>\n            <div className=\"grid grid-cols-2 gap-y-10\">\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Name</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <Avatar name={props.name} />\n                            <div>\n                                {props.name}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Team</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.teamName}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Pay Amount</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.amount}\n                            </div>\n                            <div>\n                                <img width=\"20\" height=\"20\" src={Coins[props.currency].coinUrl} alt=\"\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Wallet Address</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div className=\"text-xs\">\n                                {props.address}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-center items-center pt-10\">\n                <div className=\"grid grid-cols-2 gap-y-3 gap-x-5 justify-center\">\n                    <div className=\"col-span-2\">\n                        <button className=\"bg-primary px-6 py-3 rounded-xl text-white w-full\">\n                            Pay Now\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"bg-primary w-full rounded-xl text-white px-6 py-3\" onClick={() => {\n                            props.onEditModal(true)\n                            props.onCurrentModal(false)\n                        }}>\n                            Edit\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"text-primary border border-primary w-full rounded-xl px-6 py-3\" onClick={() => {\n                            props.onDeleteModal(true)\n                            props.onCurrentModal(false)\n                        }}>\n                            Delete\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Profile;","import React, { useEffect } from \"react\";\n\n\nconst Modal = ({ children, onDisable }: { children?: JSX.Element | JSX.Element[], onDisable: React.Dispatch<React.SetStateAction<boolean>> }) => {\n    useEffect(() => {\n        document.querySelector('body')!.style.overflowY = \"hidden\"\n        return () => {\n            document.querySelector('body')!.style.overflowY = \"\"\n        }\n    }, [])\n    return <>\n        <div className=\"w-full h-full bg-white bg-opacity-60 absolute left-0 top-0\" onClick={() => onDisable(false)} style={{\n            top: `${window.scrollY}px`,\n        }}>\n        </div>\n        <div className=\"absolute left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white w-[90%] sm:w-auto sm:min-w-[33%] shadow-custom rounded-xl\" style={{top: `${window.scrollY + (window.innerHeight/2)}px`}}>\n            <div className=\"relative px-5 py-10\">\n                {children}\n                <button onClick={() => onDisable(false)} className=\"absolute left-full top-0 translate-x-[-200%] translate-y-[25%] text-greylish opacity-45\">\n                    X\n                </button>\n            </div>\n        </div>\n    </>\n}\n\nexport default Modal;","import { useState } from \"react\";\nimport { Coins } from \"../../types/coins\";\nimport Modal from \"../modal\";\nimport Profile from '../../components/teams/buttons/profile'\nimport EditMember from '../../components/teams/buttons/editMember'\nimport Avatar from \"../avatar\";\nimport Delete from './buttons/delete'\nimport { useDeleteMemberMutation } from \"../../redux/api/teamMember\";\nimport { Member } from \"../../types/sdk\";\n\nconst TeamItem = (props: Member & { teamName: string }) => {\n    const [deleteMember] = useDeleteMemberMutation()\n    const [modalVisible, setModalVisible] = useState(false)\n    const [modalEditVisible, setModalEditVisible] = useState(false)\n    const [deleteModal, setDeleteModal] = useState(false)\n\n    const onDelete = async () => {\n        try {\n            await deleteMember(props.id).unwrap()\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return <>\n        <div className=\"pl-[2px]\">\n            <div className=\"hover:cursor-pointer flex items-center space-x-1\" onClick={() => setModalVisible(true)}>\n                <Avatar name={props.name} />\n                <div>\n                    {props.name}\n                </div>\n            </div>\n        </div>\n        <div className=\"pl-[2px] hidden sm:flex items-center\">\n            {props.teamName}\n        </div>\n        <div className=\" pl-[2px] flex items-center justify-start gap-2\">\n            <div>\n                <img src={Coins[props.currency].coinUrl} width=\"20\" height=\"20\" alt=\"\" />\n            </div>\n            <div>{props.amount}</div>\n            <div>\n                {Coins[props.currency].name}\n            </div>\n        </div>\n        <div className=\"col-span-2 sm:col-span-1 pt-3 sm:pt-0 pl-[2px] self-center truncate\">\n            {props.address}\n        </div>\n        {modalVisible && <Modal onDisable={setModalVisible}>\n            <Profile {...props} onDeleteModal={setDeleteModal} onCurrentModal={setModalVisible} onEditModal={setModalEditVisible} />\n        </Modal>}\n        {modalEditVisible && <Modal onDisable={setModalEditVisible}>\n            <EditMember {...props} onCurrentModal={setModalVisible} />\n        </Modal>}\n        {deleteModal && <Modal onDisable={setDeleteModal}>\n            <Delete name={props.name} onCurrentModal={setDeleteModal} onDelete={onDelete} />\n        </Modal>}\n\n    </>\n}\n\nexport default TeamItem;","import { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport { useDeleteTeamMutation, useUpdateTeamMutation } from \"../../redux/api\";\nimport { TeamInfoWithMembers } from \"../../types/sdk\";\nimport Modal from \"../modal\";\nimport Delete from \"./buttons/delete\";\nimport EditTeam from './buttons/editTeam'\nimport TeamItem from \"./teamItem\";\n\n\nconst TeamContainer = (props : TeamInfoWithMembers) => {\n    const [deleteModal, setDeleteModal] = useState(false)\n    const [deleteTeam] = useDeleteTeamMutation()\n\n    const [editModal, setEditModal] = useState(false)\n\n    const [num, setNum] = useState(3)\n\n    const DeleteTeam = async () => {\n        try {\n            await deleteTeam(props.id).unwrap()\n            setDeleteModal(false)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return <>\n        <div className=\"col-span-4 flex space-x-3 py-4 pt-4 sm:pt-14 pb-1 px-5 items-center\">\n            <div className=\"font-semibold text-[1.5rem] overflow-hidden whitespace-nowrap \">\n                <div>{props.title}</div>\n            </div>\n            <div className=\"cursor-pointer\" onClick={() => setEditModal(true)}>\n                <img src=\"/icons/editicon.svg\" alt=\"\" />\n            </div>\n            <div className=\"cursor-pointer\" onClick={()=>setDeleteModal(true)}>\n                <img src=\"/icons/trashicon.svg\" alt=\"\" />\n            </div>\n        </div>\n        {props.members && props.members.slice(0, num).map(w =>\n            <div key={generate()} className=\"grid grid-cols-2 sm:grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] py-6 border-b border-black pb-5 px-5 text-sm\">\n                <TeamItem teamName={props.title} {...w}/>\n            </div>\n        )}\n        {props.members && props.members.length > 3 && num !== 100 ? <button className=\"py-3 pb-5 px-5 font-bold text-primary\" onClick={() => setNum(100)}>\n            Show More\n        </button> : null}\n        {!props.members ? <div className=\"b-5 px-5 border-b border-black pb-5\">No Team Member Yet</div> : undefined}\n        {deleteModal && <Modal onDisable={setDeleteModal}>\n            <Delete name={props.title} onCurrentModal={setDeleteModal} onDelete={DeleteTeam} />\n        </Modal>}\n        {editModal && <Modal onDisable={setEditModal}>\n            <EditTeam {...props} onCurrentModal={setEditModal} />\n        </Modal>}\n    </>\n}\n\nexport default TeamContainer;","import { Dropdown } from \"../../components\";\nimport { Coins, CoinsNameVisual } from \"../../types/coins\";\nimport { DropDownItem } from '../../types'\nimport { useRef, useState } from \"react\";\nimport { useGetConvertableTokenAmountMutation, useSwapCoinsMutation } from \"../../redux/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SelectCurrencies } from \"../../redux/reducers/currencies\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { changeError, changeSuccess, selectError, selectSuccess } from \"../../redux/reducers/notificationSlice\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst Swap = () => {\n    const [token1, setToken1] = useState<DropDownItem>(Coins.cUSD)\n    const [token2, setToken2] = useState<DropDownItem>(Coins.celo)\n    \n    const token1Input = useRef<HTMLInputElement>(null)\n    const [appAmount, setAppAmount] = useState<string>(\"0\")\n    \n    const currencies = useSelector(SelectCurrencies)\n    const storage = useSelector(selectStorage)\n    const isSuccess = useSelector(selectSuccess)\n    const isError = useSelector(selectError)\n\n    const dispatch = useDispatch()\n\n    const [fetchCoin] = useGetConvertableTokenAmountMutation()\n    const [swap, { isLoading }] = useSwapCoinsMutation()\n\n    const change = async () => {\n        console.log(token1.value, token2.value, token1Input.current?.value)\n        if (token1.value && token2.value && token1Input.current && parseFloat(token1Input.current.value) > 0) {\n            try {\n                const data = await fetchCoin({\n                    input: token1.value,\n                    output: token2.value,\n                    amount: token1Input.current.value\n                }).unwrap()\n                setAppAmount(data.minimumAmountOut)\n            } catch (error) {\n                console.error(error)\n            }\n\n        }\n    }\n\n    const startSwap = async () => {\n        try {\n            if (token1.value && token2.value && token1Input.current && parseFloat(token1Input.current.value) > 0) {\n                try {\n                    const data = await swap({\n                        input: token1.value,\n                        output: token2.value,\n                        amount: token1Input.current.value, \n                        phrase: storage!.encryptedPhrase\n                    }).unwrap()\n                    dispatch(changeSuccess(true))\n                } catch (error) {\n                    console.error(error)\n                    dispatch(changeError({activate: true}))\n                }\n\n            }\n        } catch (error) {\n\n        }\n    }\n\n    return <div className=\"flex items-center justify-center\">\n        <div className=\"flex flex-col w-[50%]\">\n            <div className=\"font-bold pl-3 font-xl pb-2\">Swap</div>\n            <div className=\"shadow-custom rounded-xl bg-white py-10 px-3 flex flex-col space-y-1\">\n                <div className=\"bg-greylish bg-opacity-10 items-center flex justify-between rounded-md py-3 px-3\">\n                    <div>\n                        <Dropdown parentClass=\"shadow-custom bg-white rounded-xl\" onSelect={setToken1} className=\"border-none py-1 space-x-4 text-sm\" nameActivation={true} selected={token1} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, value: w.value, coinUrl: w.coinUrl, feeName: w.feeName, id: w.value, className: \"text-sm\" }))} />\n                    </div>\n                    <div className=\"flex flex-col space-y-1 items-end\">\n                        <div>\n                            <input onChange={change} ref={token1Input} type=\"number\" className=\"bg-transparent text-right outline-none unvisibleArrow\" placeholder=\"0\" min=\"0\" step=\"any\" />\n                        </div>\n                        <div className=\"text-xs font-extralight\">\n                            ~$ {(parseFloat(token1Input?.current?.value ?? \"0\") * (currencies[(token1.name) as CoinsNameVisual]?.price ?? 0)).toFixed(2)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex items-center justify-center\">\n                    <div className=\"bg-greylish bg-opacity-10 px-3 py-1 rounded-lg\">\n                        <img src=\"/icons/arrowdown.svg\" alt=\"\" />\n                    </div>\n                </div>\n                <div className=\"flex bg-greylish bg-opacity-10 items-center justify-between rounded-md py-3 px-3\">\n                    <div>\n                        <Dropdown parentClass=\"shadow-custom bg-white rounded-xl\" onSelect={setToken2} className=\"border-none py-1 space-x-4 text-sm\" nameActivation={true} selected={token2} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, value: w.value, feeName: w.feeName, coinUrl: w.coinUrl, id: w.value, className: \"text-sm\" }))} />\n                    </div>\n                    <div className=\"flex flex-col space-y-1 items-end\">\n                        <div className=\"text-right outline-none unvisibleArrow\">\n                            {parseFloat(appAmount).toFixed(2)}\n                        </div>\n                        <div className=\"text-xs font-extralight\">\n                            ~$ {(parseFloat(appAmount) * (currencies[(token2.name ?? CoinsNameVisual.CELO) as CoinsNameVisual]?.price ?? 0)).toFixed(2)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"px-8 py-3 font-extralight text-sm\">\n                <div className=\"flex justify-between\">\n                    <div>Rate:</div>\n                    <div>1 {token1.name} = {(parseFloat(appAmount||\"1\") / parseFloat(token1Input?.current?.value ?? \"0\")).toFixed(2)} {token2.name}</div>\n                </div>\n                {/* <div className=\"flex justify-between\">\n                    <div>Fee:</div>\n                    <div>0.001 Celo</div>\n                </div> */}\n            </div>\n            <div className=\"text-center mx-8\">\n                <button className=\"bg-primary w-full py-3 text-white rounded-xl\" onClick={startSwap}>\n                    {isLoading? <ClipLoader/> : \"Swap\"}\n                </button>\n            </div>\n        </div>\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess(val))} text=\"Successfully\" />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({activate: val}))} />}\n    </div>\n}\n\nexport default Swap;","import { useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport CreatePassword from \"../../components/import/createPassword\";\nimport Login from \"../../components/import/login\";\nimport { useAccountExistMutation } from \"../../redux/api\";\n\nconst Import = () => {\n    const [accountExist, { error: reqError, isLoading }] = useAccountExistMutation()\n    const [input, setInput] = useState<string>()\n    const [index, setIndex] = useState(0)\n    const [isError, setError] = useState('')\n\n    const Submitted = async () => {\n        if (input) {\n            try {\n                setError('')\n                const data = await accountExist({ phrase: input.trim() }).unwrap()\n                if (!data!.result) setIndex(1)\n                else setIndex(2)\n            } catch (error: any) {\n                console.error(error)\n                setError(error?.data?.message)\n            }\n        }\n    }\n\n    return <>\n        {index === 0 ? <section className=\"h-screen flex flex-col items-center justify-center gap-8\">\n            <div className=\"text-2xl sm:text-3xl text-primary text-center\">Import Your Recovery Phrase</div>\n            <div className=\"text-greylish\">\n                Enter your recovery (seed) phrase.\n                <br />\n                Only import on devices you trust.\n            </div>\n            <div className=\"flex flex-col gap-5 justify-center items-center\">\n                <div>\n                    <textarea onChange={(e) => setInput(e.target.value)} className=\"border-2 p-3 outline-none w-[300px] sm:w-[470px]\" placeholder=\"fish boot hand foot\"  rows={7}></textarea>\n                </div>\n                {isError && <div className=\"text-red-500\">{isError}</div>}\n                <button onClick={Submitted} className=\"bg-primary text-white px-5 py-2 rounded-xl w-[200px]\">{isLoading ? <ClipLoader /> : \"Import Account\"}</button>\n            </div>\n        </section>\n            :\n            input ? index === 1 ? <CreatePassword phrase={input} /> : <Login phrase={input} /> : null\n        }\n\n    </>\n}\n\nexport default Import;","import { useSelector } from \"react-redux\";\nimport { generate } from \"shortid\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\n\n\nconst Assets = () => {\n    const selectBalance = useSelector(SelectBalances)\n    return <>\n        <div>\n            <div className=\"font-semibold text-xl\">Assets</div>\n            <div className=\"w-full sm:px-5 pt-4 pb-6 \">\n                <div id=\"header\" className=\"grid grid-cols-[35%,25%,20%,20%] sm:grid-cols-[25%,15%,15%,20%,12.5%,12.5%] sm:px-8 py-5\" >\n                    <div className=\"text-sm sm:text-base\">Assets</div>\n                    <div className=\"text-sm sm:text-base\">Balance</div>\n                    <div className=\"text-sm sm:text-base\">Amount</div>\n                    <div className=\"hidden sm:block\">USD Price</div>\n                    <div className=\"hidden sm:block\">24h</div>\n                    <div className=\"text-sm sm:text-base\">% Assets</div>\n                </div>\n                <div className=\"pb-5 px-2 sm:px-8 shadow-custom rounded-xl\">\n                    {Object.values(selectBalance).map((item: IBalanceItem, index) => {\n                        return <div key={generate()} className=\"grid grid-cols-[35%,25%,20%,20%] sm:grid-cols-[25%,15%,15%,20%,12.5%,12.5%] border-b border-black py-5\" >\n                            <div className=\"flex space-x-3 items-center\">\n                                <div><img src={item?.coins?.coinUrl} width={30} height={30} alt=\"\" /></div>\n                                <div>{item?.coins?.name} </div>\n                            </div>\n                            <div>\n                                $ {(item.amount * item.reduxValue).toFixed(2)}\n                            </div>\n                            <div>\n                                {(item.amount||0).toFixed(2)}\n                            </div>\n                            <div className=\"hidden sm:block\">\n                                $ {(item.reduxValue||0).toFixed(2)}\n                            </div>\n                            <div className=\"hidden sm:block\">\n                               % {(item.per_24||0).toFixed(2)}\n                            </div>\n                            <div>\n                               % {(item.percent||0).toFixed(2)}\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Assets;","import { Fragment, useEffect, useState, useRef } from 'react';\nimport TeamContainer from '../../components/teams/teamContainer'\nimport Modal from '../../components/modal'\nimport AddTeams from '../../components/teams/buttons/addTeam'\nimport AddMember from '../../components/teams/buttons/addMember'\nimport { ClipLoader } from 'react-spinners';\nimport { TeamInfoWithMembers } from '../../types/sdk/Team/GetTeamsWithMembers';\nimport { generate } from 'shortid';\nimport Success from '../../components/success';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks'\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice'\nimport Error from '../../components/error';\nimport { useLazyGetTeamsWithMembersQuery } from '../../redux/api';\nimport { result } from 'lodash';\n\n\nconst Teams = () => {\n\n    const [teamCount] = useState(3)\n    const [skipCount, setSkipCount] = useState(0)\n    const skipRef = useRef(0)\n\n    const [trigger, result] = useLazyGetTeamsWithMembersQuery();\n\n\n    const isSuccess = useAppSelector(selectSuccess)\n    const isError = useAppSelector(selectError)\n    const dispatch = useAppDispatch()\n\n    const [addTeamModal, setAddTeamModal] = useState(false)\n    const [addMemberModal, setAddMemberModal] = useState(false)\n\n    const [teams, setTeams] = useState<TeamInfoWithMembers[]>([])\n\n    const maxTeamCount = useRef(0)\n\n    useEffect(() => {\n        if (result.data) {\n            maxTeamCount.current = result.data.total;\n            if (skipRef.current !== 0) {\n                setTeams([...teams, ...result.data.teams])\n            } else {\n                setTeams(result.data.teams)\n            }\n            dispatch(changeSuccess(false))\n        }\n    }, [result.data])\n\n    useEffect(() => {\n            skipRef.current = skipCount\n            trigger({ take: teamCount, skip: skipCount })\n    }, [skipCount])\n\n\n    useEffect(() => {\n        if (!isSuccess && result.data) {\n            //refetch()\n            skipRef.current = 0;\n            trigger({ take: teams.length < teamCount ? teamCount : teams.length, skip: skipRef.current })\n        }\n    }, [isSuccess])\n\n    return <div>\n        <div className=\"flex sm:justify-between pb-5 space-x-3 md:space-x-0\">\n            <div className=\"grid grid-cols-2 md:grid-cols-3 sm:gap-10 gap-1 col-span-4\">\n                <button className=\"bg-primary px-6 py-2 rounded-xl text-white text-xs sm:text-base\" onClick={() => setAddTeamModal(true)}>Add Team</button>\n                <button className=\"bg-primary px-6 py-2 rounded-xl text-white text-xs sm:text-base\" onClick={() => setAddMemberModal(true)}>Add Person</button>\n            </div>\n            <button className=\"px-5 py-2 bg-greylish bg-opacity-5 rounded-xl\">\n                Export\n            </button>\n        </div>\n        <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n            <div id=\"header\" className=\"hidden sm:grid grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] border-b border-black sm:pb-5 px-5\" >\n                <div className=\"font-normal\">Name</div>\n                <div className=\"font-normal hidden lg:block\">Team</div>\n                <div className=\"font-normal\">Amount</div>\n                <div className=\"font-normal\">Wallet Address</div>\n            </div>\n            <div>\n                {teams.map(w => w && w.members && w.members.length > 0 ? <Fragment key={generate()}><TeamContainer {...w} /></Fragment> : undefined)}\n                {teams.map(w => w && (!w?.members || w?.members?.length === 0) ? <Fragment key={generate()}><TeamContainer {...w} /></Fragment> : undefined)}\n\n                {(result.isLoading || result.isFetching) && <div className=\"flex justify-center py-10\"><ClipLoader /></div>}\n            </div>\n        </div>\n        {(!result.isLoading && !result.isFetching) && (teams.length ?? 0) < maxTeamCount.current && <div className=\"flex justify-center py-4\">\n            <button className=\"text-primary px-5 py-3 rounded-xl border border-primary\" onClick={() => {\n                if (maxTeamCount.current - (teams.length ?? 0) < teamCount) {\n                    setSkipCount(maxTeamCount.current - (maxTeamCount.current - teams.length))\n                } else {\n                    setSkipCount(teams.length)\n                }\n            }}>\n                Load More\n            </button>\n        </div>}\n        {addTeamModal &&\n            <Modal onDisable={setAddTeamModal}>\n                <AddTeams onDisable={setAddTeamModal} />\n            </Modal>}\n        {addMemberModal &&\n            <Modal onDisable={setAddMemberModal}>\n                <AddMember onDisable={setAddMemberModal} />\n            </Modal>}\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess(val))} text=\"Successfully\" />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({activate: val}))} />}\n    </div>\n}\n\nexport default Teams;","import { ClipLoader } from 'react-spinners';\nimport TransactionHistory from '../../components/dashboard/main/transactionHistory'\nimport Statistics from '../../components/dashboard/main/statistics'\nimport useTransactionProcess from '../../hooks/useTransactionProcess';\nimport useRefetchData from '../../hooks/useRefetchData';\n\n\nconst Main = () => {\n    const transactions = useTransactionProcess()\n    \n\n    return <main className=\"grid grid-cols-1 xl:grid-cols-2 w-full gap-5\">\n        <div className=\"grid grid-cols-2 gap-8\">\n            <Statistics />\n        </div>\n        <div id=\"transaction\" className=\"pb-14 pt-[30px]\">\n            {transactions ? <TransactionHistory transactions={transactions} /> : <div className=\"flex justify-center\"> <ClipLoader /></div>}\n        </div>\n    </main>\n}\n\nexport default Main;","import dateFormat from \"dateformat\";\nimport { useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { generate } from \"shortid\";\nimport Web3 from \"web3\";\nimport TransactionItem from \"../../components/transactionItem\";\nimport { useLazyGetTransactionsQuery } from \"../../redux/api\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { SelectCurrencies } from \"../../redux/reducers/currencies\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { Coins, TransactionFeeTokenName } from \"../../types/coins\";\nimport { TransactionDirection, TransactionStatus, TransactionType } from \"../../types/dashboard/transaction\";\nimport { CSVLink } from \"react-csv\";\nimport lodash from \"lodash\";\nimport { Transactions as transactionType } from \"../../types/sdk\";\nimport _ from \"lodash\";\nimport useTransactionProcess from \"../../hooks/useTransactionProcess\";\n\n\nconst Transactions = () => {\n    const storage = useAppSelector(selectStorage);\n\n    const [take, setTake] = useState(4)\n    const [trigger, { data: transactions }] = useLazyGetTransactionsQuery()\n    const list = useTransactionProcess()\n\n    useEffect(() => {\n        if (storage?.accountAddress) {\n            trigger(storage.accountAddress)\n            const interval = setInterval(() => {\n                trigger(storage.accountAddress)\n            }, 10000)\n            return () => clearInterval(interval)\n        }\n    }, [])\n\n    return <>\n        <div>\n            <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n                <div id=\"header\" className=\"grid grid-cols-[25%,45%,30%] sm:grid-cols-[45%,25%,15%,15%] border-b border-black pb-5 pl-5\" >\n                    <div className=\"sm:hidden text-xs font-semibold\">Recent</div>\n                    <div className=\"hidden sm:block text-xs sm:text-base font-semibold\">Recent Transactions</div>\n                    <div className=\"text-xs sm:text-base font-semibold\">Total Amount</div>\n                    <div className=\"font-semibold hidden md:block\">Status</div>\n                    <div className=\"place-self-end \">\n                        {transactions && <CSVLink className=\"font-normal px-2 sm:px-5 py-1 rounded-md cursor-pointer bg-greylish bg-opacity-20 flex items-center justify-center xl:space-x-5\" filename={\"remox_transactions.csv\"} data={transactions.result.map(w => ({\n                            'Sent From:': w.from,\n                            'Amount:': parseFloat(Web3.utils.fromWei(w.value, 'ether')).toFixed(4) + ` ${Coins[Object.entries(TransactionFeeTokenName).find(s => s[0] === w.tokenSymbol)![1]].name}`,\n                            'To:': w.to,\n                            'Date': dateFormat(new Date(parseInt(w.timeStamp) * 1e3), \"mediumDate\"),\n                            \"Gas\": parseFloat(w.gasUsed) * parseFloat(w.gasPrice),\n                            \"Block Number\": w.blockNumber,\n                            \"Transaction Hash\": w.hash,\n                            \"Block Hash\": w.blockHash,\n                            \"Input\": w.input\n                        }))}>\n                            <div className={'hidden xl:block'}>Export</div>\n                            <img src=\"/icons/downloadicon.svg\" alt=\"\" />\n                        </CSVLink>}\n                    </div>\n                </div>\n                <div>\n                    {list ? list.slice(0, take).map(({ hash, amount, coinName, type, direction, date, surplus, amountUSD }) => <TransactionItem key={generate()} hash={hash} amountCoin={`${amount} ${coinName}`} type={type} direction={direction} date={date} amountUSD={`${surplus} ${amountUSD.toFixed(3)} $`} status={TransactionStatus.Completed} />\n                    ) : <div className=\"text-center\"><ClipLoader /></div>}\n                </div>\n                {list && take < 100 && take < Object.values(list).length && <div className=\"flex justify-center py-4\">\n                    <button className=\"text-primary px-5 py-3 rounded-xl border border-primary\" onClick={() => {\n                        if (100 - take < 4) {\n                            setTake(100 - (100 - take))\n                        } else {\n                            setTake(take + 4 < 100 ? take + 4 : 100)\n                        }\n                    }}>\n                        Load More\n                    </button>\n                </div>}\n            </div>\n        </div>\n    </>\n}\n\nexport default Transactions;","import dateFormat from \"dateformat\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ClipLoader } from \"react-spinners\";\nimport Web3 from \"web3\";\nimport Dropdown from \"../../components/dropdown\";\nimport { useLazyGetTransactionsQuery } from \"../../redux/api\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { SelectCurrencies } from \"../../redux/reducers/currencies\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { Coins, CoinsURL, TransactionFeeTokenName } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport lodash from \"lodash\";\nimport { Transactions } from \"../../types/sdk\";\nimport _ from \"lodash\";\n\nconst Details = () => {\n    const storage = useAppSelector(selectStorage);\n    const currencies = useAppSelector(SelectCurrencies)\n    const params = useParams<{ id: string }>()\n\n    const [totalAmount, setTotalAmount] = useState<number>();\n    const [transactionFee, setTransactionFee] = useState<number>();\n\n    const [list, setList] = useState<{ [name: string]: Transactions[] }>()\n    const [trigger, { data: transactions }] = useLazyGetTransactionsQuery()\n\n    useEffect(() => {\n        if (storage?.accountAddress) {\n            trigger(storage.accountAddress)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (transactions?.result) {\n            try {\n                const res = lodash.groupBy(transactions.result, lodash.iteratee('blockNumber'))\n                let newObject: { [name: string]: Transactions[] } = {}\n                Object.entries(res).map(([key, value]) => {\n                    const data = _(value).orderBy((o) => BigInt(o.value), ['desc']).uniqBy('hash').value()\n                    newObject[key] = data\n                })\n                setList(newObject)\n            } catch (error) {\n                console.error(error)\n            }\n        }\n\n    }, [transactions?.result])\n\n\n    useEffect(() => {\n        if (list) {\n            if (list[params.id][0].from.toLowerCase() !== storage?.accountAddress.toLowerCase()) {\n                const maTx = list[params.id].find(w => w.to.toLowerCase() === storage?.accountAddress.toLowerCase())\n                if (maTx) {\n                    const coin = Coins[Object.entries(TransactionFeeTokenName).find(w => w[0] === maTx.tokenSymbol)![1]]\n                    setTotalAmount(lodash.round((currencies[coin.name]?.price ?? 0) * Number(Web3.utils.fromWei(maTx.value, 'ether')), 6))\n\n                    setTransactionFee(Number(Web3.utils.fromWei((Number(maTx.gasUsed) * Number(maTx.gasPrice)).toString(), 'ether')))\n                }\n            } else {\n                const total = lodash.round(list[params.id].reduce((a, c) => {\n                    const coin = Coins[Object.entries(TransactionFeeTokenName).find(w => w[0] === c.tokenSymbol)![1]]\n                    a += (currencies[coin.name]?.price ?? 0) * Number(Web3.utils.fromWei(c.value, 'ether'))\n                    return a;\n                }, 0), 6)\n                setTotalAmount(total)\n\n                const fee = list[params.id].reduce((a, c) => {\n                    a += Number(Web3.utils.fromWei((Number(c.gasUsed) * Number(c.gasPrice)).toString(), 'ether'))\n                    return a\n                }, 0)\n\n                setTransactionFee(fee)\n            }\n        }\n    }, [list])\n\n    return <>\n        <div>\n            <div className=\"w-full shadow-custom px-5 py-14 rounded-xl flex flex-col\">\n                <div className=\"font-bold text-xl sm:text-2xl\">\n                    Transaction Details\n                </div>\n                {list ? <div className=\"flex flex-col sm:grid sm:grid-cols-3 py-5 gap-14\">\n                    {list[params.id].length === 1 ?\n                        TransactionDetailInput(\"Transaction Hash\", `${list[params.id][0].hash}`, `https://explorer.celo.org/tx/${list[params.id][0].hash}/token-transfers`)\n                        :\n                        <Dropdown displayName=\"Transaction Hash\" className=\"h-full bg-greylish bg-opacity-10 font-semibold\" onSelect={(w: DropDownItem) => {\n                            window.open(`https://explorer.celo.org/tx/${w.name}/token-transfers`, '_blank')\n                        }} nameActivation={true} selected={{ name: \"Go to Explorer\", coinUrl: CoinsURL.None }} list={[\n                            ...list[params.id].map(w => ({ name: w.hash, coinUrl: CoinsURL.None })),\n                        ]} />\n                    }\n                    {TransactionDetailInput(\"Paid To\", [...new Set(list[params.id].map(w=>w.to))].length === 1 ? '1 person' : `${[...new Set(list[params.id].map(w=>w.to))].length} people`)}\n                    {TransactionDetailInput(\"Total Amount\", `${totalAmount} USD`)}\n                    {TransactionDetailInput(\"Transaction Fee\", `${transactionFee}`)}\n                    {TransactionDetailInput(\"Created Date & Time\", `${dateFormat(new Date(Number(list[params.id][0].timeStamp) * 1e3), 'dd/mm/yyyy hh:MM:ss')}`)}\n                    {TransactionDetailInput(\"Status\", \"Completed\")}\n                    {list[params.id].length === 1 ||  [...new Set(list[params.id].map(w=>w.to))].length === 1 ?\n                        TransactionDetailInput(\"Wallet Address\",\n                            (list[params.id][0].from.toLowerCase() !== storage?.accountAddress.toLowerCase() ? list[params.id][0].from : list[params.id][0].to).split('').reduce((a, c, i, arr) => {\n                                return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n                            }, ''), undefined, () => window.navigator.clipboard.writeText(list[params.id][0].from)\n                        )\n                        :\n                        <Dropdown displayName=\"Wallet Address\" className=\"h-[75px] bg-greylish bg-opacity-10\" nameActivation={true} selected={{ name: \"Choose to copy an address\", coinUrl: CoinsURL.None }}\n                            onSelect={(w: DropDownItem) => {\n                                if (w.name) window.navigator.clipboard.writeText(w.name)\n                            }}\n                            list={[\n                                ...list[params.id].map(w => ({ name: w.to, coinUrl: CoinsURL.None, disableAddressDisplay: true })),\n                            ]} />}\n                </div> : <ClipLoader />}\n            </div>\n        </div>\n    </>\n}\n\nexport default Details;\n\n\nconst TransactionDetailInput = (title: string, children: JSX.Element | JSX.Element[] | string, url?: string, onClick?: () => void) => {\n\n    return <div className=\"bg-greylish bg-opacity-10 flex flex-col px-4 py-3 rounded-xl min-h-[75px]\">\n        <div className=\"text-sm text-greylish opacity-80\">\n            {title}\n        </div>\n        <div className={`font-bold text-lg truncate ${onClick && \"cursor-pointer\"} ${url && \"cursor-pointer\"}`} onClick={() => {\n            url ? window.open(url, '_blank') : console.log(\"Wish you more money :)\")\n        }}>\n            {children}\n        </div>\n        { }\n    </div>\n}","import { configureStore } from '@reduxjs/toolkit'\nimport Notification from './reducers/notificationSlice'\nimport Storage from './reducers/storage'\nimport Unlock from './reducers/unlock'\nimport Currency from './reducers/currencies'\nimport Toggle from './reducers/toggles'\nimport Transaction from './reducers/transactions'\nimport { accountAPI, customerAPI, teamAPI, transactionAPI, teamMemberAPI, BlockScoutApi, swapAPI } from './api'\n\nconst store = configureStore({\n    reducer: {\n        currencyandbalance: Currency,\n        notification: Notification,\n        storage: Storage,\n        unlock: Unlock,\n        toggle: Toggle,\n        transactions: Transaction,\n        [accountAPI.reducerPath]: accountAPI.reducer,\n        [customerAPI.reducerPath]: customerAPI.reducer,\n        [swapAPI.reducerPath]: swapAPI.reducer,\n        [teamAPI.reducerPath]: teamAPI.reducer,\n        [teamMemberAPI.reducerPath]: teamMemberAPI.reducer,\n        [transactionAPI.reducerPath]: transactionAPI.reducer,\n        [BlockScoutApi.reducerPath]: BlockScoutApi.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(accountAPI.middleware, customerAPI.middleware, transactionAPI.middleware, teamAPI.middleware, teamMemberAPI.middleware, BlockScoutApi.middleware, swapAPI.middleware),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store;","import { updateAllCurrencies, updateUserBalance } from \"../redux/reducers/currencies\";\nimport { accountAPI, BlockScoutApi, transactionAPI } from \"../redux/api\";\nimport { Coins } from \"../types/coins\";\nimport store from '../redux/store'\nimport { setTransactions } from \"../redux/reducers/transactions\";\nimport { changeNotificationSeen } from \"../redux/reducers/notificationSlice\";\n\nconst Initalization = () => {\n    const storage = store.getState().storage;\n    if (storage.user !== null && storage.user.accountAddress !== null) {\n        const currencyResult = store.dispatch(\n            transactionAPI.endpoints.getCurrencies.initiate()\n        )\n\n        const notifySeen = store.dispatch(\n            accountAPI.endpoints.getTime.initiate()\n        )\n\n        notifySeen.then((res) => {\n            if (res.data && res.data.date) {\n                store.dispatch(changeNotificationSeen(parseInt(res.data.date)))\n                notifySeen.unsubscribe()\n            }\n        })\n\n        currencyResult.then((res) => {\n            const updatedCurrency = res.data?.data.map(d => ({\n                price: d.price,\n                percent_24: d.percent_24\n            }))\n\n            store.dispatch(updateAllCurrencies(\n                updatedCurrency\n            ))\n            currencyResult.unsubscribe();\n\n\n            if (!updatedCurrency) return\n            const [Celo, Cusd, Ceur, Ube, Moo, Mobi, Poof] = updatedCurrency;\n\n            const celo = Celo\n            const cusd = Cusd\n            const ceur = Ceur\n            const ube = Ube\n            const moo = Moo\n            const mobi = Mobi\n            const poof = Poof\n\n            const balanceResult = store.dispatch(\n                transactionAPI.endpoints.getBalance.initiate()\n            )\n\n            const transactionsResult = store.dispatch(\n                BlockScoutApi.endpoints.getTransactions.initiate(store.getState().storage.user!.accountAddress)\n            )\n\n            transactionsResult.then((res) => {\n                if (res.data) {\n                    store.dispatch(setTransactions(res.data))\n                }\n                transactionsResult.unsubscribe()\n            })\n\n            balanceResult.then((balanceResponse) => {\n                const balance = balanceResponse.data;\n                if (balance && celo && cusd && ceur && ube && moo && mobi && poof) {\n                    const pCelo = parseFloat(balance.celoBalance);\n                    const pCusd = parseFloat(balance.cUSDBalance);\n                    const pCeur = parseFloat(balance.cEURBalance);\n                    const pUbe = parseFloat(balance.UBE);\n                    const pMoo = parseFloat(balance.MOO);\n                    const pMobi = parseFloat(balance.MOBI);\n                    const pPoof = parseFloat(balance.POOF);\n\n                    const celoPrice = pCelo * (celo.price ?? 0);\n                    const cusdPrice = pCusd * (cusd.price ?? 0);\n                    const ceurPrice = pCeur * (ceur.price ?? 0);\n                    const ubePrice = pUbe * (ube.price ?? 0);\n                    const mooPrice = pMoo * (moo.price ?? 0);\n                    const mobiPrice = pMobi * (mobi.price ?? 0);\n                    const poofPrice = pPoof * (poof.price ?? 0);\n\n                    const total = celoPrice + cusdPrice + mooPrice + + ceurPrice + ubePrice + mobiPrice + poofPrice;\n\n                    const updatedBalance = [\n                        { amount: pCelo, per_24: Celo.percent_24, percent: (celoPrice * 100) / total, coins: Coins.celo, reduxValue: celo.price },\n                        { amount: pCusd, per_24: Cusd.percent_24, percent: (cusdPrice * 100) / total, coins: Coins.cUSD, reduxValue: cusd.price },\n                        { amount: pCeur, per_24: Ceur.percent_24, percent: (ceurPrice * 100) / total, coins: Coins.cEUR, reduxValue: ceur.price },\n                        { amount: pUbe, per_24: Ube.percent_24, percent: (ubePrice * 100) / total, coins: Coins.UBE, reduxValue: ube.price },\n                        { amount: pMoo, per_24: Moo.percent_24, percent: (mooPrice * 100) / total, coins: Coins.MOO, reduxValue: moo.price },\n                        { amount: pMobi, per_24: Mobi.percent_24, percent: (mobiPrice * 100) / total, coins: Coins.MOBI, reduxValue: mobi.price },\n                        { amount: pPoof, per_24: Poof.percent_24, percent: (poofPrice * 100) / total, coins: Coins.POOF, reduxValue: poof.price }\n                    ]\n\n                    store.dispatch(updateUserBalance(updatedBalance))\n                }\n\n                balanceResult.unsubscribe();\n            })\n        })\n\n        return true;\n    }\n    return false;\n}\n\nexport default Initalization;","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"../../components/dropdown\";\nimport { generate } from 'shortid'\nimport { useHistory } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member, MultipleTransactionData } from \"../../types/sdk\";\nimport { useGetBalanceQuery, useLazyGetTeamsWithMembersQuery, useSendCeloMutation, useSendStableTokenMutation, useSendMultipleTransactionsMutation, useSendAltTokenMutation } from \"../../redux/api\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport TeamInput from \"../../components/pay/teaminput\";\nimport { AltCoins, AltcoinsList, Coins, CoinsName, StableTokens, TransactionFeeTokenName } from \"../../types/coins\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport lodash from \"lodash\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\";\nimport Initalization from \"../../utility/init\";\n\n\nconst MassPay = () => {\n\n    const storage = useAppSelector(selectStorage)\n    const isError = useAppSelector(selectError)\n    const balance = useAppSelector(SelectBalances)\n    const router = useHistory();\n    const dispatch = useAppDispatch()\n\n    const { data, refetch } = useGetBalanceQuery()\n    const [sendCelo] = useSendCeloMutation()\n    const [sendStableToken] = useSendStableTokenMutation()\n    const [sendMultiple] = useSendMultipleTransactionsMutation()\n    const [sendAltcoin] = useSendAltTokenMutation()\n\n    const [currentBalances, setCurrentBalances] = useState<IBalanceItem[]>();\n    const [selectedBalances, setSelectedBalances] = useState<JSX.Element[]>();\n    const [selectedBalanceResult, setSelectedBalanceResult] = useState<JSX.Element[]>();\n\n\n\n    const [getTeams, { data: teams, isLoading: teamLoading }] = useLazyGetTeamsWithMembersQuery()\n\n\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem>();\n\n    const resMember = useRef<Array<Member & { selected: boolean }>>([])\n    const [members, setMembers] = useState<Member[]>();\n    const [selectedId, setSelectedId] = useState<string[]>([]);\n\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n\n    useEffect(() => {\n        getTeams({ take: Number.MAX_SAFE_INTEGER })\n    }, [])\n\n\n    useEffect(() => {\n        if (data) {\n            setSelectedWallet({ name: \"Set all to\", address: \"\" })\n            const coins = Object.values(Coins).map((coin: AltCoins) => ({\n                name: `${parseFloat(data[coin.responseName]).toFixed(3)} ${coin.name}`,\n                type: coin.value,\n                value: coin.value,\n                coinUrl: coin.coinUrl,\n                amount: data[coin.responseName]\n            }))\n            setList(coins)\n        }\n    }, [data])\n\n    useEffect(() => {\n        if (teams && teams.teams.length) {\n            setSelectedTeam({ name: teams.teams[0].title, address: teams.teams[0].id })\n        }\n    }, [teams])\n\n    useEffect(() => {\n        if (teams && teams.teams.length && selectedTeam && selectedTeam.address) {\n            const team = teams.teams.find(w => w.id === selectedTeam.address)\n            if(team && team.members){\n                resMember.current = team.members.map(w => ({ ...w, selected: false }))\n            }\n            setMembers(teams.teams.find(w => w.id === selectedTeam.address)!.members)\n        }\n    }, [selectedTeam, teams])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const result: Array<MultipleTransactionData> = []\n\n        const mems = resMember.current.filter(w => selectedId.includes(w.id))\n\n        if (mems.length) {\n            for (let index = 0; index < mems.length; index++) {\n                result.push({\n                    toAddress: mems[index].address,\n                    amount: mems[index].amount,\n                    tokenType: mems[index].currency\n                })\n            }\n        }\n\n        setIsPaying(true)\n\n        try {\n            if (result.length === 1) {\n                if (result[0].tokenType === CoinsName.CELO) {\n                    await sendCelo({\n                        toAddress: result[0].toAddress,\n                        amount: result[0].amount,\n                        phrase: storage!.encryptedPhrase\n                    }).unwrap\n\n                } else if (result[0].tokenType === CoinsName.cUSD || result[0].tokenType === CoinsName.cEUR) {\n                    await sendStableToken({\n                        toAddress: result[0].toAddress,\n                        amount: result[0].amount,\n                        phrase: storage!.encryptedPhrase,\n                        stableTokenType: StableTokens[(result[0].tokenType)]\n                    }).unwrap()\n                } else {\n                    await sendAltcoin({\n                        toAddress: result[0].toAddress,\n                        amount: result[0].amount,\n                        phrase: storage!.encryptedPhrase,\n                        altTokenType: AltcoinsList[(result[0].tokenType as AltcoinsList)]\n                    }).unwrap()\n                }\n            }\n            else {\n                const arr: Array<MultipleTransactionData> = result.map(w => ({\n                    toAddress: w.toAddress,\n                    amount: w.amount,\n                    tokenType: w.tokenType\n                }))\n\n                await sendMultiple({\n                    multipleAddresses: arr,\n                    phrase: storage!.encryptedPhrase\n                }).unwrap()\n            }\n            setSuccess(true);\n            refetch()\n            Initalization();\n\n        } catch (error : any) {\n            console.error(error)\n            dispatch(changeError({activate: true, text: error?.data?.message.slice(0,80)}));\n        }\n\n        setIsPaying(false);\n    }\n\n    useEffect(() => {\n        if (selectedId && selectedId.length && balance) {\n            const result = lodash.groupBy(resMember.current.filter(w => selectedId.includes(w.id)), \"currency\");\n            const currenBalanceArr: IBalanceItem[] = []\n            Object.entries(result).forEach(([key, value]) => {\n                Object.entries(balance).forEach(([key2, value2]) => {\n                    if (key.toLowerCase() === key2.toLowerCase() && value2 !== undefined) {\n                        currenBalanceArr.push(value2)\n                    }\n                })\n            })\n\n            const bal = Object.entries(result).map(([key,value]) => {\n                if(!balance[Coins[key as TransactionFeeTokenName].name]?.reduxValue) return <></>\n                const amount = value.reduce((a,c)=>a+=parseFloat(c.amount),0)\n                return <div className=\"flex flex-col space-y-3\">\n                    <div>{amount} {Coins[key as TransactionFeeTokenName].name}</div>\n                    <div className=\"text-black opacity-50\">{(amount * balance[Coins[key as TransactionFeeTokenName].name]!.reduxValue).toFixed(2)} USD</div>\n                </div>\n            })\n\n            const selectedAmount = Object.entries(result).map(([key,value]) => ({coin: key, value: value.reduce((a,c)=>a+=parseFloat(c.amount),0)}))\n\n            const balanceRes = currenBalanceArr?.map(w => {\n                if(!balance[w.coins.name]?.reduxValue) return <></>\n                return <div className=\"flex flex-col space-y-3\">\n                    <div>{(w.amount - (selectedAmount.find(s=>s.coin === w.coins.name || s.coin === w.coins.feeName)?.value??0)).toFixed(2)} {w.coins.name}</div>\n                    <div className=\"text-black opacity-50\">{((w.amount - (selectedAmount.find(s=>s.coin === w.coins.name || s.coin === w.coins.feeName)?.value??0)) * balance[w.coins.name]!.reduxValue).toFixed(2)} USD</div>\n                </div>\n            })\n\n            setCurrentBalances(currenBalanceArr)\n            setSelectedBalances(bal)\n            setSelectedBalanceResult(balanceRes)\n        \n\n        }\n    }, [selectedId, balance])\n\n    return <div>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"w-[95%] sm:w-[85vw] min-h-[75vh]\">\n                    <div className=\"w-full\">\n                        <div>Mass Payout</div>\n                    </div>\n                    <div className=\" h-auto shadow-xl border flex flex-col gap-10 py-10\">\n                        {!teamLoading && teams && teams.teams.length === 0 ? <div className=\"flex justify-center\">No Team Yet. Please, first, create a team</div> : <><div className=\"flex flex-col px-4 sm:pl-12 sm:pr-[25%] gap-10\">\n                            <div className=\"flex flex-col space-y-3\">\n                                <span className=\"text-left font-semibold\">Paying From</span>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-3 sm:gap-x-10\">\n                                    {!(teams && selectedTeam) ? <ClipLoader /> : <Dropdown className=\"h-full\" disableAddressDisplay={true} onSelect={setSelectedTeam} nameActivation={true} selected={selectedTeam} list={teams.teams.map(w => ({ name: w.title, address: w.id }))} />}\n                                    {!(data && selectedWallet) ? <ClipLoader /> : <Dropdown onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={list} disableAddressDisplay={true} />}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold\">Team Details</span>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                                            if (e.target.checked) setSelectedId(resMember.current.map(w => w.id))\n                                            else setSelectedId([])\n                                        }} />\n                                        <button type=\"button\">\n                                            Select All\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-[25%,45%,25%,5%] gap-5\">\n                                    <div className=\"hidden sm:block font-semibold\">Name</div>\n                                    <div className=\"hidden sm:block font-semibold\">Address</div>\n                                    <div className=\"hidden sm:block font-semibold\">Disbursement</div>\n                                    <div className=\"hidden sm:block\"></div>\n                                    {teams && resMember && selectedTeam && selectedTeam.address && members && members.length > 0 ? resMember.current.map((w, i) => <TeamInput generalWallet={selectedWallet!} setGeneralWallet={setSelectedWallet} selectedId={selectedId} setSelectedId={setSelectedId} key={generate()} index={i} {...w} members={resMember} />) : 'No Member Yet'}\n                                </div>\n                            </div>\n                            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-y-3 px-1 sm:px-5\">\n                                <div className=\"sm:text-xs font-semibold text-sm opacity-60\">Current Balance</div>\n                                <div className=\"sm:text-xs font-semibold text-sm opacity-60\">Current Amount To Send</div>\n                                <div className=\"sm:text-xs hidden sm:block font-semibold text-sm opacity-60\">Selected People</div>\n                                <div className=\"sm:text-xs hidden sm:block font-semibold text-sm opacity-60\">Balance After Transaction</div>\n                                {selectedId.length === 0 && <div className=\"col-span-2 sm:col-span-4 text-center pt-5\">No Selected Member Yet</div>}\n                                {selectedId.length > 0 && currentBalances && selectedBalances && selectedBalances.length > 0 && currentBalances.length > 0 &&\n                                    <>\n                                        <div className={'flex flex-col space-y-5'}>\n                                            {\n                                                currentBalances.map((w) => {\n                                                    return <div className=\"flex flex-col space-y-3\">\n                                                        <div>\n                                                            {w.amount.toFixed(2)} {w.coins.name}\n                                                        </div>\n                                                        <div className=\"text-black opacity-50\">\n                                                            {(w.amount * w.reduxValue).toFixed(2)} USD\n                                                        </div>\n                                                    </div>\n                                                })\n                                            }\n                                        </div>\n                                        <div className=\"flex flex-col space-y-5\">\n                                            {\n                                                selectedBalances\n                                            }\n                                        </div>\n                                        <div className=\"sm:hidden font-semibold text-sm opacity-60\">Selected People</div>\n                                        <div className=\"sm:hidden font-semibold text-sm opacity-60\">Balance After Transaction</div>\n                                        <div className=\"text-black opacity-50 text-sm\">\n                                            {selectedId.length} people\n                                        </div>\n                                        <div className={'flex flex-col space-y-5'}>\n                                            {selectedBalanceResult}\n                                        </div>\n                                    </>}\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                            <div className=\"flex justify-center\">\n                                <div className=\"flex flex-col-reverse sm:grid sm:grid-cols-2 w-[400px] justify-center gap-5\">\n                                    <button type=\"button\" className=\"border-2 border-primary px-3 py-2 text-primary rounded-lg\" onClick={() => router.goBack()}>Close</button>\n                                    <button type=\"submit\" className=\"bg-primary px-3 py-2 text-white flex items-center justify-center rounded-lg\">{isPaying ? <ClipLoader /> : 'Pay'}</button>\n                                </div>\n                            </div> </>}\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({activate: false, text: ''}))} />}\n    </div>\n\n}\n\nexport default MassPay;","import Dashboard from './pages/dashboard/index';\nimport {\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  Redirect\n} from 'react-router-dom'\nimport Pay from './pages/dashboard/pay';\nimport Home from './pages/home';\nimport Create from './pages/create';\nimport { useEffect } from 'react'\nimport Unlock from './pages/unlock';\nimport Swap from './pages/swap'\nimport Import from './pages/import/index';\nimport Assets from './pages/dashboard/assets'\nimport Teams from './pages/teams/index'\nimport Main from './pages/dashboard/main'\nimport Transactions from './pages/transactions/transactions'\nimport { IStorage, selectStorage } from './redux/reducers/storage';\nimport { selectUnlock } from './redux/reducers/unlock';\nimport { useAppSelector } from './redux/hooks';\nimport Details from './pages/transactions/details';\nimport MassPay from './pages/dashboard/masspay'\nimport Initalization from './utility/init'\n\nfunction App(): JSX.Element {\n  const storage = useAppSelector(selectStorage)\n  const unlock = useAppSelector(selectUnlock)\n\n\n  return (\n    <div className=\"App min-h-screen w-full\">\n      <Switch>\n        <Route path=\"/unlock\" exact >\n          <Unlock />\n        </Route>\n        <CustomRouter unlock={unlock} data={storage} />\n      </Switch>\n    </div>\n  );\n}\n\nconst CustomRouter = ({ unlock, data }: { unlock: boolean, data: IStorage | null }) => {\n  const router = useHistory();\n  const location = useLocation();\n  // const currencies = useAppSelector(SelectCurrencies)\n  // const transactions = useAppSelector(SelectTransactions)\n  // const balances = useAppSelector(SelectBalances)\n\n  useEffect(() => {\n    if (router && data && unlock && location && (location.pathname === '/' || location.pathname === '/import')) router.push('/dashboard')\n  }, [unlock, router, data, location])\n\n  const unlockChecking = (element: JSX.Element | Array<JSX.Element>) => {\n\n    if (!location.pathname.includes(\"/dashboard\") && !data?.accountAddress) return element\n    if (unlock) {\n      // if (currencies.CELO === undefined && balances.CELO === undefined && transactions === undefined) {\n      //   return <div className={'h-full flex items-center justify-center'}>\n      //     <ClipLoader />\n      //   </div>\n      // }\n      return element\n    }\n\n    return <Redirect\n      to={{\n        pathname: \"/unlock\",\n        state: { from: location }\n      }}\n    />\n  }\n\n  return <>\n    <Route path=\"/\" exact render={() => unlockChecking(<Home />)} />\n    <Route path=\"/create\" exact render={() => unlockChecking(<Create />)} />\n    <Route path=\"/import\" exact render={() => unlockChecking(<Import />)} />\n    <AuthRouter data={data} unlockChecking={unlockChecking} />\n  </>\n}\n\n\nconst AuthRouter = ({ data, unlockChecking }: { data: IStorage | null, unlockChecking: Function }) => {\n  const router = useHistory();\n\n\n  useEffect(() => {\n    if (!data) {\n      router.push('/')\n      return\n    }\n\n    Initalization()\n\n  }, [data, router])\n\n  return <>\n\n    <Route path={'/masspayout'} exact render={() => unlockChecking(<MassPay />)} />\n    <Route path={'/pay'} exact render={() => unlockChecking(<Pay />)} />\n    <Route path={'/dashboard'} render={({ match: { path } }) => {\n      return <Dashboard>\n        <Switch>\n          <Route path={path + '/'} exact render={() => unlockChecking(<Main />)} />\n          <Route path={path + '/assets'} exact render={() => unlockChecking(<Assets />)} />\n          <Route path={path + '/teams'} exact render={() => unlockChecking(<Teams />)} />\n          <Route path={path + '/transactions'} exact render={() => unlockChecking(<Transactions />)} />\n          <Route path={path + '/transactions/:id'} exact render={() => unlockChecking(<Details />)} />\n          <Route path={path + '/swap'} exact render={() => unlockChecking(<Swap />)} />\n        </Switch>\n      </Dashboard>\n    }} >\n\n    </Route>\n  </>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dist/index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n","export * from './sdk/Account/AccountCreate'\nexport * from './sdk/Account/AccountExist'\nexport * from './sdk/Account/CreatePassword'\nexport * from './sdk/Account/Signin'\nexport * from './sdk/Account/Unlock'\nexport * from './sdk/Account/AccountInfo'\n\nexport * from './sdk/Transaction/GetBalance'\nexport * from './sdk/Transaction/SendCUSD'\nexport * from './sdk/Transaction/SendCelo'\nexport * from './sdk/Transaction/SendMultipleTransaction'\nexport * from './sdk/Transaction/SendAltcoin'\nexport * from './sdk/Transaction/GetCurrencies'\n\nexport * from './sdk/Customer/CustomerCreate'\nexport * from './sdk/Customer/GetCustomer'\n\nexport * from './sdk/Team/CreateTeam'\nexport * from './sdk/Team/GetTeams'\nexport * from './sdk/Team/UpdateTeam'\nexport * from './sdk/Team/GetTeamsWithMembers'\n\nexport * from './sdk/TeamMember/addMember'\nexport * from './sdk/TeamMember/getMember'\nexport * from './sdk/TeamMember/updatemember'\n\nexport * from './sdk/blockscout'"],"sourceRoot":""}