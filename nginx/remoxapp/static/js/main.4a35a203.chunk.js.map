{"version":3,"sources":["types/index.ts","types/sdk/Transaction/GetBalance.ts","types/sdk/TeamMember/addMember.ts","types/sdk.ts","types/coins.ts","components/notification/index.tsx","redux/hooks.ts","redux/reducers/storage.ts","redux/reducers/toggles.ts","redux/reducers/transactions.ts","redux/reducers/selectedAccount.ts","hooks/useTransactionProcess.tsx","utility/const.ts","redux/api/account.ts","redux/api/customer.ts","redux/api/team.ts","redux/api/transaction.ts","redux/api/teamMember.ts","redux/api/blockscout.ts","redux/api/swap.ts","redux/api/multisig.ts","redux/reducers/notificationSlice.ts","redux/reducers/currencies.ts","hooks/useRefetchData.tsx","hooks/useModalSideExit.tsx","utility/index.ts","components/dashboard/visitcard.tsx","layouts/dashboard/navbar.tsx","components/phraseBar.tsx","redux/reducers/unlock.ts","components/create/phrase.tsx","components/input.tsx","components/create/set.tsx","components/dashboard/sidebarlist.tsx","components/dashboard/main/coinitem.tsx","components/dashboard/main/statistics.tsx","components/transactionItem.tsx","components/dashboard/accordion.tsx","components/dashboard/main/transactionHistory.tsx","components/import/createPassword.tsx","layouts/home/header.tsx","components/import/login.tsx","components/dropdown.tsx","components/pay/payinput.tsx","components/pay/teaminput.tsx","components/teams/buttons/addMember.tsx","components/teams/buttons/addTeam.tsx","components/teams/buttons/delete.tsx","components/teams/buttons/editMember.tsx","components/teams/buttons/editTeam.tsx","components/avatar.tsx","components/teams/buttons/profile.tsx","components/modal.tsx","components/teams/teamItem.tsx","components/teams/teamContainer.tsx","redux/reducers/multisig.ts","hooks/useMultisig.tsx","components/settings/owner/addOwner.tsx","components/settings/owner/replaceOwner.tsx","components/settings/owner/removeOwner.tsx","components/settings/owner/changeThreshold.tsx","components/error.tsx","components/success.tsx","layouts/dashboard/sidebar.tsx","layouts/dashboard/mobileMenu.tsx","pages/dashboard/index.tsx","utility/CSV.tsx","pages/dashboard/pay.tsx","pages/home.tsx","pages/create.tsx","pages/unlock.tsx","pages/swap/index.tsx","pages/import/index.tsx","pages/dashboard/assets.tsx","pages/teams/index.tsx","pages/dashboard/main.tsx","pages/transactions/transactions.tsx","pages/transactions/details.tsx","pages/dashboard/masspay.tsx","pages/settings/owner.tsx","pages/settings/spending.tsx","pages/settings/index.tsx","pages/multisig/transaction.tsx","components/payroll/teamItem.tsx","components/payroll/teamContainer.tsx","pages/payroll/index.tsx","App.tsx","redux/store.ts","index.tsx","types/dashboard/transaction.ts"],"names":["GetBalanceResponseEnum","Interval","CoinsURL","CoinsName","CoinsNameVisual","TransactionFeeTokenName","StableTokens","AltcoinsList","CoinsNameLower","CoinsResponse","Coins","celo","name","CELO","coinUrl","value","feeName","lowerName","responseName","celoBalance","contractAddress","cUSD","cUSDBalance","cEUR","cEURBalance","UBE","MOO","MOBI","POOF","cREAL","Status","useAppDispatch","useDispatch","useAppSelector","useSelector","storageSlice","createSlice","initialState","val","localStorage","getItem","user","JSON","parse","reducers","setStorage","state","action","setItem","payload","data","removeStorage","removeItem","actions","selectStorage","storage","toggleSlice","mobileMenu","setMenu","selectToggle","toggle","TransactionAPI","transactions","setTransactions","removeTransactions","SelectTransactions","transactionsStore","SelectedAccountSlice","address","accountAddress","init","changeAccount","SelectSelectedAccount","selectedAccount","useTransactionProcess","currencies","currencyandbalance","celoCoins","useMemo","result","reverse","map","transaction","index","amount","coin","coinName","direction","date","hash","rawDate","blockNum","outputCoin","outputAmount","from","to","tx","timeStamp","blockNumber","parseFloat","Web3","utils","fromWei","toFixed","Object","entries","find","w","tokenSymbol","input","startsWith","TransactionDirection","Swap","trim","toLowerCase","Out","In","dateFormat","Date","parseInt","values","includes","substring","length","toBN","amountUSD","price","surplus","type","TransactionType","IncomingPayment","QuickTransfer","byDate","_","filter","groupBy","reduce","a","e","froms","s","tos","renFroms","forEach","sameBlock","sameBlockTransactions","push","renTos","recieved","sent","BaseUrl","window","location","hostname","accountAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","set","endpoints","builder","signIn","mutation","query","url","method","body","accountCreate","createPassword","accountExist","unlock","putAccountInfo","setTime","getTime","useSetTimeMutation","useLazyGetTimeQuery","useSignInMutation","useAccountCreateMutation","useCreatePasswordMutation","useAccountExistMutation","useUnlockMutation","customerAPI","usePutAccountInfoMutation","customerCreate","getCustomer","params","deleteCustomer","id","teamAPI","useCustomerCreateMutation","useGetCustomerQuery","useDeleteCustomerMutation","createTeam","getTeams","getTeamsWithMembers","deleteTeam","updateTeam","useCreateTeamMutation","useLazyGetTeamsQuery","useLazyGetTeamsWithMembersQuery","useGetTeamsWithMembersQuery","useDeleteTeamMutation","useUpdateTeamMutation","transactionAPI","keepUnusedDataFor","getBalance","getCurrencies","sendCelo","sendStableToken","sendAltToken","sendMultipleTransactions","useLazyGetBalanceQuery","useGetBalanceQuery","useLazyGetCurrenciesQuery","useSendCeloMutation","useGetCurrenciesQuery","useSendStableTokenMutation","useSendAltTokenMutation","useSendMultipleTransactionsMutation","teamMemberAPI","addMember","getMembers","getMember","deleteMember","updateMember","useAddMemberMutation","useLazyGetMemberQuery","useDeleteMemberMutation","useGetMembersQuery","useLazyGetMembersQuery","useUpdateMemberMutation","BlockScoutApi","getTransactions","useLazyGetTransactionsQuery","useGetTransactionsQuery","swapAPI","getConvertableTokenAmount","swapCoins","useGetConvertableTokenAmountMutation","useSwapCoinsMutation","multisigAPI","mode","getMultisigBalance","importAddress","createAddress","getMultisigAddresses","removeMultisigAddress","getOwners","addOwner","removeOwner","replaceOwner","getRequiredSignatures","changeRequiredSignatures","chnageInternalRequiredSignatures","submitTransactions","revokeTransactions","confirmTransactions","executeTransactions","getMultisigTransaction","getNotExecutedTransactions","getTransactionsByPagination","skip","take","getAllTransactions","transformResponse","response","item","useLazyGetTransactionsByPaginationQuery","useGetTransactionsByPaginationQuery","useCreateAddressMutation","useGetAllTransactionsQuery","useLazyGetAllTransactionsQuery","useGetMultisigTransactionQuery","useLazyGetMultisigBalanceQuery","useLazyGetMultisigTransactionQuery","useGetMultisigBalanceQuery","useImportAddressMutation","useAddOwnerMutation","useChangeRequiredSignaturesMutation","useChnageInternalRequiredSignaturesMutation","useConfirmTransactionsMutation","useGetMultisigAddressesQuery","useExecuteTransactionsMutation","useLazyGetOwnersQuery","useGetNotExecutedTransactionsQuery","useGetOwnersQuery","useGetRequiredSignaturesQuery","useLazyGetMultisigAddressesQuery","useLazyGetNotExecutedTransactionsQuery","useLazyGetRequiredSignaturesQuery","useRemoveOwnerMutation","useRemoveMultisigAddressMutation","useReplaceOwnerMutation","useRevokeTransactionsMutation","useSubmitTransactionsMutation","notificationSlice","onSuccess","onError","onErrorText","notificationSeen","changeError","text","activate","changeSuccess","changeNotificationSeen","selectError","notification","selectErrorText","selectSuccess","NotificationCointainer","list","dispatch","useState","openNotify","setNotify","trigger","divRef","useRef","useEffect","time","now","toString","unwrap","then","click","useCallback","current","contains","target","addEventListener","removeEventListener","className","onClick","ref","transactionObj","recievedTransactions","sentTransactions","status","OK","title","link","generate","NotificationItem","State","undefined","balances","CurrencySlice","updateAllCurrencies","cusd","ceur","ube","moo","mobi","poof","creal","percent_24","updateBalance","current_balance","deleteBalance","updateUserBalance","per_24","percent","coins","tokenPrice","SelectCurrencies","SelectBalances","useRefetchData","disableInterval","transactionStore","currencyTrigger","currencyData","isFetching","balanceTrigger","balanceData","balanceFetching","transactionTrigger","transactionData","transactionFetching","multisigTrigger","multisigBalance","multiFetching","balance","updatedCurrency","d","Celo","Cusd","Ceur","Ube","Moo","Mobi","Poof","cReal","pCelo","pCusd","pCeur","pUbe","pMoo","pMobi","pPoof","pReal","celoPrice","cusdPrice","ceurPrice","ubePrice","mooPrice","mobiPrice","poofPrice","cRealPrice","total","updatedBalance","some","i","fetching","timer","setInterval","clearInterval","useModalSideExit","isSetting","setSetting","settingRef","AddressReducer","split","c","arr","Visitcard","tooltip","setTooltip","usePopperTooltip","getArrowProps","getTooltipProps","setTooltipRef","setTriggerRef","visible","navigator","clipboard","writeText","setTimeout","Li","children","NavbarDropdown","isOpen","setOpen","style","transform","PaySVG","src","alt","MassPayoutSVG","RequestMoneySVG","FundSVG","Navbar","menuBar","refetch","toggled","hideOutline","width","placeholder","PhraseBar","mnemonic","scanIcon","setData","see","setSee","replace","slice","inlineSize","outerWidth","toUpperCase","height","unlockSlide","setUnlock","selectUnlock","KeyPhrase","router","useHistory","goBack","stringify","localSave","Input","validation","limit","required","password","setPassword","repeatPassword","setRepeatPassword","autoComplete","minLength","onChange","Set","createAccount","isLoading","create","preventDefault","inputData","userName","surname","companyName","obj","encryptedPhrase","pass","console","error","onSubmit","DashboardSVG","PayrollSVG","TransactionsSVG","SwapSVG","AssetsSVG","TeamsSVG","SettingSVG","LogoutSVG","Sidebarlist","exact","activeClassName","CoinItem","usd","img","rate","Statistic","setPercent","setBalance","lastIn","setIn","lastOut","setOut","allInOne","setAllInOne","balanceRedux","cusdBalance","ceurBalance","ubeBalance","mooBalance","mobiBalance","poofBalance","crealBalance","all","chart","celoDeg","Math","ceil","cusdDeg","ceurDeg","ubeDeg","mooDeg","mobiDeg","poofDeg","crealDeg","currencObj","currencObj2","indexable","per","sort","b","toLocaleString","localeCompare","myin","myout","t","feeToken","getMonth","calc","color","background","TransactionItem","amountCoin","detect","setDetect","clientWidth","Accordion","dataCount","grid","bodyHeight","setBodyHeight","TransactionStatus","Completed","TransactionHistory","Array","isArray","CreatePassword","phrase","isValid","setValid","Submitted","Header","Login","signin","setInput","incorrrect","setIncorrect","onKeyDown","event","key","forwardRef","Viewer","displayName","disableAddressDisplay","Dropdown","selected","nameActivation","onSelect","loader","parentClass","childClass","liRef","liHeight","setLiHeight","customRef","offsetHeight","selectedWallet","setWallet","setIndex","overallIndex","uniqueArr","isBasedOnDollar","setRefreshPage","setAmount","amountState","anotherToken","setAnotherToken","v","defaultValue","Number","step","min","wallet","splice","TeamInput","props","currency","setSelectedWallet","selectedWallet2","setSelectedWallet2","secondaryCurrency","updateValue","is2","customWallet","newArr","members","newItem","secondaryAmount","setMembers","checked","selectedId","tick","setSelectedId","usdBase","AddMemberModal","onDisable","triggerTeams","addMemberLoading","secondActive","setSecondActive","startDate","setStartDate","None","setSelected","monthly","selectedFrequency","setSelectedFrequency","selectedType","setSelectedType","MAX_SAFE_INTEGER","teams","Submit","firstName","lastName","teamName","walletAddress","amount2","firstNameValue","lastNameValue","walletAddressValue","amountValue","amountValue2","log","alert","teamId","interval","paymantDate","toISOString","secondaryUsdBase","message","weakly","minDate","AddTeams","disabled","Delete","onCurrentModal","onDelete","loading","setLoading","size","EditMember","triggerTeam","member","memberLoading","updateLoading","selectedTeam","setSelectedTeam","memberName","memberNameValue","addressValue","EditTeam","Avatar","Profile","onEditModal","onDeleteModal","Modal","disableX","document","querySelector","overflowY","top","scrollY","innerHeight","TeamItem","modalVisible","setModalVisible","modalEditVisible","setModalEditVisible","deleteModal","setDeleteModal","TeamContainer","editModal","setEditModal","num","setNum","DeleteTeam","multisigSlice","selectMultisigTransactions","multisig","useMultisig","multiSlice","addingOwner","isAddOwnerLoading","replacingOwner","isReplaceOwnerLoading","changeSign","isChangeSignLoading","changeInternalSign","isChangeInternalLoading","removingOwner","isRemoveLoading","fetch","signFethch","signData","isMultisig","setIsMultisig","multiNonExecutedFetch","multiData","transactionLoading","fetchTxs","disabledTransactionDispatch","transactionArray","ownerAddress","multisigAddress","changeSigns","sign","internalSign","requirement","newOwner","res","oldOwner","newOwnerAddress","isTransactionLoading","AddOwner","pageIndex","setPageIndex","setAddress","changingMultiSigProperties","ReplaceOwner","RemoveOwner","ChangeTreshold","executinTransactions","setSign","setInternalSign","fill","Error","onClose","Success","onAction","Sidebar","importMultisig","createMultisig","createLoading","isSuccess","isError","isAccountModal","setAccountModal","isImportModal","setImportModal","isCreateModal","setCreateModal","owners","ownerAmount","setOwnerAmount","importInputRef","selectedItem","importClick","createClick","internalRequired","setList","addresses","isNaN","MobileMenu","motion","div","initial","x","animate","transition","exit","Dashboard","AnimatePresence","CSV","file","Promise","resolve","reject","URL","createObjectURL","csv","columns","Pay","sendMultiple","sendAltcoin","sendMultisig","isPaying","setIsPaying","setSuccess","setAmountState","uniqueRef","nameRef","addressRef","wallets","setWallets","amountRef","csvImport","setCsvImport","fileInput","wllt","amm","coin2","files","DataTransfer","addressList","amountList","toAddress","tokenType","comment","stableTokenType","altTokenType","multipleAddresses","Import","catch","cols","rows","Home","pathname","Create","Unlock","unlockState","unlockApp","inputRef","useLocation","autoFocus","token1","setToken1","token1Amount","setToken1Amount","token2","setToken2","token1Input","appAmount","setAppAmount","fee","setFee","oneCoinPrice","setOneCoinPrice","label","invisible","slippageArr","setSlippageArr","deadline","setDeadline","fetchCoin","coinLoading","swap","change","output","slippage","floor","minimumAmountOut","feeAmount","oneTokenValue","startSwap","at","max","setError","Assets","selectBalance","Teams","teamCount","skipCount","setSkipCount","skipRef","addTeamModal","setAddTeamModal","addMemberModal","setAddMemberModal","setTeams","maxTeamCount","Main","Transactions","multisigData","setMultiSkip","filename","gasUsed","gasPrice","blockHash","executed","confirmations","acc","owner","valueOfTransfer","destination","requiredCount","Details","useParams","totalAmount","setTotalAmount","transactionFee","setTransactionFee","maList","lodash","iteratee","newObject","orderBy","o","BigInt","uniqBy","maTx","round","TransactionDetailInput","open","MassPay","memberList","teamLoading","resMember","setResMember","team","mems","secAmount","secCurrency","generalWallet","setGeneralWallet","OwnerSetting","addOwnerModal","setAddOwnerModal","replaceOwnerModal","setReplaceOwnerModal","changeTresholdModal","setChangeTresholdModal","removeModal","setRemoveModal","selectedOwner","setSelectedOwner","removable","setRemovable","shortid","SpendingSetting","SettingLayout","path","useRouteMatch","MultisigTransaction","history","selectedAddress","refreshMultisig","revokeTransaction","revokeLoading","confirmTransaction","confirmLoading","filterData","setFilterData","txResult","submitAction","transactionId","gridTemplateColumns","memberState","m","getUTCDay","Payroll","totalPrice","setTotalPrice","first","curr","second","CustomRouter","unlockChecking","element","render","AuthRouter","match","App","store","configureStore","reducer","Currency","Notification","Storage","Toggle","Transaction","SelectedAcount","Multisig","middleware","getDefaultMiddleware","serializableCheck","concat","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a35a203.chunk.js","sourcesContent":["export * from './dashboard/transaction';\nexport * from './dropdown'\nexport * from './coins'","export interface GetBalanceResponse {\n\tceloBalance: string;\n\tcUSDBalance: string;\n\tcEURBalance: string;\n\tUBE: string;\n\tMOO: string;\n\tMOBI: string;\n\tPOOF: string;\n\tcREAL: string;\n}\n\nexport enum GetBalanceResponseEnum {\n\tceloBalance = \"celoBalance\",\n\tcUSDBalance = \"cUSDBalance\",\n\tcEURBalance = \"cEURBalance\",\n\tUBE = \"UBE\",\n\tMOO = \"MOO\",\n\tMOBI = \"MOBI\",\n\tPOOF = \"POOF\",\n\tcREAL = \"cREAL\",\n}\n","import { CoinsName } from '../../coins'\n\nexport enum Interval {\n    weakly = \"weakly\",\n    monthly = \"monthly\",\n}\n\nexport interface AddMember {\n    name: string,\n    address: string,\n    currency: CoinsName,\n    amount: string,\n    teamId: string, \n    paymantDate: string,\n    interval: Interval,\n    usdBase: boolean,\n    secondaryCurrency?: CoinsName,\n    secondaryAmount?: string,\n    secondaryUsdBase?: boolean,\n}\n\nexport interface AddMemberResponse {\n    id: string,\n    name: string,\n    address: string,\n    currency: CoinsName,\n    amount: string,\n    teamId: string, \n    paymantDate: string,\n    interval: Interval,\n    usdBase: boolean,\n    secondaryCurrency?: CoinsName,\n    secondaryAmount?: string,\n    secondaryUsdBase?: boolean,\n}","export * from './sdk/Account/AccountCreate'\nexport * from './sdk/Account/AccountExist'\nexport * from './sdk/Account/CreatePassword'\nexport * from './sdk/Account/Signin'\nexport * from './sdk/Account/Unlock'\nexport * from './sdk/Account/AccountInfo'\n\nexport * from './sdk/Transaction/GetBalance'\nexport * from './sdk/Transaction/SendCUSD'\nexport * from './sdk/Transaction/SendCelo'\nexport * from './sdk/Transaction/SendMultipleTransaction'\nexport * from './sdk/Transaction/SendAltcoin'\nexport * from './sdk/Transaction/GetCurrencies'\n\nexport * from './sdk/Customer/CustomerCreate'\nexport * from './sdk/Customer/GetCustomer'\n\nexport * from './sdk/Team/CreateTeam'\nexport * from './sdk/Team/GetTeams'\nexport * from './sdk/Team/UpdateTeam'\nexport * from './sdk/Team/GetTeamsWithMembers'\n\nexport * from './sdk/TeamMember/addMember'\nexport * from './sdk/TeamMember/getMember'\nexport * from './sdk/TeamMember/updatemember'\n\nexport * from './sdk/blockscout'\n\nexport * from './sdk/Swap'\nexport * from './sdk/Multisig'","import { GetBalanceResponseEnum } from './sdk';\n\nexport enum CoinsURL {\n\tCELO = '/icons/celoiconsquare.svg',\n\tcUSD = '/icons/celodollar.svg',\n\tcEUR = '/icons/ceur.png',\n\tUBE = '/icons/ubeswap.png',\n\tMOO = '/icons/moola.png',\n\tMOBI = '/icons/mobius.png',\n\tPOOF = '/icons/poof.png',\n\tcREAL= \"/icons/creal.png\",\n\tNone = ''\n}\n\nexport enum CoinsName {\n\tCELO = 'celo',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsNameVisual {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum TransactionFeeTokenName {\n\tCELO = 'celo',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum StableTokens {\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR'\n}\n\nexport enum AltcoinsList {\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsNameLower {\n\tCELO = 'celo',\n\tcUSD = 'cUsd',\n\tcEUR = 'cEur',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsResponse {}\n\nexport const Coins: Coins = {\n\tcelo: {\n\t\tname: CoinsNameVisual.CELO,\n\t\tcoinUrl: CoinsURL.CELO,\n\t\tvalue: CoinsName.CELO,\n\t\tfeeName: TransactionFeeTokenName.CELO,\n\t\tlowerName: CoinsNameLower.CELO,\n\t\tresponseName: GetBalanceResponseEnum.celoBalance,\n\t\tcontractAddress: \"0x471EcE3750Da237f93B8E339c536989b8978a438\"\n\t},\n\tcUSD: {\n\t\tname: CoinsNameVisual.cUSD,\n\t\tcoinUrl: CoinsURL.cUSD,\n\t\tvalue: CoinsName.cUSD,\n\t\tfeeName: TransactionFeeTokenName.cUSD,\n\t\tlowerName: CoinsNameLower.cUSD,\n\t\tresponseName: GetBalanceResponseEnum.cUSDBalance,\n\t\tcontractAddress: \"0x765DE816845861e75A25fCA122bb6898B8B1282a\"\n\t},\n\tcEUR: {\n\t\tname: CoinsNameVisual.cEUR,\n\t\tcoinUrl: CoinsURL.cEUR,\n\t\tvalue: CoinsName.cEUR,\n\t\tfeeName: TransactionFeeTokenName.cEUR,\n\t\tlowerName: CoinsNameLower.cEUR,\n\t\tresponseName: GetBalanceResponseEnum.cEURBalance,\n\t\tcontractAddress: \"0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73\"\n\t},\n\tUBE: {\n\t\tname: CoinsNameVisual.UBE,\n\t\tcoinUrl: CoinsURL.UBE,\n\t\tvalue: CoinsName.UBE,\n\t\tfeeName: TransactionFeeTokenName.UBE,\n\t\tlowerName: CoinsNameLower.UBE,\n\t\tresponseName: GetBalanceResponseEnum.UBE, \n\t\tcontractAddress: \"0x00Be915B9dCf56a3CBE739D9B9c202ca692409EC\"\n\t},\n\tMOO: {\n\t\tname: CoinsNameVisual.MOO,\n\t\tcoinUrl: CoinsURL.MOO,\n\t\tvalue: CoinsName.MOO,\n\t\tfeeName: TransactionFeeTokenName.MOO,\n\t\tlowerName: CoinsNameLower.MOO,\n\t\tresponseName: GetBalanceResponseEnum.MOO, \n\t\tcontractAddress: \"0x17700282592D6917F6A73D0bF8AcCf4D578c131e\"\n\t},\n\tMOBI: {\n\t\tname: CoinsNameVisual.MOBI,\n\t\tcoinUrl: CoinsURL.MOBI,\n\t\tvalue: CoinsName.MOBI,\n\t\tfeeName: TransactionFeeTokenName.MOBI,\n\t\tlowerName: CoinsNameLower.MOBI,\n\t\tresponseName: GetBalanceResponseEnum.MOBI, \n\t\tcontractAddress: \"0x73a210637f6F6B7005512677Ba6B3C96bb4AA44B\"\n\t},\n\tPOOF: {\n\t\tname: CoinsNameVisual.POOF,\n\t\tcoinUrl: CoinsURL.POOF,\n\t\tvalue: CoinsName.POOF,\n\t\tfeeName: TransactionFeeTokenName.POOF,\n\t\tlowerName: CoinsNameLower.POOF,\n\t\tresponseName: GetBalanceResponseEnum.POOF, \n\t\tcontractAddress: \"0x00400FcbF0816bebB94654259de7273f4A05c762\"\n\t},\n\tcREAL: {\t\n\t\tname: CoinsNameVisual.cREAL,\n\t\tcoinUrl: CoinsURL.cREAL,\n\t\tvalue: CoinsName.cREAL,\n\t\tfeeName: TransactionFeeTokenName.cREAL,\n\t\tlowerName: CoinsNameLower.cREAL,\n\t\tresponseName: GetBalanceResponseEnum.cREAL, \n\t\tcontractAddress: \"0xe8537a3d056DA446677B9E9d6c5dB704EaAb4787\"\n\t}\n};\n\nexport interface Coins {\n\tcelo: AltCoins;\n\tcUSD: AltCoins;\n\tcEUR: AltCoins;\n\tUBE: AltCoins;\n\tMOO: AltCoins;\n\tMOBI: AltCoins;\n\tPOOF: AltCoins;\n\tcREAL: AltCoins;\n}\n\nexport interface AltCoins {\n\tname: CoinsNameVisual;\n\tcoinUrl: CoinsURL;\n\tvalue: CoinsName;\n\tfeeName: TransactionFeeTokenName;\n\tlowerName: CoinsNameLower;\n\tresponseName: GetBalanceResponseEnum;\n\tcontractAddress: string;\n}\n","import { Fragment, useCallback, useEffect, useRef, useState } from \"react\";\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport useTransactionProcess, { TransactionHook } from \"../../hooks/useTransactionProcess\";\nimport { useSetTimeMutation } from \"../../redux/api\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { changeNotificationSeen } from \"../../redux/reducers/notificationSlice\";\nimport { RootState } from \"../../redux/store\";\nimport { TransactionDirection, TransactionStatus, TransactionType } from \"../../types\";\nimport Accordion from \"../dashboard/accordion\";\n\n\nenum Status {\n    OK,\n    Reject,\n    Pending\n}\n\nconst NotificationCointainer = () => {\n    const [list] = useTransactionProcess()\n    const dispatch = useAppDispatch()\n    const seenTime = useAppSelector((state: RootState) => state.notification.notificationSeen)\n    const [openNotify, setNotify] = useState(false)\n    const [trigger] = useSetTimeMutation()\n\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (openNotify) {\n            trigger({ time: Date.now().toString() }).unwrap().then(() => {\n                dispatch(changeNotificationSeen(Date.now()))\n            })\n        }\n    }, [openNotify])\n\n    const click = useCallback((e) => {\n        if (openNotify && divRef.current && !divRef.current.contains(e.target)) {\n            setNotify(false)\n        }\n    }, [openNotify])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, divRef])\n\n    let index = 0\n\n    return <>\n        <IoMdNotificationsOutline className=\"text-2xl cursor-pointer\" onClick={() => setNotify(!openNotify)} />\n        {openNotify &&\n            <div ref={divRef} className=\"translate-x-[75%] sm:translate-x-0 z-40 absolute shadow-custom min-w-[325px] min-h-[200px] right-0 bg-white mt-7 rounded-xl\">\n                <div className=\"flex flex-col min-h-[325px] sm:min-h-[auto] justify-center sm:justify-between sm:items-stretch items-center\">\n                    {\n                        list && Object.entries(list).map(([date, transactionObj]) => {\n                            if (!transactionObj[\"recieved\"] || !transactionObj[\"sent\"]) return null\n                            const recievedTransactions = transactionObj.recieved;\n                            const sentTransactions = transactionObj.sent;\n                            return <Fragment key={date}>\n                                {index < 3 && recievedTransactions.length > 0 && ++index &&\n                                    recievedTransactions.map(({ amountUSD, surplus, blockNumber }) => {\n                                        return <NotificationItem key={generate()} status={Status.OK} title={TransactionType.IncomingPayment} body={amountUSD[0] !== -1 ? `${surplus} ${amountUSD.reduce((a, e) => a + e).toFixed(4)} $` : ''} link={`/dashboard/transactions/${blockNumber}`} />\n\n                                    })\n                                }\n                                {index < 3 && sentTransactions.length > 0 && ++index &&\n                                    sentTransactions.map(({ amountUSD, surplus, blockNumber }) => {\n                                        return <NotificationItem key={generate()} status={Status.OK} title={TransactionType.IncomingPayment} body={amountUSD[0] !== -1 ? `${surplus} ${amountUSD.reduce((a, e) => a + e).toFixed(4)} $` : ''} link={`/dashboard/transactions/${blockNumber}`} />\n\n                                    })\n                                }\n                            </Fragment>\n                        })\n                    }\n                    {(!list || !Object.values(list).length) && <div>No notification yet. We'll notify you</div>}\n                </div>\n            </div>\n        }\n    </>\n}\n\nexport default NotificationCointainer;\n\n\nconst NotificationItem = ({ status, title, body, link }: { status: Status, title: TransactionType, body: string, link: string }) => {\n\n    return <div className=\"grid grid-cols-[15%,65%,20%] min-h-[50px] border-b-2 items-center px-3 py-2\">\n        <div>\n            {\n                status === Status.OK && <div className=\"w-[15px] h-[15px] rounded-full bg-blue-600\"></div>\n            }\n        </div>\n        <div className=\"flex flex-col\">\n            <div>{title}</div>\n            <div className=\"opacity-50\">{body}</div>\n        </div>\n        <Link to={link}>\n            <div className={'text-primary'}>\n                View\n            </div>\n        </Link>\n    </div>\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IStorage {\n    accountAddress: string,\n    encryptedPhrase: string,\n    token: string,\n    userName?: string;\n    surname?: string,\n    companyName?: string,\n}\n\ninterface IContainer {\n    user: IStorage | null, \n}\n\nconst initialState = (): IContainer => {\n    const val = localStorage.getItem(\"user\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { user: data }\n    }\n    return { user: null };\n}\n\n\nexport const storageSlice = createSlice({\n    name: \"storage\",\n    initialState: initialState(),\n    reducers: {\n        setStorage: (state, action) => {\n            localStorage.setItem(\"user\", action.payload)\n            const data: IStorage = JSON.parse(action.payload)\n            state.user = data\n        },\n        removeStorage: (state) => {\n            localStorage.removeItem(\"user\")\n            state.user = null;\n        }\n    }\n})\n\nexport const { setStorage, removeStorage } = storageSlice.actions\n\nexport const selectStorage = (state: RootState) => state.storage.user\n\nexport default storageSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../store';\n\nconst initialState = {\n\tmobileMenu: false\n};\n\nexport const toggleSlice = createSlice({\n\tname: 'storage',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetMenu: (state, action) =>{\n\t\t\tstate.mobileMenu = action.payload;\n\t\t}\n\t}\n});\n\nexport const {setMenu} = toggleSlice.actions;\n\nexport const selectToggle = (state: RootState) => state.toggle;\n\nexport default toggleSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { GetTransactions } from '../../types/sdk/blockscout';\nimport { RootState } from '../store';\n\ninterface InitialTransaction {\n\ttransactions: GetTransactions | null;\n}\n\nconst initialState: InitialTransaction = {\n\ttransactions: null\n};\n\nexport const TransactionAPI = createSlice({\n\tname: 'transactions',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetTransactions: (state, action) => {\n\t\t\tstate.transactions = action.payload;\n\t\t},\n\t\tremoveTransactions: (state) => {\n\t\t\tstate.transactions = null;\n\t\t}\n\t}\n});\n\nexport const { setTransactions, removeTransactions } = TransactionAPI.actions;\nexport const SelectTransactions = (state: RootState) => state.transactionsStore.transactions;\nexport default TransactionAPI.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\nimport { IStorage } from './storage'\n\n\ninterface IContainer {\n    address: string, \n}\n\nconst init = (): IContainer => {\n    const val = localStorage.getItem(\"user\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { address: data.accountAddress }\n    }\n    return { address: '' };\n}\n\nexport const SelectedAccountSlice = createSlice({\n    name: 'selectedAccount',\n    initialState: init(),\n    reducers: {\n        changeAccount: (state: IContainer, action: PayloadAction<string>) => {\n            state.address = action.payload\n        },\n \n    },\n})\n\nexport const { changeAccount } = SelectedAccountSlice.actions\n\nexport const SelectSelectedAccount = (state: RootState) => state.selectedAccount.address\n\nexport default SelectedAccountSlice.reducer","import { useEffect, useMemo } from 'react';\nimport { useAppSelector } from '../redux/hooks';\nimport { SelectTransactions } from '../redux/reducers/transactions';\nimport lodash from 'lodash';\nimport { GetTransactions, Transactions } from '../types/sdk';\nimport _ from 'lodash';\nimport Web3 from 'web3';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../types/coins';\nimport { selectStorage } from '../redux/reducers/storage';\nimport dateFormat from 'dateformat';\nimport { TransactionDirection, TransactionType } from '../types';\nimport { SelectCurrencies } from '../redux/reducers/currencies';\nimport store, { RootState } from '../redux/store';\nimport { useSelector } from 'react-redux';\nimport { useGetNotExecutedTransactionsQuery, useLazyGetNotExecutedTransactionsQuery } from '../redux/api';\nimport selectedAccount, { SelectSelectedAccount } from '../redux/reducers/selectedAccount';\nimport transaction from '../pages/multisig/transaction';\n\nexport interface TransactionHook {\n    amount: string;\n    coin: AltCoins;\n    coinName: string;\n    direction: TransactionDirection;\n    date: string;\n    amountUSD: number;\n    surplus: string;\n    type: TransactionType;\n    hash: string;\n    rawDate: string;\n    blockNum: string;\n    from: string;\n    to: string;\n    outputCoin?: string\n    outputAmount?: string\n}\n\nexport interface TransactionHookByDate {\n    [name: string]: TransactionHook[]\n}\n\nexport interface TransactionHookByDateInOut {\n    [name: string]: {\n        recieved: RenderedTransactionForm[],\n        sent: RenderedTransactionForm[]\n    }\n}\n\nexport interface RenderedTransactionForm {\n    amount: string[];\n    coin: AltCoins[];\n    address: string;\n    date: string;\n    coinName: string[];\n    blockNumber: string;\n    amountUSD: number[];\n    rawDate: string;\n    surplus: string;\n}\n\nconst useTransactionProcess = (groupByDate = false): [TransactionHookByDateInOut, GetTransactions] | [] => {\n    const transactions = useSelector(SelectTransactions);\n    const currencies = useSelector((state: RootState) => state.currencyandbalance.celoCoins);\n    const selectedAccount = useSelector(SelectSelectedAccount);\n\n    return useMemo(() => {\n        if (transactions) {\n            let result = [...transactions.result].reverse().map((transaction, index) => {\n                let amount, coin, coinName, direction, date, amountUSD, surplus, type, hash, rawDate, blockNum, outputCoin, outputAmount, from, to;\n\n                const tx = transaction\n                rawDate = tx.timeStamp;\n                blockNum = tx.blockNumber;\n                hash = tx.blockNumber\n                amount = parseFloat(Web3.utils.fromWei(tx.value, 'ether')).toFixed(2)\n                let feeName = Object.entries(TransactionFeeTokenName).find(w => w[0] === tx.tokenSymbol)?.[1]\n                coin = feeName ? Coins[feeName] : Coins.cUSD;\n                coinName = feeName ? coin.name : \"Unknown\";\n                from = tx.from;\n                to = tx.to;\n                direction = tx.input.startsWith(\"0x38ed1739\") ? TransactionDirection.Swap : tx.from.trim().toLowerCase() === selectedAccount.trim().toLowerCase() ? TransactionDirection.Out : TransactionDirection.In\n                date = dateFormat(new Date(parseInt(tx.timeStamp) * 1e3), \"mediumDate\")\n                if (direction == TransactionDirection.Swap) {\n                    outputCoin = Object.values(Coins).find((w: AltCoins) => w.contractAddress.toLowerCase().includes(tx.input.substring(tx.input.length - 40).toLowerCase()))?.name;\n                    outputAmount = Web3.utils.fromWei(Web3.utils.toBN(tx.input.substring(74, 74 + 64)), 'ether');\n                    outputAmount = parseFloat(outputAmount).toFixed(4);\n                }\n                amountUSD = direction !== TransactionDirection.Swap ? (currencies[coin.name]?.price ?? 0) * parseFloat(parseFloat(Web3.utils.fromWei(tx.value, 'ether')).toFixed(4)) : -1\n                surplus = direction === TransactionDirection.In ? '+' : '-'\n                type = TransactionDirection.Swap !== direction ? direction === TransactionDirection.In ? TransactionType.IncomingPayment : TransactionType.QuickTransfer : TransactionType.Swap\n\n                return { amount, coin, coinName, direction, date, amountUSD, surplus, type, hash, rawDate, blockNum, outputCoin, outputAmount, to, from }\n            })\n\n            const byDate = _(result.filter(w => w !== null) as TransactionHook[]).groupBy(\"date\").value() as TransactionHookByDate\n\n            const res = Object.entries(byDate).reverse().reduce<TransactionHookByDateInOut>((a, e) => {\n\n                const froms = _(e[1].filter(s => s.direction === TransactionDirection.In) as TransactionHook[]).groupBy(\"from\").value() as TransactionHookByDate\n                const tos = _(e[1].filter(s => s.direction === TransactionDirection.Out) as TransactionHook[]).groupBy(\"to\").value()\n\n                const renFroms: RenderedTransactionForm[] = [];\n\n                Object.entries(froms).forEach(([address, transaction]) => {\n                    const sameBlock = _(transaction).groupBy(\"blockNum\").value() as TransactionHookByDate\n                    Object.values(sameBlock).forEach((sameBlockTransactions) => {\n                        renFroms.push({\n                            amount: sameBlockTransactions.map(s => s.amount),\n                            coin: sameBlockTransactions.map(s => s.coin),\n                            coinName: sameBlockTransactions.map(s => s.coinName),\n                            amountUSD: sameBlockTransactions.map(s => s.amountUSD),\n                            address,\n                            date: e[0],\n                            blockNumber: sameBlockTransactions[0].blockNum,\n                            rawDate: sameBlockTransactions[0].rawDate,\n                            surplus: sameBlockTransactions[0].surplus\n                        })\n                    })\n\n                })\n\n                const renTos: RenderedTransactionForm[] = []\n\n                Object.entries(tos).forEach(([address, transaction]) => {\n                    const sameBlock = _(transaction).groupBy(\"blockNum\").value() as TransactionHookByDate\n                    Object.values(sameBlock).forEach((sameBlockTransactions) => {\n                        renTos.push({\n                            amount: sameBlockTransactions.map(s => s.amount),\n                            coin: sameBlockTransactions.map(s => s.coin),\n                            coinName: sameBlockTransactions.map(s => s.coinName),\n                            amountUSD: sameBlockTransactions.map(s => s.amountUSD),\n                            address,\n                            date: e[0],\n                            blockNumber: sameBlockTransactions[0].blockNum,\n                            rawDate: sameBlockTransactions[0].rawDate,\n                            surplus: sameBlockTransactions[0].surplus\n                        })\n                    })\n\n                })\n\n                a[e[0]] = {\n                    recieved: renFroms,\n                    sent: renTos,\n                }\n                return a;\n            }, {})\n\n            return [res, transactions];\n        };\n        return []\n    }, [transactions])\n}\nexport default useTransactionProcess;","const hostname = window.location.hostname;\nexport const BaseUrl = hostname.includes(\"localhost\") ? \"http://app.localhost/api\" : \"/api\"","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AccountCreate, AccountCreateResponse, AccountExist, AccountExistResponse, AccountInfo, CreatePassword, CreatePasswordResponse, Signin, SigninResponse, Unlock, UnlockResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const accountAPI = createApi({\n    reducerPath: 'accountAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        signIn: builder.mutation<SigninResponse, Signin>({\n            query: (data) => ({\n                url: '/account/signin',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        accountCreate: builder.mutation<AccountCreateResponse, AccountCreate>({\n            query: (data) => ({\n                url: `/account/create`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        createPassword: builder.mutation<CreatePasswordResponse, CreatePassword>({\n            query: (data) => ({\n                url: `/account/createPassword`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        accountExist: builder.mutation<AccountExistResponse, AccountExist>({\n            query: (data) => ({\n                url: `/account/isExist`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        unlock: builder.mutation<UnlockResponse, Unlock>({\n            query: (data) => ({\n                url: `/account/reLogin`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        putAccountInfo: builder.mutation<void, AccountInfo>({\n            query: (data) => ({\n                url: `/account`,\n                method: 'PUT',\n                body: data\n            })\n        }),\n        setTime: builder.mutation<void, {time: string}>({\n            query: (data) => ({\n                url: `/account/setTime`,\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getTime: builder.query<{date: string}, void>({\n            query: () => ({\n                url: `/account/time`,\n            })\n        })\n    }),\n})\n\n\nexport const { useLazyGetTimeQuery, useSetTimeMutation , useSignInMutation, useAccountCreateMutation, useCreatePasswordMutation, useAccountExistMutation, useUnlockMutation, usePutAccountInfoMutation } = accountAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { CustomerCreate, CustomerCreateResponse, GetCustomer } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const customerAPI = createApi({\n    reducerPath: 'customerAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        customerCreate: builder.mutation<CustomerCreateResponse, CustomerCreate>({\n            query: (data) => ({\n                url: '/customer/create',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        getCustomer: builder.query<CustomerCreateResponse[], GetCustomer>({\n            query: (data) => ({\n                url: `/customer/byAccount`,\n                params: data\n            })\n        }),\n\n        deleteCustomer: builder.mutation<void, number>({\n            query: (id) => ({\n                url: `/customer/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n    }),\n})\n\n\nexport const { useCustomerCreateMutation, useGetCustomerQuery, useDeleteCustomerMutation } = customerAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { CreateTeam, CreateTeamResponse, GetTeams, GetTeamsResponse, GetTeamsWithMembers, GetTeamsWithMembersResponse, UpdateTeam, UpdateTeamResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamAPI = createApi({\n  reducerPath: 'teamAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BaseUrl,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).storage?.user?.token;\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: (builder) => ({\n    createTeam: builder.mutation<CreateTeamResponse, CreateTeam>({\n      query: (data) => ({\n        url: '/team/create',\n        method: 'POST',\n        body: data\n      }),\n    }),\n\n    getTeams: builder.query<GetTeamsResponse, GetTeams>({\n      query: (data) => ({\n        url: `/team/byAccount`,\n        params: data\n      })\n    }),\n\n    getTeamsWithMembers: builder.query<GetTeamsWithMembersResponse, GetTeamsWithMembers>({\n      query: (data) => ({\n        url: `/team/byAccount/withMembers`,\n        params: data\n      })\n    }),\n\n    deleteTeam: builder.mutation<any, string>({\n      query: (id) => ({\n        url: `/team/${id}`,\n        method: 'DELETE'\n      })\n    }),\n\n    updateTeam: builder.mutation<UpdateTeamResponse, { id: string, body: UpdateTeam }>({\n      query: ({ id, body }) => ({\n        url: `/team/${id}`,\n        method: 'PATCH',\n        body: body\n      })\n    })\n  }),\n})\n\n\nexport const { useCreateTeamMutation, useLazyGetTeamsQuery, useLazyGetTeamsWithMembersQuery ,useGetTeamsWithMembersQuery, useDeleteTeamMutation, useUpdateTeamMutation } = teamAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { GetBalanceResponse, SendCelo, SendCeloResponse, SendStableToken, SendStableTokenResponse, SendMultipleTransaction, SendAltcoin, SendAltcoinResponse, GetCurrencies } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const transactionAPI = createApi({\n    reducerPath: 'transactionAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getBalance: builder.query<GetBalanceResponse, void>({\n            query: () => ({\n                url: '/transaction/balance',\n            })\n        }),\n        getCurrencies: builder.query<GetCurrencies, void>({\n            query: () => ({\n                url: '/transaction/currency',\n            })\n        }),\n        sendCelo: builder.mutation<SendCeloResponse, SendCelo>({\n            query: (data) => ({\n                url: '/transaction/sendCelo',\n                method: 'POST',\n                body: data,\n            })\n        }),\n\n        sendStableToken: builder.mutation<SendStableTokenResponse, SendStableToken>({\n            query: (data) => ({\n                url: '/transaction/sendStableCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendAltToken: builder.mutation<SendAltcoinResponse, SendAltcoin>({\n            query: (data) => ({\n                url: '/transaction/sendAltCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendMultipleTransactions: builder.mutation<void, SendMultipleTransaction>({\n            query: (data) => ({\n                url: '/transaction/multipleTran',\n                method: 'POST',\n                body: data,\n            })\n        })\n    }),\n})\n\n\nexport const { useGetBalanceQuery, useLazyGetBalanceQuery, useLazyGetCurrenciesQuery ,useGetCurrenciesQuery,  useSendCeloMutation, useSendStableTokenMutation, useSendAltTokenMutation, useSendMultipleTransactionsMutation } = transactionAPI\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AddMember, AddMemberResponse, GetTeams, GetTeamsResponse, Member, UpdateMember, UpdateMemberResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamMemberAPI = createApi({\n    reducerPath: 'teamMemberAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        addMember: builder.mutation<AddMemberResponse, AddMember>({\n            query: (data) => ({\n                url: `/team-member/add`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        getMembers: builder.query<GetTeamsResponse, { id: string, params: GetTeams }>({\n            query: ({ id, params }) => ({\n                url: `/team-member/byTeam/${id}`,\n                params: params\n            })\n        }),\n\n        getMember: builder.query<{member: Member}, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`\n            })\n        }),\n\n        deleteMember: builder.mutation<void, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n        updateMember: builder.mutation<UpdateMemberResponse, UpdateMember>({\n            query: (data) => ({\n                url: `/team-member`,\n                method: 'PUT',\n                body: data\n            })\n        })\n    }),\n})\n\n\nexport const { useAddMemberMutation, useLazyGetMemberQuery, useGetMembersQuery, useLazyGetMembersQuery, useDeleteMemberMutation, useUpdateMemberMutation } = teamMemberAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { GetTransactions } from '../../types/sdk';\n\n\nexport const BlockScoutApi = createApi({\n\tbaseQuery: fetchBaseQuery({\n\t\tbaseUrl: 'https://explorer.celo.org/api'\n\t}),\n\tendpoints: (builder) => ({\n\t\tgetTransactions: builder.query<GetTransactions, string>({\n\t\t\tquery: (data) => ({\n\t\t\t\turl: `?module=account&action=tokentx&address=`+data\n\t\t\t})\n\t\t})\n\t})\n});\n\nexport const { useGetTransactionsQuery, useLazyGetTransactionsQuery } = BlockScoutApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { GetMinimumAmount, GetMinimumAmountResponse, GetSwap, GetSwapResponse } from '../../types/sdk';\nimport { BaseUrl } from '../../utility/const'\nimport { RootState } from '../store';\n\nexport const swapAPI = createApi({\n    keepUnusedDataFor: 0,\n    reducerPath: 'swapApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getConvertableTokenAmount: builder.mutation<GetMinimumAmountResponse, GetMinimumAmount>({\n            query: (data) => ({\n                url: '/transaction/minimumAmountOut',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        swapCoins: builder.mutation<GetSwapResponse, GetSwap>({\n            query: (data) =>({\n                url: '/transaction/swap',\n                method: 'POST',\n                body: data\n            })\n        })    \n    }),\n})\n\nexport const {useGetConvertableTokenAmountMutation, useSwapCoinsMutation} = swapAPI\n\n\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AddOwner, AddOwnerResponse, ChangeRequiremnt, ChangeRequiremntResponse, CustomerCreate, CustomerCreateResponse, GetCustomer, GetRequiredSignatures, GetRequiredSignaturesResponse, MultisigBalance, MultisigBalanceResponse, NonExecTransaction, NonExecTransactionItem, NonExecTransactionResponse, RecTransaction, RecTransactionResponse, ReplaceOwner, SubmitTrasaction, SubmitTrasactionResponse } from '../../types/sdk'\nimport { RootState } from '../store';\nimport { method } from 'lodash';\n\nexport const multisigAPI = createApi({\n    reducerPath: 'multisigAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n        mode: 'cors',\n    }),\n    endpoints: (builder) => ({\n\n        getMultisigBalance: builder.query<MultisigBalanceResponse, MultisigBalance>({\n            query: (data) => ({\n                url: '/multisig/balance/' + data.address,\n            })\n        }),\n\n        //MULTISIG\n        importAddress: builder.mutation<{ result: { address: string } }, { multisigAddress: string }>({\n            query: (data) => ({\n                url: '/multisig/importAddress',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        createAddress: builder.mutation<{ multiSigAddress: { address: string } }, { phrase: string, owners: string[], required: number, internalRequired: number }>({\n            query: (data) => ({\n                url: '/multisig/createMultisig',\n                method: 'POST',\n                body: data\n            })\n        }),\n        getMultisigAddresses: builder.query<{ addresses: Array<{ address: string }> }, void>({\n            query: () => ({\n                url: '/multisig/addresses',\n            })\n        }),\n        removeMultisigAddress: builder.mutation<{ message: string }, { address: string }>({\n            query: (data) => ({\n                url: '/multisig/removeAddress/' + data.address,\n                method: 'DELETE',\n            })\n        }),\n\n\n        //OWNERS\n        getOwners: builder.query<string[], { address: string }>({\n            query: (data) => ({\n                url: '/multisig/owners/' + data.address,\n            })\n        }),\n        addOwner: builder.mutation<AddOwnerResponse, AddOwner>({\n            query: (data) => ({\n                url: '/multisig/addOwner',\n                method: 'POST',\n                body: data\n            })\n        }),\n        removeOwner: builder.mutation<AddOwnerResponse, AddOwner>({\n            query: (data) => ({\n                url: '/multisig/removeOwner',\n                method: 'DELETE',\n                body: data\n            })\n        }),\n        replaceOwner: builder.mutation<AddOwnerResponse, ReplaceOwner>({\n            query: (data) => ({\n                url: '/multisig/replaceOwner',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n\n\n\n        // Settings\n        getRequiredSignatures: builder.query<GetRequiredSignaturesResponse, GetRequiredSignatures>({\n            query: (data) => ({\n                url: '/multisig/required/' + data.address,\n            })\n        }),\n        changeRequiredSignatures: builder.mutation<ChangeRequiremntResponse, ChangeRequiremnt>({\n            query: (data) => ({\n                url: '/multisig/changeRequirement',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        chnageInternalRequiredSignatures: builder.mutation<ChangeRequiremntResponse, ChangeRequiremnt>({\n            query: (data) => ({\n                url: '/multisig/changeInternalRequirement',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n\n\n        //Transactions\n        submitTransactions: builder.mutation<SubmitTrasactionResponse, SubmitTrasaction>({\n            query: (data) => ({\n                url: '/multisig/submitTransaction',\n                method: 'POST',\n                body: data\n            })\n        }),\n        revokeTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/revokeTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        confirmTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/confirmTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        executeTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/executeTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getMultisigTransaction: builder.query<{ txResult: NonExecTransactionItem }, NonExecTransaction & { id: string }>({\n            query: (data) => ({\n                url: '/multisig/transaction/' + data.address + `/${data.id}`,\n            })\n        }),\n        getNotExecutedTransactions: builder.query<NonExecTransactionResponse, NonExecTransaction>({\n            query: (data) => ({\n                url: '/multisig/transactions/' + data.address,\n            })\n        }),\n        getTransactionsByPagination: builder.query<NonExecTransactionResponse, NonExecTransaction & { skip: number, take: number }>({\n            query: (data) => ({\n                url: '/multisig/transactions/' + data.address + `/${data.skip}/${data.take}`,\n            })\n        }),\n        getAllTransactions: builder.query<{ transactions: NonExecTransactionItem[] }, NonExecTransaction>({\n            query: (data) => ({\n                url: '/multisig/allTransactions/' + data.address,\n                transformResponse: (response: { data: { transactions: NonExecTransactionItem[] } }) => {\n                    response.data.transactions.forEach((item, index) => {\n                        item.id = index;\n                    })\n\n                    return response;\n                }\n            })\n        })\n    }),\n})\n\n\nexport const {\n    useGetTransactionsByPaginationQuery, useLazyGetTransactionsByPaginationQuery,\n    useGetAllTransactionsQuery, useLazyGetAllTransactionsQuery,\n    useCreateAddressMutation, useGetMultisigTransactionQuery, useLazyGetMultisigTransactionQuery,\n    useGetMultisigBalanceQuery, useLazyGetMultisigBalanceQuery,\n    useImportAddressMutation, useAddOwnerMutation, useChangeRequiredSignaturesMutation,\n    useChnageInternalRequiredSignaturesMutation, useConfirmTransactionsMutation,\n    useExecuteTransactionsMutation, useGetMultisigAddressesQuery,\n    useGetNotExecutedTransactionsQuery, useGetOwnersQuery, useGetRequiredSignaturesQuery,\n    useLazyGetMultisigAddressesQuery, useLazyGetNotExecutedTransactionsQuery, useLazyGetOwnersQuery,\n    useLazyGetRequiredSignaturesQuery, useRemoveMultisigAddressMutation, useRemoveOwnerMutation,\n    useReplaceOwnerMutation, useRevokeTransactionsMutation, useSubmitTransactionsMutation } = multisigAPI","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\ninterface NotificatinoState {\n    onSuccess: boolean;\n    onError: boolean;\n    onErrorText: string;\n    notificationSeen: number;\n}\n\nconst initialState: NotificatinoState = {\n    onSuccess: false,\n    onError: false,\n    onErrorText: '',\n    notificationSeen: 0\n}\n\nexport const notificationSlice = createSlice({\n    name: 'notification',\n    initialState,\n    reducers: {\n        changeError: (state, action: PayloadAction<{activate: boolean; text?: string}>) => {\n            state.onErrorText = action.payload.text || \"Something went wrong\";\n            state.onError = action.payload.activate;\n        },\n        changeSuccess: (state, action: PayloadAction<boolean>) => {\n            state.onSuccess = action.payload;\n        },\n        changeNotificationSeen: (state, action: PayloadAction<number>) => {\n            state.notificationSeen = action.payload;\n        }\n    },\n})\n\nexport const { changeError, changeSuccess, changeNotificationSeen } = notificationSlice.actions\n\nexport const selectError = (state: RootState) => state.notification.onError\nexport const selectErrorText = (state: RootState) => state.notification.onErrorText\nexport const selectSuccess = (state: RootState) => state.notification.onSuccess\n\nexport default notificationSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\nimport { AltCoins } from '../../types/coins';\nimport Initalization from '../../utility/init';\nimport { RootState } from '../store';\n\nexport interface ICurrencyInternal {\n\tprice?: number;\n\tpercent_24?: number;\n\tcurrent_balance?: number;\n}\n\nexport interface IBalanceItem {\n\tamount: number;\n\tper_24: number;\n\tpercent: number;\n\tcoins: AltCoins;\n\ttokenPrice: number;\n}\n\ninterface IBalanceMembers {\n\tCELO: IBalanceItem | undefined;\n\tcUSD: IBalanceItem | undefined;\n\tcEUR: IBalanceItem | undefined;\n\tUBE: IBalanceItem | undefined;\n\tMOO: IBalanceItem | undefined;\n\tMOBI: IBalanceItem | undefined;\n\tPOOF: IBalanceItem | undefined;\n\tcREAL: IBalanceItem | undefined;\n}\n\ninterface ICurrency {\n\tceloCoins: ICoinMembers;\n\tbalances: IBalanceMembers;\n}\n\nexport interface ICoinMembers {\n\tCELO: ICurrencyInternal | undefined;\n\tcUSD: ICurrencyInternal | undefined;\n\tcEUR: ICurrencyInternal | undefined;\n\tUBE: ICurrencyInternal | undefined;\n\tMOO: ICurrencyInternal | undefined;\n\tMOBI: ICurrencyInternal | undefined;\n\tPOOF: ICurrencyInternal | undefined;\n\tcREAL: ICurrencyInternal | undefined;\n}\n\nconst State: ICurrency = {\n\tceloCoins: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined,\n\t\tcREAL: undefined,\n\t},\n\tbalances: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined,\n\t\tcREAL: undefined,\n\t}\n};\n\nexport const CurrencySlice = createSlice({\n\tname: 'currencySlice',\n\tinitialState: State,\n\treducers: {\n\t\tupdateAllCurrencies: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return\n\t\t\tconst [celo, cusd, ceur, ube, moo, mobi, poof, creal]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { percent_24: celo.percent_24, price: celo.price },\n\t\t\t\tcUSD: { percent_24: cusd.percent_24, price: cusd.price },\n\t\t\t\tcEUR: { percent_24: ceur.percent_24, price: ceur.price },\n\t\t\t\tUBE: { percent_24: ube.percent_24, price: ube.price },\n\t\t\t\tMOO: { percent_24: moo.percent_24, price: moo.price },\n\t\t\t\tMOBI: { percent_24: mobi.percent_24, price: mobi.price },\n\t\t\t\tPOOF: { percent_24: poof.percent_24, price: poof.price },\n\t\t\t\tcREAL: { percent_24: creal.percent_24, price: creal.price },\n\t\t\t};\n\t\t},\n\t\tupdateBalance: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return\n\t\t\tconst [celo, cusd, ceur, ube, moo, mobi, poof, creal]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { ...state.celoCoins.CELO, current_balance: celo.current_balance },\n\t\t\t\tcUSD: { ...state.celoCoins.cUSD, current_balance: cusd.current_balance },\n\t\t\t\tcEUR: { ...state.celoCoins.cEUR, current_balance: ceur.current_balance },\n\t\t\t\tUBE: { ...state.celoCoins.UBE, current_balance: ube.current_balance },\n\t\t\t\tMOO: { ...state.celoCoins.MOO, current_balance: moo.current_balance },\n\t\t\t\tMOBI: { ...state.celoCoins.MOBI, current_balance: mobi.current_balance },\n\t\t\t\tPOOF: { ...state.celoCoins.POOF, current_balance: poof.current_balance },\n\t\t\t\tcREAL: { ...state.celoCoins.cREAL, current_balance: creal.current_balance },\n\t\t\t};\n\t\t},\n\t\tdeleteBalance: (state: ICurrency) => {\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: undefined,\n\t\t\t\tcUSD: undefined,\n\t\t\t\tcEUR: undefined,\n\t\t\t\tUBE: undefined,\n\t\t\t\tMOO: undefined,\n\t\t\t\tMOBI: undefined,\n\t\t\t\tPOOF: undefined,\n\t\t\t\tcREAL: undefined,\n\t\t\t}\n\t\t\tstate.balances = {\n\t\t\t\tCELO: undefined,\n\t\t\t\tcUSD: undefined,\n\t\t\t\tcEUR: undefined,\n\t\t\t\tUBE: undefined,\n\t\t\t\tMOO: undefined,\n\t\t\t\tMOBI: undefined,\n\t\t\t\tPOOF: undefined,\n\t\t\t\tcREAL: undefined,\n\t\t\t}\n\t\t},\n\t\tupdateUserBalance: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return\n\t\t\tconst [celo, cusd, ceur, ube, moo, mobi, poof, creal]: IBalanceItem[] = action.payload;\n\t\t\tstate.balances = {\n\t\t\t\tCELO: {\n\t\t\t\t\tamount: celo.amount,\n\t\t\t\t\tper_24: celo.per_24,\n\t\t\t\t\tpercent: celo.percent,\n\t\t\t\t\tcoins: celo.coins,\n\t\t\t\t\ttokenPrice: celo.tokenPrice\n\t\t\t\t},\n\t\t\t\tcUSD: {\n\t\t\t\t\tamount: cusd.amount,\n\t\t\t\t\tper_24: cusd.per_24,\n\t\t\t\t\tpercent: cusd.percent,\n\t\t\t\t\tcoins: cusd.coins,\n\t\t\t\t\ttokenPrice: cusd.tokenPrice\n\t\t\t\t},\n\t\t\t\tcEUR: {\n\t\t\t\t\tamount: ceur.amount,\n\t\t\t\t\tper_24: ceur.per_24,\n\t\t\t\t\tpercent: ceur.percent,\n\t\t\t\t\tcoins: ceur.coins,\n\t\t\t\t\ttokenPrice: ceur.tokenPrice\n\t\t\t\t},\n\t\t\t\tUBE: {\n\t\t\t\t\tamount: ube.amount,\n\t\t\t\t\tper_24: ube.per_24,\n\t\t\t\t\tpercent: ube.percent,\n\t\t\t\t\tcoins: ube.coins,\n\t\t\t\t\ttokenPrice: ube.tokenPrice\n\t\t\t\t},\n\t\t\t\tMOO: {\n\t\t\t\t\tamount: moo.amount,\n\t\t\t\t\tper_24: moo.per_24,\n\t\t\t\t\tpercent: moo.percent,\n\t\t\t\t\tcoins: moo.coins,\n\t\t\t\t\ttokenPrice: moo.tokenPrice\n\t\t\t\t},\n\t\t\t\tMOBI: {\n\t\t\t\t\tamount: mobi.amount,\n\t\t\t\t\tper_24: mobi.per_24,\n\t\t\t\t\tpercent: mobi.percent,\n\t\t\t\t\tcoins: mobi.coins,\n\t\t\t\t\ttokenPrice: mobi.tokenPrice\n\t\t\t\t},\n\t\t\t\tPOOF: {\n\t\t\t\t\tamount: poof.amount,\n\t\t\t\t\tper_24: poof.per_24,\n\t\t\t\t\tpercent: poof.percent,\n\t\t\t\t\tcoins: poof.coins,\n\t\t\t\t\ttokenPrice: poof.tokenPrice\n\t\t\t\t},\n\t\t\t\tcREAL: {\n\t\t\t\t\tamount: creal.amount,\n\t\t\t\t\tper_24: creal.per_24,\n\t\t\t\t\tpercent: creal.percent,\n\t\t\t\t\tcoins: creal.coins,\n\t\t\t\t\ttokenPrice: creal.tokenPrice\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n});\n\nexport const { updateAllCurrencies, updateUserBalance, deleteBalance } = CurrencySlice.actions;\n\nexport const SelectCurrencies = (state: RootState): ICoinMembers => state.currencyandbalance.celoCoins;\nexport const SelectBalances = (state: RootState): IBalanceMembers => state.currencyandbalance.balances;\nexport const SelectCelo = (state: RootState) => state.currencyandbalance.celoCoins.CELO;\nexport const SelectCusd = (state: RootState) => state.currencyandbalance.celoCoins.cUSD;\nexport const SelectCeur = (state: RootState) => state.currencyandbalance.celoCoins.cEUR;\n\nexport default CurrencySlice.reducer;\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLazyGetBalanceQuery, useLazyGetCurrenciesQuery, useLazyGetMultisigBalanceQuery, useLazyGetNotExecutedTransactionsQuery, useLazyGetTransactionsQuery } from '../redux/api'\nimport { SelectCurrencies, updateAllCurrencies, updateUserBalance } from '../redux/reducers/currencies'\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount'\nimport { selectStorage } from '../redux/reducers/storage'\nimport { SelectTransactions, setTransactions } from '../redux/reducers/transactions'\nimport { Coins } from '../types/coins'\nimport { GetBalanceResponse, MultisigBalanceResponse } from '../types/sdk'\n\nconst useRefetchData = (disableInterval = false) => {\n    const dispatch = useDispatch()\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const transactionStore = useSelector(SelectTransactions)\n    const currencies = useSelector(SelectCurrencies)\n\n    const [currencyTrigger, { data: currencyData, isFetching }] = useLazyGetCurrenciesQuery()\n    const [balanceTrigger, { data: balanceData, isFetching: balanceFetching }] = useLazyGetBalanceQuery()\n    const [transactionTrigger, { data: transactionData, isFetching: transactionFetching }] = useLazyGetTransactionsQuery()\n\n    const [multisigTrigger, { data: multisigBalance, isFetching: multiFetching }] = useLazyGetMultisigBalanceQuery()\n\n\n    useEffect(() => {\n        if (transactionData && transactionData.result.length > 0 && !transactionFetching) {\n            if (transactionStore?.result.length !== transactionData.result.length || (transactionStore.result[0].hash !== transactionData.result[0].hash || transactionStore.result[transactionStore.result.length - 1].hash !== transactionData.result[transactionData.result.length - 1].hash)) {\n                dispatch(setTransactions(transactionData))\n            }\n        } else if (transactionData && transactionData.result.length === 0) dispatch(setTransactions(transactionData))\n    }, [transactionData, transactionFetching])\n\n    useEffect(() => {\n        if (currencyData && currencyData.data && (storage?.accountAddress === selectedAccount && balanceData && !balanceFetching) || (storage?.accountAddress !== selectedAccount && multisigBalance && !multiFetching)) {\n            const updatedCurrency = currencyData!.data.map(d => ({\n                price: d.price,\n                percent_24: d.percent_24\n            }))\n\n            let [Celo, Cusd, Ceur, Ube, Moo, Mobi, Poof, cReal] = updatedCurrency;\n            // cReal = {\n            //     price: 0,\n            //     percent_24: 0\n            // }\n            const celo = Celo\n            const cusd = Cusd\n            const ceur = Ceur\n            const ube = Ube\n            const moo = Moo\n            const mobi = Mobi\n            const poof = Poof\n            const creal = cReal\n\n\n\n            if (balanceData || multisigBalance) {\n                let balance;\n                if (storage?.accountAddress === selectedAccount) {\n                    balance = balanceData;\n                } else balance = multisigBalance\n\n                if (balance && celo && cusd && ceur && ube && moo && mobi && poof && creal) {\n                    let pCelo;\n                    let pCusd;\n                    let pCeur;\n                    let pUbe;\n                    let pMoo;\n                    let pMobi;\n                    let pPoof;\n                    let pReal;\n                    if (storage?.accountAddress === selectedAccount) {\n                        balance = balance as GetBalanceResponse;\n                        pCelo = parseFloat(balance.celoBalance);\n                        pCusd = parseFloat(balance.cUSDBalance);\n                        pCeur = parseFloat(balance.cEURBalance);\n                        pUbe = parseFloat(balance.UBE);\n                        pMoo = parseFloat(balance.MOO);\n                        pMobi = parseFloat(balance.MOBI);\n                        pPoof = parseFloat(balance.POOF);\n                        pReal = parseFloat(balance.cREAL);\n                    } else {\n                        balance = balance as MultisigBalanceResponse;\n                        pCelo = parseFloat(balance.celo);\n                        pCusd = parseFloat(balance.cUSD);\n                        pCeur = parseFloat(balance.cEUR);\n                        pUbe = parseFloat(balance.UBE);\n                        pMoo = parseFloat(balance.MOO);\n                        pMobi = parseFloat(balance.MOBI);\n                        pPoof = parseFloat(balance.POOF);\n                        pReal = parseFloat(balance.cREAL);\n                    }\n\n                    const celoPrice = pCelo * (celo.price ?? 0);\n                    const cusdPrice = pCusd * (cusd.price ?? 0);\n                    const ceurPrice = pCeur * (ceur.price ?? 0);\n                    const ubePrice = pUbe * (ube.price ?? 0);\n                    const mooPrice = pMoo * (moo.price ?? 0);\n                    const mobiPrice = pMobi * (mobi.price ?? 0);\n                    const poofPrice = pPoof * (poof.price ?? 0);\n                    const cRealPrice = pReal * (creal.price ?? 0);\n\n                    const total = celoPrice + cusdPrice + mooPrice + + ceurPrice + ubePrice + mobiPrice + poofPrice + cRealPrice;\n\n                    const updatedBalance = [\n                        { amount: pCelo, per_24: Celo.percent_24, percent: (celoPrice * 100) / total, coins: Coins.celo, tokenPrice: +celo.price },\n                        { amount: pCusd, per_24: Cusd.percent_24, percent: (cusdPrice * 100) / total, coins: Coins.cUSD, tokenPrice: +cusd.price },\n                        { amount: pCeur, per_24: Ceur.percent_24, percent: (ceurPrice * 100) / total, coins: Coins.cEUR, tokenPrice: +ceur.price },\n                        { amount: pUbe, per_24: Ube.percent_24, percent: (ubePrice * 100) / total, coins: Coins.UBE, tokenPrice: +ube.price },\n                        { amount: pMoo, per_24: Moo.percent_24, percent: (mooPrice * 100) / total, coins: Coins.MOO, tokenPrice: +moo.price },\n                        { amount: pMobi, per_24: Mobi.percent_24, percent: (mobiPrice * 100) / total, coins: Coins.MOBI, tokenPrice: +mobi.price },\n                        { amount: pPoof, per_24: Poof.percent_24, percent: (poofPrice * 100) / total, coins: Coins.POOF, tokenPrice: +poof.price },\n                        { amount: pReal, per_24: cReal.percent_24, percent: (cRealPrice * 100) / total, coins: Coins.cREAL, tokenPrice: +creal.price }\n                    ]\n\n                    dispatch(updateUserBalance(updatedBalance))\n                }\n            }\n        }\n\n    }, [balanceData, balanceFetching, multisigBalance, multiFetching])\n\n    useEffect(() => {\n        if (currencyData && !isFetching) {\n            const updatedCurrency = currencyData.data.map(d => ({\n                price: d.price,\n                percent_24: d.percent_24\n            }))\n            updatedCurrency.push({price: 0, percent_24: 0})\n            if (!currencies.CELO || Object.values(currencies).some((w, i) => {\n                return w.price !== updatedCurrency[i].price\n            })) {\n                dispatch(updateAllCurrencies(\n                    updatedCurrency\n                ))\n            }\n\n            if (storage?.accountAddress === selectedAccount) {\n                transactionTrigger(storage!.accountAddress)\n                balanceTrigger()\n            } else {\n                transactionTrigger(selectedAccount)\n                multisigTrigger({ address: selectedAccount })\n            }\n\n        }\n    }, [currencyData, isFetching])\n\n    const fetching = () => {\n        currencyTrigger()\n    }\n\n    useEffect(() => {\n        let timer: any;\n        if (!disableInterval) {\n            timer = setInterval(() => {\n                fetching()\n            }, 10000)\n        }\n\n        return () => { if (timer) clearInterval(timer) }\n    })\n\n    return [fetching];\n}\n\nexport default useRefetchData;","import { Dispatch, useCallback, useEffect, useRef } from \"react\"\n\n\nconst useModalSideExit = (isSetting: boolean, setSetting: Dispatch<boolean>) => {\n    const settingRef = useRef<HTMLDivElement>(null)\n    const click = useCallback((e) => {\n        if (isSetting && settingRef.current && !settingRef.current.contains(e.target)) {\n            setSetting(false)\n        }\n    }, [isSetting])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, settingRef])\n\n    return settingRef;\n}\n\nexport default useModalSideExit;","\n\nexport const AddressReducer = (address: string)=>{\n    return address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')\n}","import { AddressReducer } from \"../../utility\";\nimport { useState } from \"react\";\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport 'react-popper-tooltip/dist/styles.css';\n\n\nconst Visitcard = ({ name, address }: { name: string, address: string }) => {\n\n    const [tooltip, setTooltip] = useState(false);\n\n    const {\n        getArrowProps,\n        getTooltipProps,\n        setTooltipRef,\n        setTriggerRef,\n        visible\n    } = usePopperTooltip();\n\n    return <>\n        <div ref={setTriggerRef} className=\"px-5 py-1 flex flex-col bg-gray-50 rounded-xl cursor-pointer\" onClick={() => {\n            navigator.clipboard.writeText(address.trim())\n            setTooltip(true)\n            setTimeout(()=>{\n                setTooltip(false)\n            },300)\n        }}>\n            <h3 className=\"text-lg\">{name}</h3>\n            <p className=\"text-xs\" >{AddressReducer(address)}</p>\n        </div>\n        {tooltip && (\n            <div\n                ref={setTooltipRef}\n                {...getTooltipProps({ className: '!rounded-sm tooltip-container' })}\n            >\n                <div {...getArrowProps({ className: 'tooltip-arrow ' })} />\n                <div className=\"text-sm -m-2 px-2 py-1 rounded-xl\">\n                    Copied!\n                </div>\n            </div>\n        )}\n    </>\n}\n\nexport default Visitcard;","import { IoIosArrowDown, IoMdNotificationsOutline } from 'react-icons/io';\nimport { BsSearch } from 'react-icons/bs'\nimport { useState, useEffect, useCallback, useRef, useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { Squash as Hamburger } from 'hamburger-react'\nimport { selectToggle, setMenu } from '../../redux/reducers/toggles';\nimport NotificationCointainer from '../../components/notification'\nimport useRefetchData from '../../hooks/useRefetchData';\nimport { useModalSideExit } from '../../hooks';\nimport { SelectSelectedAccount } from '../../redux/reducers/selectedAccount';\nimport { deleteBalance } from '../../redux/reducers/currencies';\nimport { removeTransactions } from '../../redux/reducers/transactions';\nimport { AddressReducer } from '../../utility'\nimport Visitcard from '../../components/dashboard/visitcard';\n\nconst Navbar = () => {\n    const storage = useAppSelector(selectStorage)\n    const menuBar = useAppSelector(selectToggle)\n    const dispatch = useAppDispatch()\n    const [refetch] = useRefetchData()\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n    useEffect(() => {\n        dispatch(removeTransactions())\n        dispatch(deleteBalance())\n        refetch()\n    }, [selectedAccount])\n\n    return <div className=\"grid grid-cols-3 md:grid-cols-5 gap-12\">\n        <div className=\"md:hidden pl-4\">\n            <div className=\"inline-block\" onClick={() => dispatch(setMenu(!menuBar.mobileMenu))}>\n                <Hamburger toggled={menuBar.mobileMenu} hideOutline={true} />\n            </div>\n        </div>\n        <div className=\"h-[50px] flex justify-center md:justify-start items-center md:pl-4 lg:pl-14\">\n            <img src=\"/logo.png\" alt=\"\" width=\"150\" />\n        </div>\n        <div className=\"search col-span-2 hidden md:block\">\n            <div className=\"w-full h-12 shadow backdrop-blur bg-gray-50 rounded-lg flex items-center pl-3 gap-3\">\n                <BsSearch />\n                <input type=\"text\" placeholder={'Search'} className=\"flex-grow bg-transparent outline-none\" />\n            </div>\n        </div>\n        <div className=\"actions hidden md:flex items-center justify-evenly md:col-span-2\">\n            {storage ? <Visitcard name={selectedAccount !== storage.accountAddress ? 'MultiSig' : \"Wallet\"} address={selectedAccount} /> : <ClipLoader />}\n            <NavbarDropdown />\n            <div className=\"relative\">\n                <NotificationCointainer />\n            </div>\n        </div>\n    </div>\n}\n\n\n\nconst Li = ({ children, link }: { children: any, link: string }) => <li className=\"text-left border px-3 py-2 bg-white hover:text-primary hover:border-b-primary cursor-pointer first:rounded-t-xl last:rounded-b-xl\"><Link to={link} className='flex gap-2'>{children}</Link></li>\n\nexport const NavbarDropdown = () => {\n    const [isOpen, setOpen] = useState(false)\n    const divRef = useModalSideExit(isOpen, setOpen)\n\n\n    return <div className=\"relative\">\n        <button onClick={() => setOpen(!isOpen)} className=\"bg-primary text-white px-6 py-3 rounded-xl flex items-center gap-x-2\">\n            Move Crypto\n            <div>\n                <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n            </div>\n        </button>\n        {isOpen && <div ref={divRef} className=\"absolute w-[150%] rounded-2xl sm:-left-1/4  -bottom-1 translate-y-full shadow-xl z-50\">\n            <ul>\n                <Li link={'/pay'}><PaySVG /> Pay Someone</Li>\n                <Li link=\"/masspayout\"><MassPayoutSVG />Mass Payout</Li>\n                <Li link=''><RequestMoneySVG /> Request Money</Li>\n                <Li link=''><FundSVG /> Add Funds</Li>\n            </ul>\n        </div>\n        }\n    </div>\n}\n\nconst PaySVG = () => <img src='/icons/senticon.svg' alt=\"\" />\n\nconst MassPayoutSVG = () => <img src='/icons/masspayouticon.svg' alt=\"\" />\n\nconst RequestMoneySVG = () => <img src='/icons/moneyrequesticon.svg' alt=\"\" />\n\nconst FundSVG = () => <img src='/icons/addfundds.svg' alt=\"\" />\n\nexport default Navbar;","import { useState, useEffect } from 'react'\n\nconst PhraseBar = ({ address, mnemonic = false, scanIcon = true }: { address: string, mnemonic?: boolean, scanIcon?: boolean }) => {\n    const [data, setData] = useState('');\n    const [see, setSee] = useState(false);\n    useEffect(() => {\n        if (mnemonic && !see) {\n            const value = address.split(\" \").reduce((a, c) => {\n                return a += ` ${c.replace(/[A-Z]/gi, \"*\")}`\n            })\n            return setData(value)\n        } else if (mnemonic) return setData(address);\n\n        let value = address.startsWith(\"0x\") ? address.slice(2) : address.replace(' ', '');\n        value = value.split('').reduce((a, c, i) => {\n            if (i > 0 && i % 4 === 0) a += ' ';\n            return a + c;\n        }, '')\n        return setData(value)\n    }, [see])\n\n    return <div>\n        <div className=\"bg-greylish bg-opacity-10 py-5 pl-2 pr-12 rounded-lg break-words relative\" style={!mnemonic ? { inlineSize: `${window.outerWidth>640?\"300px\":\"240px\"}` } : { inlineSize: `${window.outerWidth>640?\"420px\":\"240px\"}` }}>\n            <div className=\"font-light\">{mnemonic ? data : data.toUpperCase()}</div>\n            <div className=\"absolute -right-5 top-1/2 -translate-y-1/2 flex flex-col gap-3\">\n                {mnemonic ?\n                    <div className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => setSee(!see)}>\n                        <img src={'/icons/see.svg'} width=\"15\" height={15} alt=\"see\" />\n                    </div>\n                    :\n                    scanIcon ? <div className=\"bg-primary p-2 rounded-xl cursor-pointer\">\n                        <img src={'/icons/scanning.svg'} alt=\"scanning\" />\n                    </div> : null}\n\n                <div className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => navigator.clipboard.writeText(address.trim())}>\n                    <img src={'/icons/copy.svg'} alt=\"copy\" />\n                </div>\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default PhraseBar;","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IUnlock {\n    unlock: boolean;\n}\n\nconst initialState: IUnlock = {\n    unlock: false\n}\n\n\nexport const unlockSlide = createSlice({\n    name: \"unlock\",\n    initialState: initialState,\n    reducers: {\n        setUnlock: (state, action) => {\n            state.unlock =  action.payload;\n        }\n    }\n})\n\nexport const { setUnlock } = unlockSlide.actions\n\nexport const selectUnlock = (state: RootState) => state.unlock.unlock\n\nexport default unlockSlide.reducer","import { useHistory } from 'react-router-dom'\nimport PhraseBar from '../phraseBar'\nimport { PassDataFromSetToPhrase } from '../../types/create'\nimport { useDispatch } from 'react-redux'\nimport { setStorage } from '../../redux/reducers/storage'\nimport { setUnlock } from '../../redux/reducers/unlock'\nimport { changeAccount } from '../../redux/reducers/selectedAccount'\n\n// KeyPhrase Component\nconst KeyPhrase = ({ data }: { data: PassDataFromSetToPhrase }) => {\n    const router = useHistory();\n    const dispatch = useDispatch()\n    return <section className=\"w-full pt-[100px] sm:pt-0 sm:h-screen flex flex-col items-center justify-center\">\n        <div className=\"text-primary text-3xl tracking-wide text-center\">\n            Your New Remox Account\n        </div>\n        <div className=\"flex flex-col\">\n            <div className='grid sm:grid-cols-2 py-14 border-b'>\n                <div>\n                    <h2 className=\"text-center sm:text-left\">Public Address</h2>\n                    <span className=\"text-greylish text-center sm:text-left pb-3\">It’s like your username on Remox.<br />You can share this with friends.</span>\n                </div>\n                <div>\n                    <PhraseBar address={data?.accountAddress} />\n                </div>\n            </div>\n            <div className='grid sm:grid-cols-2 py-14'>\n                <div>\n                    <h2 className=\"text-center sm:text-left\"> Address</h2>\n                    <span className=\"text-greylish text-left pb-3\">It’s like your username on Remox.<br />You can share this with friends.</span>\n                </div>\n                <div>\n                    <PhraseBar mnemonic={true} address={data?.mnemonic} />\n                </div>\n            </div>\n        </div>\n        <div className=\"flex sm:flex-row flex-col-reverse pb-3 justify-center items-center gap-10 pt-8\">\n            <button className=\"rounded-xl w-[150px] h-[50px] border-2 border-primary text-primary shadow-lg bg-white\" onClick={() => router.goBack()}>Back</button>\n            <button className=\"rounded-xl w-[150px] h-[50px] text-white shadow-lg bg-primary\" onClick={() => {dispatch(setUnlock(true)); dispatch(changeAccount(data!.accountAddress)); dispatch(setStorage(JSON.stringify(data.localSave))); router.push(\"/dashboard\") }}>Continue</button>\n        </div>\n    </section>\n}\n\nexport default KeyPhrase;","import { MdDone } from 'react-icons/md'\nimport { VscError } from 'react-icons/vsc'\nimport { Dispatch, useEffect, useState } from 'react'\n\n// Input in SET\nconst Input = ({ title, name, type = \"text\", validation, limit = 0, required = false, className = \"\"}: { title: string, name: string, type?: string, validation?: Dispatch<boolean>, limit?: number, required?: boolean, className?: string}) => {\n    const [password, setPassword] = useState<string>();\n    const [repeatPassword, setRepeatPassword] = useState<string>();\n\n    useEffect(() => {\n        if (validation) {\n            if (repeatPassword && password && repeatPassword === password) {\n                validation(true);\n            } else {\n                validation(false);\n            }\n        }\n    }, [repeatPassword, password])\n    return <>\n        <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{title}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={name} autoComplete='new-password' minLength={limit} className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setPassword(e.target.value);\n                }} required={required} />\n            </div>\n        </div>\n        {type === \"password\" ? <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{'Repeat Password'}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={'repeatPassword'} autoComplete='new-password' className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setRepeatPassword(e.target.value);\n                }} required />\n                {repeatPassword && password && <div>\n                    {repeatPassword === password ? <MdDone className=\"text-green-600\" /> : <VscError className=\"text-red-600\" />}\n                </div>}\n            </div>\n        </div> : null}\n    </>\n}\n\nexport default Input;","import { useMemo, Dispatch } from 'react';\nimport Input from '../input'\nimport { useHistory } from 'react-router-dom'\nimport { generate } from 'shortid'\nimport { AccountCreate } from '../../types/sdk';\nimport { SyntheticEvent } from 'react';\nimport { PassDataFromSetToPhrase } from '../../types/create'\nimport { useAccountCreateMutation } from '../../redux/api/account';\nimport { ClipLoader } from 'react-spinners';\n\n// SET Component\nconst Set = ({ setData }: { setData: Dispatch<PassDataFromSetToPhrase> }) => {\n\n    const [createAccount, { isLoading }] = useAccountCreateMutation()\n\n\n    const router = useHistory()\n\n    const list = useMemo<Array<{ title: string, type?: string, name: string }>>(() => [\n        { title: \"First Name\", name: \"userName\" }, { title: \"Last Name\", name: \"surname\" },\n        { title: \"Organization Name\", name: \"companyName\" }, { title: \"Password\", name: \"password\", type: \"password\", limit: 6 },\n    ], [])\n\n    const create = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLFormElement\n\n        if (target[\"password\"].value !== target[\"repeatPassword\"].value) return\n\n        const inputData: AccountCreate = {\n            userName: target[\"userName\"].value,\n            surname: target[\"surname\"].value,\n            companyName: target[\"companyName\"].value,\n            password: target[\"password\"].value,\n        }\n\n        try {\n            const data = await createAccount(inputData).unwrap()\n\n            const obj = {\n                accountAddress: data.accountAddress,\n                encryptedPhrase: data.encryptedPhrase,\n                token: data.token,\n                userName: inputData.userName,\n                surname: inputData.surname,\n                companyName: inputData.companyName,\n            };\n\n            // dispatch(setStorage(JSON.stringify(obj)))\n\n            const pass: PassDataFromSetToPhrase = {\n                accountAddress: data.accountAddress,\n                mnemonic: data.mnemonic,\n                localSave: obj,\n            }\n\n            setData(pass)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return <>{!isLoading ? <form onSubmit={create} className=\"py-[100px] sm:py-0 sm:h-full\">\n        <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\n            <div className=\"flex flex-col gap-4\">\n                <div className=\"text-xl sm:text-3xl text-primary text-center\">Set Account Details</div>\n                <div className=\"text-greylish tracking-wide font-light text-lg text-center\">This password encrypts your accounts on this device.</div>\n            </div>\n            <div className=\"grid sm:grid-cols-3 gap-x-24 gap-y-8 px-3\">\n                {list.map(w => <Input key={generate()} {...w} />)}\n            </div>\n            <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\n                <button className=\"rounded-xl w-[150px] h-[50px] border-2 border-primary text-primary shadow-lg bg-white\" onClick={() => router.push('/')}>Back</button>\n                <button type=\"submit\" className=\"rounded-xl w-[150px] h-[50px] text-white shadow-lg bg-primary\">Set Account</button>\n            </div>\n        </section>\n    </form> : <div className=\" h-screen flex items-center justify-center\"><ClipLoader /></div>}</>\n}\n\n\nexport default Set;","import { Link, NavLink } from 'react-router-dom'\nimport { BiLogOut } from 'react-icons/bi'\nimport { useDispatch } from 'react-redux'\nimport { removeStorage } from '../../redux/reducers/storage'\nimport { setMenu } from '../../redux/reducers/toggles'\nimport { removeTransactions } from '../../redux/reducers/transactions'\n\nconst Li = ({ children, onClick, className }: { children?: Array<any>, onClick?: () => void, className?: string }) => <li onClick={onClick} className={`mb-6 text-left font-light text-lg flex gap-3 cursor-pointer ${className}`}>{children}</li>\nconst Sidebarlist = () => {\n    const dispatch = useDispatch()\n    return <>\n        <ul>\n            <NavLink to=\"/dashboard\" exact={true} activeClassName='text-primary'><Li><DashboardSVG />Dashboard</Li></NavLink>\n            <NavLink to=\"/dashboard/payroll\" activeClassName='text-primary'><Li><PayrollSVG />Payroll</Li></NavLink>\n            <NavLink to=\"/dashboard/transactions\" activeClassName='text-primary'><Li><TransactionsSVG />Transactions</Li></NavLink>\n            <NavLink to=\"/dashboard/swap\" activeClassName='text-primary'><Li><SwapSVG />Swap</Li></NavLink>\n            <NavLink to=\"/dashboard/assets\" activeClassName='text-primary'><Li><AssetsSVG />Assets</Li></NavLink>\n            <NavLink to=\"/dashboard/teams\" activeClassName='text-primary'><Li><TeamsSVG />Teams</Li></NavLink>\n            <NavLink to=\"/dashboard/settings\" activeClassName='text-primary'><Li><SettingSVG />Settings</Li></NavLink>\n            <Li onClick={() => {\n                dispatch(setMenu(false))\n                dispatch(removeTransactions())\n                dispatch(removeStorage())\n            }}><LogoutSVG />Log Out</Li>\n        </ul>\n    </>\n}\n\nconst DashboardSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/dashboardicon.svg' alt='Dashboard' />\n\nconst PayrollSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/runpayrollicon.svg' alt=\"Payroll\" />\n\nconst TransactionsSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/Transactionsicon.svg' alt=\"Transaction\" />\n\nconst SwapSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/swap.svg' alt=\"Swap\" />\n\nconst AssetsSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/stocksicon.svg' alt=\"Asset\" />\n\nconst TeamsSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/teamlogo.svg' alt=\"Teams\" />\n\nconst SettingSVG = () => <img className=\"w-[28px] h-[28px]\" src='/icons/settings.svg' alt=\"\" />\n\nconst LogoutSVG = () => <BiLogOut className=\"w-[28px] h-[28px]\" />\n\nexport default Sidebarlist;","\n\nconst CoinItem = ({ title, coin, usd, percent, rate, img }: { title: string, coin: string, usd: string, percent: string, rate?: number, img: string }) => {\n\n    return <div className=\"py-2 pl-2 gap-2 pr-5 flex bg-greylish bg-opacity-5 rounded-xl h-[60px]\">\n        <div className=\"w-[25px] flex items-center justify-center\">\n            <img width=\"25\" height=\"25\" src={img} alt=\"\" className=\"rounded-xl\" />\n        </div>\n        <div className=\"flex-grow grid grid-cols-2 gap\">\n            <div className=\"flex flex-col justify-between items-start\">\n                <div className=\"font-semibold text-black text-sm\">{title}</div>\n                <div className=\"text-greylish text-sm font-normal\">{`${coin}`}</div> \n                {/* <div className=\"text-greylish opacity-70 text-xs font-light\">{percent}%</div> */}\n            </div>\n            <div className=\"flex flex-col justify-center items-end\">\n                <div className=\"font-semibold text-black text-base\">${usd}</div>\n                {/* <div className=\"text-greylish opacity-70 text-xs font-light\">{`${title} ${coin}`}</div> */}\n            </div>\n            {/* <div className=\"flex flex-col justify-between items-end\">\n                <div className=\"font-semibold text-gray-500 text-sm\">{rate?.toFixed(2)}%</div>\n                <div className=\"text-greylish opacity-70 text-xs font-light\">24h</div>\n            </div> */}\n        </div>\n    </div>\n}\n\nexport default CoinItem;","import { useEffect, useMemo, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { IBalanceItem, ICurrencyInternal, SelectBalances, SelectCurrencies } from '../../../redux/reducers/currencies';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../../../types/coins';\nimport { generate } from 'shortid';\nimport Web3 from 'web3'\nimport { useAppSelector } from '../../../redux/hooks';\nimport { selectStorage } from \"../../../redux/reducers/storage\";\nimport { SelectTransactions } from \"../../../redux/reducers/transactions\";\nimport CoinItem from '../../../components/dashboard/main/coinitem';\nimport { SelectSelectedAccount } from \"../../../redux/reducers/selectedAccount\";\n\ninterface Balance {\n    amount: number,\n    per_24?: number,\n    percent: number,\n    coins: AltCoins,\n    tokenPrice: number | undefined\n}\n\nconst Statistic = () => {\n    const storage = useAppSelector(selectStorage)\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n    const transactions = useAppSelector(SelectTransactions)\n\n    const [percent, setPercent] = useState<number>()\n    const [balance, setBalance] = useState<string>()\n\n\n    const [lastIn, setIn] = useState<number>()\n    const [lastOut, setOut] = useState<number>();\n\n    const [allInOne, setAllInOne] = useState<Balance[]>()\n\n\n    const currencies = useAppSelector(SelectCurrencies)\n    const celo = (useAppSelector(SelectCurrencies)).CELO\n    const cusd = (useAppSelector(SelectCurrencies)).cUSD\n    const ceur = (useAppSelector(SelectCurrencies)).cEUR\n    const ube = (useAppSelector(SelectCurrencies)).UBE\n    const moo = (useAppSelector(SelectCurrencies)).MOO\n    const mobi = (useAppSelector(SelectCurrencies)).MOBI\n    const poof = (useAppSelector(SelectCurrencies)).POOF\n    const creal = (useAppSelector(SelectCurrencies)).cREAL\n\n    const balanceRedux = useAppSelector(SelectBalances)\n    const celoBalance = (useAppSelector(SelectBalances)).CELO\n    const cusdBalance = (useAppSelector(SelectBalances)).cUSD\n    const ceurBalance = (useAppSelector(SelectBalances)).cEUR\n    const ubeBalance = (useAppSelector(SelectBalances)).UBE\n    const mooBalance = (useAppSelector(SelectBalances)).MOO\n    const mobiBalance = (useAppSelector(SelectBalances)).MOBI\n    const poofBalance = (useAppSelector(SelectBalances)).POOF\n    const crealBalance = (useAppSelector(SelectBalances)).cREAL\n\n\n\n    const all = useMemo(() => {\n        if (celoBalance !== undefined && crealBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            return {\n                celo: celoBalance,\n                cUSD: cusdBalance,\n                cEUR: ceurBalance,\n                UBE: ubeBalance,\n                MOO: mooBalance,\n                MOBI: mobiBalance,\n                POOF: poofBalance,\n                cREAL: crealBalance\n            }\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n    const chart = useMemo(() => {\n        if (celoBalance !== undefined && crealBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            const celoDeg = Math.ceil(celoBalance.percent * 3.6) \n            const cusdDeg = Math.ceil(cusdBalance.percent * 3.6) + celoDeg;\n            const ceurDeg = Math.ceil(ceurBalance.percent * 3.6) + cusdDeg;\n            const ubeDeg = Math.ceil(ubeBalance.percent * 3.6) + ceurDeg;\n            const mooDeg = Math.ceil(mooBalance.percent * 3.6) + ubeDeg;\n            const mobiDeg = Math.ceil(mooBalance.percent * 3.6) + mooDeg;\n            const poofDeg = Math.ceil(poofBalance.percent * 3.6) + mobiDeg;\n            const crealDeg = Math.ceil(crealBalance.percent * 3.6) + poofDeg;\n\n            if (!celoDeg && !cusdDeg && !ceurDeg && !ubeDeg && !mooDeg && !mobiDeg && !poofDeg && !crealDeg) return `conic-gradient(#FF774E 0deg 360deg)`\n\n            return `conic-gradient(#fbce5c 0deg ${celoDeg}deg, #46cd85 ${celoDeg}deg ${cusdDeg}deg, #040404 ${cusdDeg}deg ${ceurDeg}deg, #6D619A ${ceurDeg}deg ${ubeDeg}deg, #3288ec ${ubeDeg}deg ${mooDeg}deg, #e984a0 ${mooDeg}deg ${mobiDeg}deg, #7D72FC ${mobiDeg}deg ${poofDeg}deg, #e904a3 ${poofDeg}deg ${crealDeg}deg)`\n        }\n        return `conic-gradient(#FF774E 0deg 360deg)`\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance, celo, cusd, ceur, ube, moo, mobi, poof, creal])\n\n\n\n\n    useEffect(() => {\n        if (celoBalance && cusdBalance && ceurBalance && ubeBalance && mooBalance && mobiBalance && poofBalance && crealBalance) {\n\n            //const total = celoBalance.amount + cusdBalance.amount + ceurBalance.amount + ubeBalance.amount + mooBalance.amount + poofBalance.amount + mobiBalance.amount;\n            const currencObj = Object.values(currencies)\n            const currencObj2: IBalanceItem[] = Object.values(balanceRedux)\n\n            let indexable = 0;\n            const per = currencObj.reduce((a, c: ICurrencyInternal, index) => {\n                if (currencObj2[index].amount > 0) {\n                    a += c.percent_24\n                    indexable++\n                }\n                return a;\n            }, 0)\n\n            const result: number =\n                (celoBalance.amount * celoBalance.tokenPrice) + (cusdBalance.amount * cusdBalance.tokenPrice) +\n                (ceurBalance.amount * ceurBalance.tokenPrice) + (ubeBalance.amount * ubeBalance.tokenPrice) +\n                (mooBalance.amount * mooBalance.tokenPrice) + (mobiBalance.amount * mobiBalance.tokenPrice) +\n                (poofBalance.amount * poofBalance.tokenPrice) + (crealBalance.amount * crealBalance.tokenPrice)\n\n            setBalance(result.toFixed(2))\n            setPercent(per / indexable)\n\n        }else if(celoBalance === undefined){\n            setBalance(undefined)\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n\n\n    useEffect(() => {\n        if (all) {\n            setAllInOne(Object.values(all).sort((a, b) => (b.amount * b.tokenPrice).toLocaleString().localeCompare((a.amount * a.tokenPrice).toLocaleString())).slice(0, 4))\n        }\n    }, [all])\n\n    useEffect(() => {\n        if (transactions) {\n            let myin = 0;\n            let myout = 0;\n            transactions.result.forEach(t => {\n                let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === t.tokenSymbol)?.[1]\n                const coin = feeToken ? Coins[feeToken] : Coins.cUSD;\n                const tTime = new Date(parseInt(t.timeStamp) * 1e3)\n                if (tTime.getMonth() === new Date().getMonth()) {\n                    const calc = (parseFloat(Web3.utils.fromWei(t.value, 'ether')) * (feeToken ? (currencies[coin.name]?.price ?? 0) : 0))\n                    if (t.from.toLowerCase() === selectedAccount.toLowerCase()) {\n                        myout += calc\n                    } else {\n                        myin += calc\n                    }\n                }\n            })\n            setIn(myin)\n            setOut(myout)\n        }\n    }, [transactions])\n\n    return <>\n        <div className=\"col-span-2 flex flex-col\">\n            <div className=\"flex justify-between pl-4 h-[30px]\">\n                <div className=\"text-base text-greylish\">Total Balance</div>\n                <div className=\"text-base text-greylish opacity-70\">24h</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-8\">\n                <div className=\"text-4xl\">\n                    {balance || (balance !== undefined && parseFloat(balance) === 0) ? `$${balance}` : <ClipLoader />}\n                </div>\n                <div className=\"flex items-center text-3xl text-greylish opacity-70\" style={\n                    balance !== undefined && parseFloat(balance) !== 0 ? percent && percent > 0 ? { color: 'green' } : { color: 'red' } : { color: 'black' }\n                }>\n                    {balance !== undefined && parseFloat(balance) !== 0 ? percent ? `${percent.toFixed(2)}%` : <ClipLoader /> : '0%'}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money in last month</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-xl sm:text-2xl opacity-80\">\n                    {lastIn !== undefined && transactions !== undefined && balance !== undefined ? `+ $${lastIn?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money out last month</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-greylish opacity-80 text-xl sm:text-2xl\">\n                    {lastOut !== undefined && transactions !== undefined && balance !== undefined ? `- $${lastOut?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"sm:flex flex-col hidden\">\n            <div>Asset</div>\n            <div>\n                {celoBalance !== undefined && cusdBalance !== undefined ? <div className=\"w-[200px] h-[200px] rounded-full relative\" style={{\n                    background: chart\n                }}>\n                    <div className=\"w-[120px] h-[120px] bg-white left-1/2 top-1/2 absolute -translate-x-1/2 -translate-y-1/2 rounded-full\"></div>\n                </div> : null}\n            </div>\n        </div>\n        {\n            balance && allInOne !== undefined ?\n                <div className=\"flex flex-col gap-5 overflow-hidden col-span-2 sm:col-span-1\">\n                    {allInOne.map((item, index) => {\n                        return <CoinItem key={generate()} title={item.coins.name} coin={item.amount.toFixed(2)} usd={((item.tokenPrice ?? 0) * item.amount).toFixed(2)} percent={(item.percent || 0).toFixed(1)} rate={item.per_24} img={item.coins.coinUrl} />\n                    })}\n                </div> : <ClipLoader />\n        }</>\n\n}\n\n\nexport default Statistic;","import { useEffect, useRef, useState } from \"react\";\nimport { IoIosSwap } from \"react-icons/io\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport { AltCoins, AltcoinsList, Coins } from \"../types/coins\";\nimport { TransactionType, TransactionStatus, TransactionDirection } from \"../types/dashboard/transaction\"\nimport { AddressReducer } from \"../utility\";\n\nconst TransactionItem = ({ type, direction, date, amountUSD, status, amountCoin, coinName, hash, address, coin }: { hash: string, type?: TransactionType, direction?: TransactionDirection, date: string, amountUSD?: string, amountCoin: string[], status: TransactionStatus, outputCoin?: string, address?: string, coin: AltCoins[], coinName: string[] }) => {\n\n    const [detect, setDetect] = useState(true);\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (divRef.current && window.outerWidth / divRef.current.clientWidth > 3) {\n            setDetect(false)\n        }\n    }, [])\n\n    return <div ref={divRef} className={`grid ${detect ? 'grid-cols-[25%,45%,30%] sm:grid-cols-[25%,35%,20%,20%] pl-5' : 'grid-cols-[35%,40%,25%]'} min-h-[75px] py-4 `}>\n        <div className=\"flex space-x-3\">\n            <div className={`hidden sm:flex ${detect ? \"items-center\":\"items-start\"} pt-3 justify-center`}>\n                <div className={`bg-greylish bg-opacity-10 ${detect ? \"w-[45px] h-[45px] text-lg\" : \"w-[25px] h-[25px] text-xs\"} flex items-center justify-center rounded-full font-bold `}>\n                    Un\n                </div>\n            </div>\n            <div className={`sm:flex flex-col ${detect ? \"justify-center\":\"justify-start\"} items-start `}>\n                <div className=\"text-greylish\">\n                    <span> Unknown </span>\n                </div>\n                {address && <div className=\"text-sm text-greylish\">\n                    {AddressReducer(address)}\n                </div>}\n            </div>\n        </div>\n        <div className=\"text-base\">\n            <div>\n                {amountCoin.map((s, i) => <div key={generate()} className={`grid ${detect ? \"grid-cols-[20%,80%]\": \"grid-cols-[45%,55%]\"} items-center mx-7 gap-x-1`}>\n                    <div className={`grid ${detect? \"grid-cols-[15%,85%]\":\"grid-cols-[25%,75%]\"} gap-x-1 items-center`}>\n                        <div className=\"w-[10px] h-[10px] rounded-full bg-primary space-x-3 self-center\">\n                        </div>\n                        <span>\n                            {s}\n                        </span>\n                    </div>\n                    <div className={`grid ${detect ? \"grid-cols-[10%,90%]\": \"grid-cols-[30%,70%]\"} gap-x-1 items-center`}>\n                        <div>\n                            <img src={coin[i].coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                        </div>\n                        <div>\n                            {coinName[i]}\n                        </div>\n                    </div>\n                </div>\n                )}\n            </div>\n        </div>\n        {detect && <div></div>}\n        <div className=\"flex justify-end cursor-pointer  items-start md:pr-0 \">\n            <Link to={`/dashboard/transactions/${hash}`}><div className={`text-primary  ${detect ? \"px-8 max-h-[80px] border-2 border-primary lg:pr-5\" : \"text-sm pr-4\"} rounded-xl py-2`}>View Details</div></Link>\n        </div>\n    </div>\n}\n\nexport default TransactionItem;","import { useState } from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { TransactionDirection, TransactionStatus } from \"../../types\";\n\n\n\nconst Accordion = ({ children, date, dataCount, status, direction, grid = \"grid-cols-[37%,33%,30%]\" }: { children: JSX.Element, date: string, dataCount: number, status: TransactionStatus, direction: TransactionDirection, grid?: string }) => {\n\n    const [isOpen, setOpen] = useState(false)\n    const [bodyHeight, setBodyHeight] = useState(\"0px\")\n\n    const click = () => {\n        setBodyHeight(bodyHeight === \"0px\" ? \"auto\" : \"0px\")\n        setOpen(!isOpen)\n    }\n\n    return <div>\n        <div className=\"flex space-x-1 items-center bg-greylish bg-opacity-10 rounded-xl px-3 my-3\">\n            <div className=\"cursor-pointer\" onClick={click}>\n                <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n            </div>\n            <div className={`py-3 grid  px-2 ${grid} items-center w-full`}>\n                <div>\n                    {dataCount === 1 ? \"1 Payment\" : `${dataCount} Payments`}\n                </div>\n                <div className=\"text-sm text-greylish\">\n                    {TransactionDirection.In === direction ? \"Received\" : \"\"} {TransactionDirection.Out === direction ? \"Executed\" : \"\"} on {date}\n                </div>\n                <div className={`flex ${grid !== \"grid-cols-[37%,33%,30%]\" ? \"justify-start\" : \"justify-end\"} gap-x-2 items-center`}>\n                    {status === TransactionStatus.Completed ? <div className=\"bg-green-400 w-2 h-2 rounded-full\"></div> : null}\n                    {status}\n                </div>\n                <div></div>\n            </div>\n        </div>\n        <div className=\"overflow-hidden\" style={{\n            height: bodyHeight\n        }}>\n            {children}\n        </div>\n    </div>\n}\n\nexport default Accordion;","import TransactionItem from \"../../transactionItem\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport _ from \"lodash\";\nimport { TransactionHook, TransactionHookByDate, TransactionHookByDateInOut } from '../../../hooks/useTransactionProcess'\nimport { Fragment, useEffect } from \"react\";\nimport Accordion from \"../accordion\";\nimport { TransactionDirection, TransactionStatus } from \"../../../types\";\nimport { Coins } from \"../../../types/coins\";\n\n\nconst TransactionHistory = ({ transactions }: { transactions: TransactionHook[] | TransactionHookByDateInOut }) => {\n\n    let index = 0;\n\n    return <div className=\"flex flex-col shadow-custom max-h-full px-5 pt-5 pb-4 rounded-xl\">\n        <div className=\"flex justify-between\">\n            <div className=\"font-semibold text-lg text-black tracking-wide\">Recent Transactions</div>\n            <div><Link to=\"/dashboard/transactions\" className=\"text-primary border border-primary px-10 py-2 rounded-xl\">View All</Link></div>\n        </div>\n        <div className=\"grid grid-cols-1 pt-5\">\n            {transactions && !Array.isArray(transactions) && Object.entries(transactions).map(([date, transactionObj]) => {\n                const recievedTransactions = transactionObj.recieved;\n                const sentTransactions = transactionObj.sent;\n                return <Fragment key={generate()}>\n                    {index < 6 && recievedTransactions.length > 0 && ++index && <Accordion direction={TransactionDirection.In} date={date} dataCount={recievedTransactions.length} status={TransactionStatus.Completed}>\n                        <div>\n                            {recievedTransactions.map(({ amount, address, coinName, blockNumber, date, coin}) => {\n                                return <TransactionItem key={generate()} hash={blockNumber} address={address} amountCoin={amount} date={date} coinName={coinName} coin={coin}  status={TransactionStatus.Completed} />\n                            })}\n                        </div>\n                    </Accordion>}\n                    {index < 6 && sentTransactions.length > 0 && ++index && <Accordion direction={TransactionDirection.Out} date={date} dataCount={sentTransactions.length} status={TransactionStatus.Completed}>\n                        <div>\n                            {sentTransactions.map(({ amount, coinName, blockNumber, address, date, coin }) => {\n                                return <TransactionItem key={generate()} hash={blockNumber} address={address} date={date} amountCoin={amount} coinName={coinName} coin={coin} status={TransactionStatus.Completed} />\n                            })}\n                        </div>\n                    </Accordion>}\n                </Fragment>\n            })}\n        </div>\n    </div>\n\n}\n\n\n\nexport default TransactionHistory;","import Input from \"../input\"\nimport { useHistory } from 'react-router-dom'\nimport { useState } from 'react'\nimport { ClipLoader } from \"react-spinners\";\nimport { SyntheticEvent } from \"react\";\nimport { useCreatePasswordMutation } from \"../../redux/api/account\";\nimport { IStorage, setStorage } from \"../../redux/reducers/storage\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { setUnlock } from \"../../redux/reducers/unlock\";\nimport { changeAccount } from \"../../redux/reducers/selectedAccount\";\n\nconst CreatePassword = ({ phrase }: { phrase: string }) => {\n    const [createPassword, { isLoading }] = useCreatePasswordMutation();\n\n    const dispatch = useAppDispatch()\n    const router = useHistory();\n\n    const [isValid, setValid] = useState(false)\n\n\n    const Submitted = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLFormElement;\n        if(!isValid) return;\n\n        try {\n            const data = await createPassword({ phrase: phrase.trim(), password: target[\"password\"]?.value?.trim() }).unwrap()\n\n            const obj: IStorage = {\n                accountAddress: data!.accountAddress,\n                encryptedPhrase: data!.encryptedPhrase,\n                token: data!.token,\n            };\n\n            dispatch(changeAccount(data!.accountAddress));\n            dispatch(setUnlock(true))\n            dispatch(setStorage(JSON.stringify(obj)))\n\n            // router.push('/dashboard')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    return <div className=\"h-screen\">\n        <form onSubmit={Submitted} className=\"h-full\">\n            <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\n                <div className=\"flex flex-col gap-4\">\n                    <div className=\"text-center text-3xl text-primary\">Set Account Details</div>\n                    <div className=\"text-center text-greylish tracking-wide font-light text-lg\">This password encrypts your accounts on this device.</div>\n                </div>\n                <div className=\"grid sm:grid-cols-2 gap-x-24 gap-y-8\">\n                    <Input title=\"Password\" name=\"password\" type=\"password\" validation={setValid} className=\"w-[100%] sm:w-[200px]\" limit={6} required={true}/>\n                </div>\n                <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\n                    <button className=\"rounded-xl w-[150px] h-[50px] border-2 border-primary text-primary shadow-lg bg-white\" onClick={() => router.push('/')}>Back</button>\n                    <button type=\"submit\" className=\"rounded-xl w-[150px] h-[50px] text-white shadow-lg bg-primary\">{isLoading ? <ClipLoader /> : 'Set Password'}</button>\n                </div>\n            </section>\n        </form>\n    </div>\n}\n\nexport default CreatePassword;","const Header = ()=> <header className=\"flex md:px-40 h-[75px] justify-center md:justify-start items-center absolute top-0 w-full\">\n    <div>\n        <img src=\"/logo.png\" alt=\"\" className=\"w-[150px]\" />\n    </div>\n</header>\n\n\nexport default Header;","import { useState } from 'react'\nimport { ClipLoader } from 'react-spinners';\nimport Header from '../../layouts/home/header';\nimport { useSignInMutation } from '../../redux/api/account';\nimport { IStorage, setStorage } from '../../redux/reducers/storage';\nimport { useDispatch } from 'react-redux';\nimport { setUnlock } from '../../redux/reducers/unlock';\nimport { changeAccount } from '../../redux/reducers/selectedAccount';\n\n\nconst Login = ({ phrase }: { phrase: string }) => {\n    const [signin, { isLoading }] = useSignInMutation()\n\n    const dispatch = useDispatch()\n\n    const [input, setInput] = useState<string>()\n    const [incorrrect, setIncorrect] = useState(false)\n\n\n    const Submitted = async () => {\n        if (input && phrase) {\n            setIncorrect(false)\n\n            try {\n                const data = await signin({ phrase: phrase.trim(), password: input.trim() }).unwrap()\n\n                const obj: IStorage = {\n                    accountAddress: data!.accountAddress,\n                    encryptedPhrase: data!.encryptedPhrase,\n                    token: data!.token,\n                };\n\n                dispatch(changeAccount(data!.accountAddress));\n                dispatch(setUnlock(true))\n                dispatch(setStorage(JSON.stringify(obj)))\n\n            } catch (error) {\n                console.error(error);\n                setIncorrect(true);\n            }\n\n        }\n    }\n\n    return <>\n        <Header />\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary text-center\">Open Your Wallet</h2>\n            <div className=\"flex flex-col gap-4 items-center\">\n                <div className=\"text-center\">Enter your password to open your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submitted()\n                    }\n                }} onChange={(e) => setInput(e.target.value)} type=\"password\" autoComplete='new-password' className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <button onClick={Submitted} className=\"bg-primary shadow-lg px-5 py-2 text-white rounded-lg\">{isLoading ? <ClipLoader /> : 'Unlock'}</button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\nexport default Login;","import { IoIosArrowDown } from 'react-icons/io'\nimport { Dispatch, forwardRef, useEffect, useRef, useState } from 'react'\nimport { generate } from 'shortid'\nimport { DropDownItem } from '../types/dropdown'\nimport { MouseEventHandler } from 'react'\nimport { CoinsURL } from '../types/coins'\nimport { ClipLoader } from 'react-spinners'\nimport { useModalSideExit } from '../hooks'\n\nconst Li = forwardRef<HTMLLIElement, { children: Array<any> | any, onClick: MouseEventHandler, className: string }>(({ children, onClick, className }, ref) => <li ref={ref} onClick={onClick} className={`${className} text-left border px-3 py-2 bg-white hover:bg-gray-200 cursor-pointer`}>{children}</li>)\n\nconst Viewer = ({ displayName, name, address, coinUrl, className, disableAddressDisplay }: { displayName?: string, name: string, address?: string, coinUrl?: CoinsURL, className?: string, disableAddressDisplay?: boolean }) => <div className=\"flex flex-col\">\n    <div className=\"flex flex-col\">\n        {displayName && <div className=\"items-center text-sm text-greylish opacity-80\">\n            {displayName}\n        </div>}\n        <div className=\"text-left flex space-x-2 items-center\">\n            {coinUrl && <div><img src={coinUrl} className={coinUrl ? `w-[20px] h-[20px]` : ''} alt=\"\" /></div>}\n            <div className={`${className ?? ''} font-normal truncate`} title={name}>{name}</div>\n        </div>\n    </div>\n    {!disableAddressDisplay && <div className={`text-left text-[10px] text-gray-500`}>{!address?.startsWith('0x') ? address : address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')}</div>}\n</div>\n\nconst Dropdown = ({ selected, list, nameActivation = false, onSelect, className, loader = false, disableAddressDisplay = false, parentClass = '', childClass = '', displayName, onChange }: { disableAddressDisplay?: boolean, parentClass?: string, className?: string, selected: DropDownItem, list: Array<DropDownItem>, nameActivation?: boolean, onSelect?: Dispatch<DropDownItem>, onChange?: Function, loader?: boolean, childClass?: string, displayName?: string }) => {\n    const [isOpen, setOpen] = useState(false)\n    const liRef = useRef<HTMLLIElement>()\n    const [liHeight, setLiHeight] = useState(0)\n    const customRef = useModalSideExit(isOpen, setOpen)\n\n    useEffect(() => {\n        if (liRef.current && liHeight === 0) {\n            setLiHeight(liRef.current.offsetHeight)\n        }\n    })\n\n    return (\n        <div className={`relative ${parentClass} `}>\n            <div onClick={() => list?.length > 0 ? setOpen(!isOpen) : null} className={`flex ${className || ''} ${loader ? 'justify-center' : 'justify-between'} items-center border rounded-xl ${isOpen && 'rounded-b-none'} py-2 px-3 cursor-pointer`}>\n                {!loader ? <div className=\"truncate\">\n                    {Viewer({ name: selected.name, address: selected?.address ?? selected?.amount, coinUrl: selected?.coinUrl, className: selected?.className, disableAddressDisplay: disableAddressDisplay, displayName })}\n                </div> : <ClipLoader />}\n                {list && list.length > 0 && <div>\n                    <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n                </div>}\n            </div>\n            {isOpen && <div ref={customRef} className=\"absolute left-0 bottom-0 translate-y-full z-10 w-full overflow-hidden\">\n                <ul id=\"ala\" className=\"flex flex-col overflow-y-auto \" style={list.length > 5 ?\n                    { height: window.outerWidth > 768 ? `${liHeight * 5}px` : `${liHeight * 3}px` }\n                    :\n                    { height: 'auto' }\n                }>\n                    {list?.filter((w) => {\n                        if (!nameActivation) {\n                            return w?.address !== selected?.address\n                        } else if (w.name) {\n                            return w?.name !== selected?.name\n                        } else if (w.id) {\n                            return w?.id !== selected?.id\n                        }\n\n                    })?.map((w: DropDownItem, i) => {\n                        const obj: { ref?: any } = {}\n                        if (i === 0) {\n                            obj.ref = liRef\n                        }\n                        return <Li {...obj} key={generate()} className={childClass} onClick={() => {\n                            if (w.onClick) {\n                                w.onClick()\n                                setOpen(false)\n                                return\n                            }\n                            onSelect!(w);\n                            setOpen(false);\n                            onChange?.(w, selected);\n                        }}>\n                            {Viewer({ name: w?.name, address: w?.address ?? w?.amount, coinUrl: w?.coinUrl, className: w?.className, disableAddressDisplay })}\n                        </Li>\n                    }\n                    )}\n                </ul>\n            </div>}\n        </div>\n    )\n}\n\nexport default Dropdown;","import { Dispatch, useEffect, useState } from \"react\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { ClipLoader } from \"react-spinners\";\nimport { generate } from \"shortid\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport Dropdown from \"../dropdown\";\n\n\nconst Input = ({ index, name, address, selectedWallet, setWallet, setIndex, overallIndex, amount, uniqueArr, setRefreshPage, isBasedOnDollar, setAmount, amountState }: { index: number, name: Array<string>, address: Array<string>, selectedWallet: DropDownItem[], setWallet: Dispatch<DropDownItem[]>, setIndex: Dispatch<number>, overallIndex: number, amount: Array<string>, uniqueArr: string[], setRefreshPage: Dispatch<string>, isBasedOnDollar: boolean, setAmount: Dispatch<number[]>, amountState: number[] }) => {\n\n    const [anotherToken, setAnotherToken] = useState(false)\n\n    useEffect(() => {\n        if (!selectedWallet[index] && !selectedWallet[index + 1]) {\n            const v = Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0];\n            setWallet([...selectedWallet, v, v])\n        }\n\n    }, [])\n\n    return <>\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Name\" defaultValue={name[index]} type=\"text\" name={`name__${index}`} onChange={(e) => { name[index] = e.target.value; name[index + 1] = e.target.value }} /> {/* onBlur={(e) => setRefreshPage(generate())}*/}\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Address\" defaultValue={address[index]} type=\"text\" name={`address__${index}`} onChange={(e) => { address[index] = e.target.value; address[index + 1] = e.target.value }} required /> {/* onBlur={(e) => setRefreshPage(generate())}*/}\n        <div className={`col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid ${isBasedOnDollar ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={amount[index]} type=\"number\" name={`amount__${index}`} onChange={(e) => {\n                amount[index] = e.target.value; \n                const arr = [...amountState]\n                arr[index] = Number(e.target.value)\n                setAmount(arr)\n            }} required step={'any'} min={0} />\n            {isBasedOnDollar && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n        </div>\n        <div className=\"flex items-center\">\n            {overallIndex > 1 && <BsFillTrashFill className=\"text-red-500 cursor-pointer\" onClick={() => {\n                name.splice(index, 2);\n                address.splice(index, 2);\n                amount.splice(index, 2);\n                uniqueArr.splice(index, 2);\n                setWallet([...selectedWallet.filter((s, t) => t !== index && t !== index + 1)]);\n                setIndex(overallIndex - 1)\n                //setRefreshPage(generate())\n            }} />}\n        </div>\n        <div></div>\n        <div></div>\n        {anotherToken ? <div className={`col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid ${isBasedOnDollar ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={amount[index + 1]} type=\"number\" name={`amount__${index + 1}`} onChange={(e) => {\n                amount[index + 1] = e.target.value\n                const arr = [...amountState]\n                arr[index + 1] = Number(e.target.value)\n                setAmount(arr)\n\n            }} step={'any'} min={0} />\n            {isBasedOnDollar && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index + 1] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index + 1] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n        </div>\n            :\n            <div className=\"text-primary text-sm cursor-pointer\" onClick={() => setAnotherToken(true)}>\n                + Add another token\n            </div>\n        }\n        <div></div>\n\n        <div></div>\n        <div></div>\n        <div></div>\n        <div className=\"mt-5\"></div>\n    </>\n}\nexport default Input;","import { Dispatch, MutableRefObject, useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member } from \"../../types/sdk\";\nimport Dropdown from \"../dropdown\";\nimport { CoinsName } from \"../../types\";\n\n\nconst TeamInput = (props: Member & { index: number, selectedId: string[], generalWallet: DropDownItem, setGeneralWallet: Dispatch<DropDownItem>, setSelectedId: Dispatch<string[]>, members: Array<Member & { selected: boolean }>, setMembers: Dispatch<Array<Member & { selected: boolean }>> }) => {\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: Coins[props.currency].name, type: Coins[props.currency].value, value: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl })\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>()\n\n    useEffect(() => {\n        if (props.secondaryCurrency) {\n            setSelectedWallet2({ name: Coins[props.secondaryCurrency].name, type: Coins[props.secondaryCurrency].value, value: Coins[props.secondaryCurrency].value, coinUrl: Coins[props.secondaryCurrency].coinUrl })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (selectedWallet && selectedWallet.value) {\n            updateValue({ val: '', wallet: true })\n        }\n    }, [selectedWallet])\n\n    useEffect(() => {\n        if (selectedWallet2 && selectedWallet2.value) {\n            updateValue({ val: '', wallet: true, is2: true })\n        }\n    }, [selectedWallet2])\n\n    const updateValue = ({ val, wallet = false, is2 = false, customWallet }: { val: string, wallet?: boolean, is2?: boolean, customWallet?: CoinsName }) => {\n        const arr = [...props.members]\n        const newArr = arr.reduce<Array<Member & { selected: boolean }>>((a, e) => {\n            if (e.id !== props.id) a.push(e)\n            else {\n                let newItem;\n                if (wallet && is2) {\n                    if (customWallet) {\n                        newItem = { ...e, secondaryCurrency: customWallet }\n                    } else {\n                        newItem = { ...e, secondaryCurrency: selectedWallet2!.value! }\n                    }\n                }\n                else if (!wallet && is2) {\n                    newItem = { ...e, secondaryAmount: val }\n                }\n                else if (wallet) {\n                    if (customWallet) {\n                        newItem = { ...e, currency: customWallet }\n                    } else {\n                        newItem = { ...e, currency: selectedWallet.value! }\n                    }\n                } else {\n                    newItem = { ...e, amount: val }\n                }\n                a.push(newItem)\n            }\n            return a;\n        }, [])\n        props.setMembers(newArr)\n    }\n\n    const updateTick = ({ tick }: { tick: boolean }) => {\n        if (!tick) {\n            props.setSelectedId(props.selectedId.filter(w => w !== props.id))\n        } else {\n            props.setSelectedId([...props.selectedId, props.id])\n        }\n    }\n\n    return <>\n        <div className=\"flex items-center\">\n            <input checked={props.selectedId.some(w => w === props.id)} className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" type=\"checkbox\" onChange={(e) => {\n                updateTick({ tick: e.target.checked })\n            }} />\n            <h2 className={`text-black px-3 py-1 name__${props.index} text-sm`}>{props.name}</h2>\n        </div>\n        <div className=\"flex items-center\">\n            <h2 className={`text-black py-1 rounded-md address__${props.index} text-sm truncate`}>{props.address}</h2>\n        </div>\n        {/* <div className=\"col-span-2 sm:col-span-1 flex border border-greylish rounded-md border-opacity-60\">\n            <input className=\"text-black py-1 outline-none ml-2 rounded-md w-full font-bold unvisibleArrow\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} min=\"0\" required step={'any'} onBlur={d => props.setSelectedId([...props.selectedId])} onChange={e => updateValue({ val: e.target.value })} />\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div> */}\n        <div className={`col-span-2 sm:col-span-1 border text-black py-1 rounded-md grid ${props.usdBase ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} onChange={(e) => {\n                updateValue({ val: e.target.value })\n            }} required step={'any'} min={0} />\n            {props.usdBase && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div>\n        <div className=\"hidden sm:block\"></div>\n        <div></div>\n        <div></div>\n        {props.secondaryCurrency && selectedWallet2 ? <div className={`col-span-2 sm:col-span-1 border text-black py-1 rounded-md grid ${props.usdBase ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={props?.secondaryAmount} type=\"number\" name={`amount__${props.index}`} onChange={(e) => {\n                updateValue({ val: e.target.value, wallet: false, is2: true })\n            }}  step={'any'} min={0} />\n            {props.usdBase && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div> : <div className=\"text-primary cursor-pointer text-sm\" onClick={() => {\n            setSelectedWallet2({ name: Coins[CoinsName.CELO].name, type: Coins[CoinsName.CELO].value, value: Coins[CoinsName.CELO].value, coinUrl: Coins[CoinsName.CELO].coinUrl })\n            updateValue({ val: '', wallet: true, is2: true, customWallet: CoinsName.CELO })\n        }}>+ Add another token</div>}\n        <div></div>\n    </>\n}\nexport default TeamInput;","import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport { AltCoins, Coins, CoinsName, CoinsURL } from \"../../../types/coins\";\nimport { DropDownItem } from \"../../../types/dropdown\";\nimport Dropdown from \"../../dropdown\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\"\nimport { changeSuccess, changeError, selectError } from '../../../redux/reducers/notificationSlice'\nimport { useLazyGetTeamsQuery } from \"../../../redux/api/team\";\nimport { useAddMemberMutation } from \"../../../redux/api/teamMember\";\nimport Error from \"../../error\";\nimport { AddMember, Interval } from \"../../../types/sdk\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AddMemberModal = ({ onDisable }: { onDisable: React.Dispatch<boolean> }) => {\n\n    const isError = useAppSelector(selectError)\n\n    const [triggerTeams, { data, isLoading }] = useLazyGetTeamsQuery()\n    const [addMember, { isLoading: addMemberLoading }] = useAddMemberMutation();\n\n    const [secondActive, setSecondActive] = useState(false)\n\n    const [startDate, setStartDate] = useState<Date>(new Date());\n\n    const [selected, setSelected] = useState<DropDownItem>({ name: \"No Team\", coinUrl: CoinsURL.None })\n    const [selectedFrequency, setSelectedFrequency] = useState<DropDownItem>({ name: \"Monthly\", type: Interval.monthly })\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>(Coins[CoinsName.CELO]);\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>(Coins[CoinsName.CELO]);\n\n    const [selectedType, setSelectedType] = useState(false)\n\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        triggerTeams({ take: Number.MAX_SAFE_INTEGER })\n    }, [])\n\n    useEffect(() => {\n        if (!data || (data && data.teams.length === 0)) {\n            setSelected({ name: \"No Team\", coinUrl: CoinsURL.None })\n        }\n    })\n\n    useEffect(() => {\n        if (data && data.teams && data.teams.length > 0) {\n            setSelected({ name: \"Select Team\", coinUrl: CoinsURL.None })\n        }\n    }, [data])\n\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const target = e.target as HTMLFormElement;\n\n        const { firstName, lastName, teamName, walletAddress, amount, amount2 } = target;\n        const firstNameValue = (firstName as HTMLInputElement).value\n        const lastNameValue = (lastName as HTMLInputElement).value\n        // const teamNameValue = (teamName as HTMLInputElement)?.value\n        const walletAddressValue = (walletAddress as HTMLInputElement).value\n        const amountValue = (amount as HTMLInputElement).value\n        const amountValue2 = (amount2 as HTMLInputElement)?.value\n        console.log(amountValue2, amount2)\n\n        if (firstNameValue && lastNameValue && walletAddressValue && amountValue) {\n            if (!Object.values(Coins).includes(selectedWallet as AltCoins)) {\n                alert(\"Please, choose a wallet\")\n                return\n            }\n            if (selected === { name: \"Select Team\", coinUrl: CoinsURL.None }) {\n                alert(\"Please, choose a team\")\n                return\n            }\n\n            if (selectedWallet.value && selected.id) {\n\n                try {\n\n                    let sent: AddMember = {\n                        name: `${firstNameValue} ${lastNameValue}`,\n                        address: walletAddressValue.trim(),\n                        currency: selectedWallet.value,\n                        amount: amountValue.trim(),\n                        teamId: selected.id,\n                        usdBase: selectedType,\n\n                        interval: selectedFrequency!.type as Interval,\n                        paymantDate: startDate!.toISOString(),\n                    }\n\n                    if (amountValue2 && selectedWallet2.value) {\n                        sent = {\n                            ...sent,\n                            secondaryAmount: amountValue2.trim(),\n                            secondaryCurrency: selectedWallet2.value,\n                            secondaryUsdBase: selectedType,\n                        }\n                    }\n\n                    await addMember(sent).unwrap()\n\n                    dispatch(changeSuccess(true))\n                    onDisable(false)\n                } catch (error: any) {\n                    console.error(error)\n                    dispatch(changeError({ activate: true, text: error?.data?.message }))\n                }\n            }\n        }\n    }\n\n    return <>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col space-y-8\">\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Personal Details</div>\n                    <div className=\"grid grid-cols-2 gap-x-10\">\n                        <div>\n                            <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" className=\"border-2 pl-2 rounded-md outline-none h-[42px] w-full\" required />\n                        </div>\n                        <div>\n                            <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"border-2 pl-2 rounded-md outline-none h-[42px] w-full\" required />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Choose Team</div>\n                    <div className=\"grid grid-cols-2 w-[85%] gap-x-10\">\n                        <div>\n                            <Dropdown onSelect={setSelected} loader={isLoading} selected={selected} list={data?.teams && data.teams.length > 0 ? [...data.teams.map(w => { return { name: w.title, coinUrl: CoinsURL.None, id: w.id } })] : []} nameActivation={true} className=\"border-2 rounded-md\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Wallet Address</div>\n                    <div>\n                        <input type=\"text\" name=\"walletAddress\" className=\"h-[42px] w-full rounded-lg border-2 pl-2 outline-none\" placeholder=\"Wallet Address\" required />\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"flex space-x-24\">\n                        <div className=\"flex space-x-2 items-center\">\n                            <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                            <label className=\"font-semibold text-sm\">\n                                Token Amounts\n                            </label>\n                        </div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                            <label className=\"font-semibold text-sm\">\n                                USD-based Amounts\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4 w-2/3\">\n                    <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                        <input type=\"number\" name=\"amount\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                        {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                        {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins)} />}\n\n                    </div>\n                </div>\n                {secondActive ?\n                    <div className=\"flex flex-col space-y-4 w-2/3\">\n                        <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                            <input type=\"number\" name=\"amount2\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                            {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins)} />}\n\n                        </div>\n                    </div> : <div className=\"text-primary cursor-pointer\" onClick={() => setSecondActive(true)}>+ Add another token</div>}\n                <div className=\"flex flex-col space-y-4 w-1/2\">\n                    <div className=\"font-bold\">Payment Frequency</div>\n                    <div>\n                        <Dropdown onSelect={setSelectedFrequency} loader={isLoading} selected={selectedFrequency} list={[{ name: \"Monthly\", type: Interval.monthly }, { name: \"Weekly\", type: Interval.weakly }]} nameActivation={true} className=\"border-2 rounded-md\" />\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4 w-1/2\">\n                    <div className=\"font-bold\">Payment Date</div>\n                    <div className=\"border-2 p-2 rounded-md\">\n                        <DatePicker selected={startDate} minDate={new Date()} onChange={(date) => date ? setStartDate(date) : null} />\n                    </div>\n                </div>\n                {/* {isError && <Error onClose={(val)=>dispatch(changeError({activate: val, text: ''}))} />} */}\n                <div className=\"flex justify-center\">\n                    <button className=\"px-8 py-3 bg-primary rounded-xl text-white\">\n                        {addMemberLoading ? <ClipLoader /> : \"Add Person\"}\n                    </button>\n                </div>\n            </div>\n        </form>\n    </>\n}\n\nexport default AddMemberModal;","import { useRef } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport { useAppDispatch } from \"../../../redux/hooks\"\nimport { changeSuccess } from '../../../redux/reducers/notificationSlice'\nimport { useCreateTeamMutation } from \"../../../redux/api\";\n\nconst AddTeams = ({ onDisable }: { onDisable: React.Dispatch<boolean>}) => {\n\n    const [createTeam, { error, isLoading }] = useCreateTeamMutation()\n\n    const teamName = useRef<HTMLInputElement>(null)\n    const dispatch = useAppDispatch()\n\n    const create = async () => {\n        if (teamName.current && teamName.current.value.trim()) {\n            try {\n                await createTeam({ title: teamName.current.value.trim() }).unwrap();\n\n                dispatch(changeSuccess(true))\n                onDisable(false)\n            } catch (error) {\n                console.error(error)\n            }\n        }\n    }\n\n    return <div className=\"flex flex-col justify-center space-y-10\">\n        <div className=\"grid grid-cols-2 items-center\">\n            <div>Team Name</div>\n            <div>\n                <input ref={teamName} type=\"text\" className=\"border pl-3 w-full rounded-xl h-10 outline-none\" />\n            </div>\n            {error && <div className=\"text-red-600\"> Something went wrong</div>}\n        </div>\n        {/* <div className=\"grid grid-cols-2 items-center\">\n            <div>Currency to be used</div>\n            <div>\n                <Dropdown onSelect={setSelectedCoin} price={true} selected={selectedCoin} list={[{ name: \"Celo\", coinUrl: CoinsURL.CELO }, { name: \"cUSD\", coinUrl: CoinsURL.cUSD }]} />\n            </div>\n        </div> */}\n        <div className=\"flex justify-center\">\n            <button onClick={create} className=\"px-14 py-2 text-white rounded-xl bg-primary font-light\" disabled={isLoading}>\n                {isLoading ? <ClipLoader /> : \"Add Team\"}\n            </button>\n        </div>\n\n    </div>\n}\n\nexport default AddTeams;","import { Dispatch, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport { changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\n\nconst Delete = ({ name, onCurrentModal, onDelete, onSuccess }: { name: string, onCurrentModal: Dispatch<boolean>, onDelete: () => Promise<void>, onSuccess?: Dispatch<boolean> }) => {\n    const [loading, setLoading] = useState(false)\n    const dispatch = useAppDispatch()\n    return <div className=\"flex flex-col space-y-6\">\n        <div className=\"flex items-center justify-center text-xl\">\n            Delete {name}?\n        </div>\n        <div className=\"flex justify-center items-center space-x-4\">\n            <button className=\"border-2 border-red-500 text-red-500 w-[80px] rounded-xl h-[27px]\" onClick={() => onCurrentModal(false)}>Close</button>\n            <button className=\"border-2 bg-red-500 border-red-500 text-white w-[80px] rounded-xl h-[27px]\" onClick={async () => {\n                setLoading(true);\n                try {\n                    await onDelete()\n                    //onSuccess(true)\n                    dispatch(changeSuccess(true))\n                    onCurrentModal(false)\n                } catch (error) {\n                    console.error(error)\n                }\n                setLoading(false)\n            }}>{loading ? <ClipLoader size={20} /> : 'Delete'}</button>\n        </div>\n    </div>\n}\n\nexport default Delete;","import { Dispatch, SyntheticEvent, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useLazyGetMemberQuery, useLazyGetTeamsQuery, useUpdateMemberMutation } from \"../../../redux/api\";\nimport { changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { Coins, CoinsURL } from \"../../../types/coins\";\nimport { DropDownItem } from \"../../../types/dropdown\";\nimport { Interval, Member } from \"../../../types/sdk\";\nimport Dropdown from \"../../dropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst EditMember = (props: Member & { onCurrentModal: Dispatch<boolean> }) => {\n    const dispatch = useDispatch()\n\n    const [triggerTeam, { data, isLoading }] = useLazyGetTeamsQuery()\n\n    const [getMembers, { data: member, isLoading: memberLoading, isFetching }] = useLazyGetMemberQuery()\n\n    const [updateMember, { isLoading: updateLoading }] = useUpdateMemberMutation()\n\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem>({ name: \"No Team\", coinUrl: CoinsURL.None })\n    const [secondActive, setSecondActive] = useState(false)\n\n    const [startDate, setStartDate] = useState<Date>(new Date());\n\n\n    const [selectedFrequency, setSelectedFrequency] = useState<DropDownItem>({ name: \"Monthly\", type: Interval.monthly })\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: Coins[props.currency].name, type: Coins[props.currency].value, value: Coins[props.currency].value, id: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl });\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>();\n\n    const [selectedType, setSelectedType] = useState(props.usdBase)\n    useEffect(() => {\n        triggerTeam({ take: Number.MAX_SAFE_INTEGER })\n        getMembers(props.id)\n        setSecondActive(!(!props.secondaryAmount))\n        if (props.interval) {\n            setSelectedFrequency(props.interval === Interval.monthly ? { name: \"Monthly\", type: Interval.monthly } : { name: \"Weekly\", type: Interval.weakly })\n        }\n        if (props.paymantDate) {\n            setStartDate(new Date(props.paymantDate))\n        }\n        if (props.secondaryCurrency) {\n            setSelectedWallet2({ name: Coins[props.secondaryCurrency].name, type: Coins[props.secondaryCurrency].value, value: Coins[props.secondaryCurrency].value, id: Coins[props.secondaryCurrency].value, coinUrl: Coins[props.secondaryCurrency].coinUrl })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (member && data) {\n            setSelectedTeam({ name: data.teams.find(w => w.id === member.member.teamId)!.title, coinUrl: CoinsURL.None, id: member.member.teamId })\n        }\n    }, [member, data])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const { memberName, amount, address, amount2 } = e.target as HTMLFormElement;\n\n        if (memberName && amount && address && selectedWallet && selectedTeam) {\n            if (!selectedWallet.value) {\n                alert(\"Please, choose a Celo wallet\")\n                return\n            }\n            if (!selectedTeam.id) {\n                alert(\"Please, choose a team\")\n                return\n            }\n            const memberNameValue = (memberName as HTMLInputElement).value\n            const amountValue = (amount as HTMLInputElement).value\n            const addressValue = (address as HTMLInputElement).value\n            const amountValue2 = (amount2 as HTMLInputElement)?.value\n\n            let member: Member = {\n                id: props.id,\n                name: memberNameValue,\n                address: addressValue,\n                amount: amountValue,\n                currency: selectedWallet.value,\n                teamId: selectedTeam.id,\n                usdBase: selectedType,\n\n                interval: selectedFrequency!.type as Interval,\n                paymantDate: startDate!.toISOString(),\n            }\n\n            if (amountValue2 && selectedWallet2 && selectedWallet2.value) {\n                member = {\n                    ...member,\n                    secondaryAmount: amountValue2.trim(),\n                    secondaryCurrency: selectedWallet2.value,\n                    secondaryUsdBase: selectedType,\n                }\n            }\n\n            try {\n                await updateMember(member).unwrap()\n                dispatch(changeSuccess(true))\n            } catch (error) {\n                console.error(error)\n            }\n\n        }\n    }\n\n    return <>\n        <div>\n            {!memberLoading && !isFetching && member ? <form onSubmit={Submit}>\n                <div className=\"text-xl font-bold pb-3\">\n                    Personal Details\n                </div>\n                <div className=\"grid grid-cols-2 gap-y-10\">\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Name</div>\n                        <div className=\"flex space-x-2 items-center w-3/4\">\n                            <input name=\"memberName\" type=\"text\" defaultValue={member.member!.name} className=\"w-full border-2 border-black border-opacity-50 outline-none rounded-md px-3 py-2\" required />\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Team</div>\n                        <div>\n                            <div className=\"flex space-x-2 items-center w-3/4\">\n                                <Dropdown onSelect={setSelectedTeam} parentClass=\"w-full\" loader={isLoading} selected={selectedTeam} list={data?.teams && data.teams.length > 0 ? [...data.teams.map(w => { return { name: w.title, coinUrl: CoinsURL.None, id: w.id } })] : []} nameActivation={true} className=\"border-2 rounded-md w-full\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3 col-span-2\">\n                        <div className=\"font-bold\">Wallet Address</div>\n                        <div className=\"flex space-x-2 items-center w-full\">\n                            <input name=\"address\" type=\"text\" defaultValue={member.member!.address} className=\"w-full  border border-black border-opacity-50 outline-none rounded-md px-3 py-2\" required />\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 flex flex-col space-y-4\">\n                        <div className=\"flex space-x-24\">\n                            <div className=\"flex space-x-2 items-center\">\n                                <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                                <label className=\"font-semibold text-sm\">\n                                    Token Amounts\n                                </label>\n                            </div>\n                            <div className=\"flex space-x-2 items-center\">\n                                <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                                <label className=\"font-semibold text-sm\">\n                                    USD-based Amounts\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 flex flex-col space-y-4 w-2/3\">\n                        <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                            <input type=\"number\" defaultValue={member.member!.amount} name=\"amount\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                            {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins)} />}\n\n                        </div>\n                    </div>\n                    {secondActive && selectedWallet2 ?\n                        <div className=\"col-span-2 flex flex-col space-y-4 w-2/3\">\n                            <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                                <input type=\"number\" defaultValue={member.member!.secondaryAmount} name=\"amount2\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                                {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                                {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins)} />}\n\n                            </div>\n                        </div> : <div className=\"text-primary cursor-pointer\" onClick={() => setSecondActive(true)}>+ Add another token</div>}\n                    <div className=\"col-span-2 flex flex-col space-y-4 w-1/2\">\n                        <div className=\"font-bold\">Payment Frequency</div>\n                        <div>\n                            <Dropdown onSelect={setSelectedFrequency} loader={isLoading} selected={selectedFrequency} list={[{ name: \"Monthly\", type: Interval.monthly }, { name: \"Weekly\", type: Interval.weakly }]} nameActivation={true} className=\"border-2 rounded-md\" />\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 flex flex-col space-y-4 w-1/2\">\n                        <div className=\"font-bold\">Payment Date</div>\n                        <div className=\"border-2 p-2 rounded-md\">\n                            <DatePicker selected={startDate} minDate={new Date()} onChange={(date) => date ? setStartDate(date) : null} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex justify-center items-center pt-10\">\n                    <div className=\"flex justify-center\">\n                        <div>\n                            <button className=\"bg-primary w-full rounded-md text-white px-6 py-3\">\n                                {updateLoading ? <ClipLoader /> : \"Save\"}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n                : <div className=\"flex justify-center\"> <ClipLoader /></div>}\n        </div>\n    </>\n}\n\nexport default EditMember;","import { Dispatch, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useUpdateTeamMutation } from \"../../../redux/api\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { TeamInfoWithMembers } from \"../../../types/sdk\";\n\n\nconst EditTeam = (props: TeamInfoWithMembers & { onCurrentModal: Dispatch<boolean> }) => {\n\n    const [updateTeam, { isLoading }] = useUpdateTeamMutation()\n    const [input, setInput] = useState<string>('')\n    const dispatch = useAppDispatch()\n\n\n    return <div className=\"grid grid-rows-[25%,25%,50%] grid-cols-[80%] items-center justify-center h-[200px]\">\n        <div className=\"text-center self-end font-light\">\n            Team Name\n        </div>\n        <div className=\"place-self-center\">\n            <input type=\"text\" defaultValue={props.title} onChange={(e) => setInput(e.target.value)} className=\"text-center px-3 rounded-md py-2 outline-none border-2 border-black border-opacity-50\" required />\n        </div>\n        <div className=\"grid grid-cols-2 self-end gap-x-5\">\n            <button className=\"w-full py-3 border border-primary rounded-xl text-primary\" onClick={() =>{\n                props.onCurrentModal(false)\n            }}>\n                Close\n            </button>\n            <button className=\"w-full px-4 py-3 bg-primary text-white rounded-xl\" onClick={async (e) => {\n                try {\n                    await updateTeam({ id: props.id, body: { title: input } }).unwrap()\n                    dispatch(changeSuccess(true))\n                    props.onCurrentModal(false)\n                } catch (error: any) {\n                    console.error(error)\n                    dispatch(changeError({activate: true, text: error?.data?.message}))\n                }\n            }}>\n                {isLoading ? <ClipLoader /> : 'Save'}\n            </button>\n        </div>\n    </div>\n}\n\nexport default EditTeam;","\nconst Avatar = ({ name, className }: { name: string, className?: string}) => {\n\n    return <div className={`${className} w-[28px] h-[28px] font-[18px] flex items-center justify-center rounded-full bg-greylish bg-opacity-20`}>\n        {name.slice(0, 2)}\n    </div>\n}\n\nexport default Avatar;","import { Dispatch } from \"react\";\nimport { Coins } from \"../../../types/coins\";\nimport { Member } from \"../../../types/sdk\";\nimport Avatar from '../../avatar'\n\nconst Profile = (props: Member & { teamName: string, onDeleteModal: Dispatch<boolean>, onCurrentModal: Dispatch<boolean>, onEditModal: Dispatch<boolean> }) => {\n\n    return <>\n        <div>\n            <div className=\"text-xl font-bold pb-3\">\n                Personal Details\n            </div>\n            <div className=\"grid grid-cols-2 gap-y-10\">\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Name</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <Avatar name={props.name} />\n                            <div>\n                                {props.name}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Team</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.teamName}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Pay Amount</div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.amount}\n                            </div>\n                            <div>\n                                <img width=\"20\" height=\"20\" src={Coins[props.currency].coinUrl} alt=\"\" className=\"rounded-full\" />\n                            </div>\n                        </div>\n                        {props.secondaryCurrency && <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.secondaryAmount}\n                            </div>\n                            <div>\n                                <img width=\"20\" height=\"20\" src={Coins[props.secondaryCurrency].coinUrl} alt=\"\" className=\"rounded-full\" />\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Wallet Address</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div className=\"text-xs\">\n                                {props.address}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-center items-center pt-10\">\n                <div className=\"grid grid-cols-2 gap-y-3 gap-x-5 justify-center\">\n                    <div className=\"col-span-2\">\n                        <button className=\"bg-primary px-6 py-3 rounded-xl text-white w-full\">\n                            Pay Now\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"bg-primary w-full rounded-xl text-white px-6 py-3\" onClick={() => {\n                            props.onEditModal(true)\n                            props.onCurrentModal(false)\n                        }}>\n                            Edit\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"text-primary border border-primary w-full rounded-xl px-6 py-3\" onClick={() => {\n                            props.onDeleteModal(true)\n                            props.onCurrentModal(false)\n                        }}>\n                            Delete\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Profile;","import React, { useEffect } from \"react\";\n\n\nconst Modal = ({ children, onDisable, title, className, disableX = false }: { children?: JSX.Element | JSX.Element[], onDisable: React.Dispatch<React.SetStateAction<boolean>>, title?: string, className?: string, disableX?: boolean }) => {\n    useEffect(() => {\n        document.querySelector('body')!.style.overflowY = \"hidden\"\n        return () => {\n            document.querySelector('body')!.style.overflowY = \"\"\n        }\n    }, [])\n    return <>\n        <div className=\"w-full h-full !my-0 bg-white bg-opacity-60 absolute left-0 top-0 z-40\" onClick={() => onDisable(false)} style={{\n            top: `${window.scrollY}px`,\n        }}>\n        </div>\n        <div className={`absolute ${className} overflow-scroll max-h-[75vh]  left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white w-[90%] sm:w-[60%] lg:w-auto lg:min-w-[33%] shadow-custom rounded-xl z-50`} style={{ top: `${window.scrollY + (window.innerHeight / 2)}px` }}>\n            <div className=\"relative px-5 py-10\">\n                {children}\n                {!(!title) && <div className=\"absolute right-full top-2 font-bold translate-x-[105%] w-1/2\">\n                    {title}\n                </div>}\n                {!disableX && <button onClick={() => onDisable(false)} className=\"absolute left-full top-0 translate-x-[-200%] translate-y-[25%] text-greylish opacity-45\">\n                    X\n                </button>}\n            </div>\n        </div>\n    </>\n}\n\nexport default Modal;","import { useState } from \"react\";\nimport { Coins } from \"../../types/coins\";\nimport Modal from \"../modal\";\nimport Profile from '../../components/teams/buttons/profile'\nimport EditMember from '../../components/teams/buttons/editMember'\nimport Avatar from \"../avatar\";\nimport Delete from './buttons/delete'\nimport { useDeleteMemberMutation } from \"../../redux/api/teamMember\";\nimport { Member } from \"../../types/sdk\";\n\nconst TeamItem = (props: Member & { teamName: string }) => {\n    const [deleteMember] = useDeleteMemberMutation()\n    const [modalVisible, setModalVisible] = useState(false)\n    const [modalEditVisible, setModalEditVisible] = useState(false)\n    const [deleteModal, setDeleteModal] = useState(false)\n\n    const onDelete = async () => {\n        try {\n            await deleteMember(props.id).unwrap()\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return <>\n        <div className=\"pl-[2px] items-start\">\n            <div className=\"hover:cursor-pointer flex items-center space-x-1\" onClick={() => setModalVisible(true)}>\n                <Avatar name={props.name} />\n                <div>\n                    {props.name}\n                </div>\n            </div>\n        </div>\n        <div className=\"pl-[2px] hidden sm:flex items-start\">\n            {props.teamName}\n        </div>\n        <div className=\"flex flex-col space-y-4\">\n            <div className=\" pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.amount}</div>\n                {props.usdBase ? <div>USD as {Coins[props.currency].name}</div> :\n                    <div>\n                        {Coins[props.currency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.currency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>\n            {props.secondaryCurrency && <div className=\"pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.secondaryAmount}</div>\n                {props.secondaryUsdBase ? <div>USD as {Coins[props.secondaryCurrency].name}</div> :\n                    <div>\n                        {Coins[props.secondaryCurrency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.secondaryCurrency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>}\n        </div>\n        <div className=\"col-span-2 sm:col-span-1 pt-3 sm:pt-0 pl-[2px] self-start truncate\">\n            {props.address}\n        </div>\n        {modalVisible && <Modal onDisable={setModalVisible}>\n            <Profile {...props} onDeleteModal={setDeleteModal} onCurrentModal={setModalVisible} onEditModal={setModalEditVisible} />\n        </Modal>}\n        {modalEditVisible && <Modal onDisable={setModalEditVisible}>\n            <EditMember {...props} onCurrentModal={setModalVisible} />\n        </Modal>}\n        {deleteModal && <Modal onDisable={setDeleteModal}>\n            <Delete name={props.name} onCurrentModal={setDeleteModal} onDelete={onDelete} />\n        </Modal>}\n\n    </>\n}\n\nexport default TeamItem;","import { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport { useDeleteTeamMutation, useUpdateTeamMutation } from \"../../redux/api\";\nimport { TeamInfoWithMembers } from \"../../types/sdk\";\nimport Modal from \"../modal\";\nimport Delete from \"./buttons/delete\";\nimport EditTeam from './buttons/editTeam'\nimport TeamItem from \"./teamItem\";\n\n\nconst TeamContainer = (props: TeamInfoWithMembers) => {\n    const [deleteModal, setDeleteModal] = useState(false)\n    const [deleteTeam] = useDeleteTeamMutation()\n\n    const [editModal, setEditModal] = useState(false)\n\n    const [num, setNum] = useState(3)\n\n    const DeleteTeam = async () => {\n        try {\n            await deleteTeam(props.id).unwrap()\n            setDeleteModal(false)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return <>\n        <div className=\"col-span-4 flex space-x-3 py-4 pt-4 sm:pt-14 pb-1 px-5 items-center justify-between\">\n            <div className=\"font-semibold text-[1.5rem] overflow-hidden whitespace-nowrap\">\n                <div>{props.title}</div>\n            </div>\n            <div className=\"flex space-x-3\">\n                <div className=\"cursor-pointer\" onClick={() => setEditModal(true)}>\n                    <img src=\"/icons/editicon.svg\" alt=\"\" />\n                </div>\n                <div className=\"cursor-pointer\" onClick={() => setDeleteModal(true)}>\n                    <img src=\"/icons/trashicon.svg\" alt=\"\" />\n                </div>\n            </div>\n        </div>\n        {props.members && props.members.slice(0, num).map(w =>\n            <div key={generate()} className=\"grid grid-cols-2 sm:grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] py-6 border-b border-black pb-5 px-5 text-sm\">\n                <TeamItem teamName={props.title} {...w} />\n            </div>\n        )}\n        {props.members && props.members.length > 3 && num !== 100 ? <button className=\"py-3 pb-5 px-5 font-bold text-primary\" onClick={() => setNum(100)}>\n            Show More\n        </button> : null}\n        {!props.members ? <div className=\"b-5 px-5 border-b border-black pb-5\">No Team Member Yet</div> : undefined}\n        {deleteModal && <Modal onDisable={setDeleteModal}>\n            <Delete name={props.title} onCurrentModal={setDeleteModal} onDelete={DeleteTeam} />\n        </Modal>}\n        {editModal && <Modal onDisable={setEditModal}>\n            <EditTeam {...props} onCurrentModal={setEditModal} />\n        </Modal>}\n    </>\n}\n\nexport default TeamContainer;","import { createSlice } from '@reduxjs/toolkit';\nimport { NonExecTransactionItem } from '../../types/sdk';\nimport { RootState } from '../store';\n\ninterface State {\n    transactions: NonExecTransactionItem[] | undefined;\n}\n\nconst initialState: State = {\n    transactions: []\n};\n\nexport const multisigSlice = createSlice({\n    name: 'multisig',\n    initialState: initialState,\n    reducers: {\n        setTransactions: (state, action) => {\n            if(action.payload !== undefined || action.payload !== []){\n                if(state.transactions) state.transactions = [...state.transactions, ...action.payload];\n                else state.transactions = [...action.payload];\n            }else state.transactions = action.payload\n        }\n    }\n});\n\nexport const { setTransactions } = multisigSlice.actions;\n\nexport const selectMultisigTransactions = (state: RootState) => state.multisig.transactions;\n\nexport default multisigSlice.reducer;\n","import { useCallback, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport removeOwner from \"../components/settings/owner/removeOwner\"\nimport { useAddOwnerMutation, useReplaceOwnerMutation, useLazyGetOwnersQuery, useLazyGetRequiredSignaturesQuery, useChangeRequiredSignaturesMutation, useChnageInternalRequiredSignaturesMutation, useRemoveOwnerMutation, useLazyGetNotExecutedTransactionsQuery, useLazyGetAllTransactionsQuery, useLazyGetTransactionsByPaginationQuery } from \"../redux/api\"\nimport { selectMultisigTransactions, setTransactions } from \"../redux/reducers/multisig\"\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount'\nimport { selectStorage } from \"../redux/reducers/storage\"\n\nconst useMultisig = () => {\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const storage = useSelector(selectStorage)\n    const multiSlice = useSelector(selectMultisigTransactions)\n    const [addingOwner, { isLoading: isAddOwnerLoading }] = useAddOwnerMutation()\n    const [replacingOwner, { isLoading: isReplaceOwnerLoading }] = useReplaceOwnerMutation()\n    const [changeSign, { isLoading: isChangeSignLoading }] = useChangeRequiredSignaturesMutation()\n    const [changeInternalSign, { isLoading: isChangeInternalLoading }] = useChnageInternalRequiredSignaturesMutation()\n    const [removingOwner, { isLoading: isRemoveLoading }] = useRemoveOwnerMutation()\n\n    const [fetch, { data, isFetching, isLoading }] = useLazyGetOwnersQuery()\n    const [signFethch, { data: signData,  }] = useLazyGetRequiredSignaturesQuery()\n\n    const [isMultisig, setIsMultisig] = useState(false)\n\n    //const [multiNonExecutedFetch, { data: multiData }] = useLazyGetNotExecutedTransactionsQuery();\n    //const [multiNonExecutedFetch, { data: multiData }] = useLazyGetAllTransactionsQuery();\n    const [multiNonExecutedFetch, { data: multiData, isLoading: transactionLoading, isFetching: transactionFetching }] = useLazyGetTransactionsByPaginationQuery();\n    const dispatch = useDispatch()\n\n    const fetchTxs = useCallback((disabledTransactionDispatch = false, skip = 0, take = 10) => {\n        if (!disabledTransactionDispatch) dispatch(setTransactions([]))\n        multiNonExecutedFetch({ address: selectedAccount, skip, take })\n    }, [isMultisig, selectedAccount])\n\n    useEffect(() => {\n        if (multiData && multiData.transactionArray) {\n            if(multiData.transactionArray.length === 0){\n                dispatch(setTransactions(undefined))\n            }else if(!multiSlice?.some(s=>s.id === multiData.transactionArray[multiData.transactionArray.length-1]?.id)){\n                dispatch(setTransactions(multiData.transactionArray))\n            }\n        }\n    }, [multiData])\n\n    useEffect(() => {\n        let interval: any;\n        if (selectedAccount.toLowerCase() !== storage!.accountAddress.toLowerCase()) {\n            fetchTxs()\n            setIsMultisig(true)\n            fetch({ address: selectedAccount })\n            signFethch({ address: selectedAccount })\n\n        } else {\n            setIsMultisig(false)\n        }\n\n        if (interval) {\n            return () => clearInterval(interval)\n        }\n\n    }, [selectedAccount])\n\n    const refetch = (disabledTransactionDispatch = false, skip = 0, take = 10) => {\n        fetchTxs(disabledTransactionDispatch, skip, take)\n        fetch({ address: selectedAccount })\n        signFethch({ address: selectedAccount })\n    }\n\n    const removeOwner = useCallback(async (ownerAddress) => {\n        if (isMultisig) {\n            await removingOwner({\n                multisigAddress: selectedAccount.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                ownerAddress: ownerAddress.toString()\n            }).unwrap()\n        }\n    }, [isMultisig])\n\n    const changeSigns = useCallback(async (sign: number, internalSign: number) => {\n        if (isMultisig) {\n            await changeSign({\n                multisigAddress: selectedAccount.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                requirement: sign.toString()\n            }).unwrap()\n\n            await changeInternalSign({\n                multisigAddress: selectedAccount.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                requirement: internalSign.toString()\n            }).unwrap()\n\n        }\n    }, [isMultisig])\n\n    const addOwner = useCallback(async (newOwner) => {\n        if (isMultisig) {\n            const res = await addingOwner({\n                multisigAddress: selectedAccount.toLowerCase(),\n                ownerAddress: newOwner.toLowerCase(),\n                phrase: storage!.encryptedPhrase\n            }).unwrap()\n\n            return res;\n        }\n    }, [isMultisig])\n\n    const replaceOwner = useCallback(async (oldOwner, newOwner) => {\n        if (isMultisig) {\n            const res = await replacingOwner({\n                multisigAddress: selectedAccount.toLowerCase(),\n                ownerAddress: oldOwner.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                newOwnerAddress: newOwner.toLowerCase()\n            }).unwrap()\n\n            return res\n        }\n    }, [isMultisig])\n\n\n    if (isMultisig) {\n        return { data, isMultisig, signData, fetchTxs, addOwner, replaceOwner, changeSigns, removeOwner, storage, isLoading: isLoading || isFetching, isTransactionLoading: transactionLoading || transactionFetching, isAddOwnerLoading, isReplaceOwnerLoading, isChangeSignLoading: isChangeSignLoading || isChangeInternalLoading, refetch, isRemoveLoading }\n    } else {\n        return { data: undefined, addOwner, fetchTxs, replaceOwner, changeSigns, removeOwner, storage, signData: undefined, refetch, isMultisig, isTransactionLoading: transactionLoading || transactionFetching, }\n    }\n\n}\n\nexport default useMultisig;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport Avatar from \"../../avatar\";\n\n\nconst AddOwner = ({onDisable} : {onDisable: React.Dispatch<boolean>}) => {\n\n    const { signData, data, addOwner, isAddOwnerLoading, refetch } = useMultisig()\n\n    const [pageIndex, setPageIndex] = useState(0);\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Add Owner</div>\n        {pageIndex === 0 && <>\n            {/* <div className=\"flex flex-col space-y-3\">\n                <span>New Owner</span>\n                <div>\n                    <input type=\"text\" placeholder=\"Owner Name\" className=\"w-[75%] px-3 py-2 border border-black rounded-lg\" />\n                </div>\n            </div> */}\n            <div className=\"flex flex-col space-y-3\">\n                <span>Wallet Address</span>\n                <div>\n                    <input onChange={(e) => setAddress(e.target.value)} type=\"text\" placeholder=\"0xabc...\" className=\"w-full px-3 py-2 border border-black rounded-lg\" />\n                </div>\n            </div>\n            <div className=\"flex justify-center\">\n                <div className=\"grid grid-cols-2 gap-5 w-[50%] \">\n                    <button className=\"px-3 py-2 border border-primary bg-transparent text-primary rounded-xl\" onClick={()=>onDisable(false)}>\n                        Close\n                    </button>\n                    <button className=\"px-3 py-2 bg-primary text-white rounded-xl\" onClick={() => {\n                        if (address) {\n                            setPageIndex(1)\n                        }\n                    }}>\n                        Next\n                    </button>\n                </div>\n            </div></>}\n        {pageIndex === 1 && <>\n            <div className=\"flex border border-primary px-3 py-2 items-center rounded-xl space-x-3\">\n                <div>\n                    <Avatar name=\"Ow\" className=\"bg-primary text-black bg-opacity-100 font-bold text-xs\" />\n                </div>\n                <div className=\"flex flex-col\">\n                    <div>\n                        New Owner\n                    </div>\n                    <div className=\"text-sm text-greylish\">\n                        Address: {address}\n                    </div>\n                    <div className=\"text-sm text-greylish\">\n                        Treshold: <span className=\"font-bold\">{signData?.changingMultiSigProperties} out of {data?.length} owners</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-center\">\n                <div className=\"grid grid-cols-2 gap-5 w-[50%] \">\n                    <button className=\"px-3 py-2 border border-primary bg-transparent text-primary rounded-xl\">\n                        Back\n                    </button>\n                    <button className=\"px-3 py-2 bg-primary text-white rounded-xl\" onClick={async () => {\n                        try {\n                            await addOwner(address)\n                            refetch()\n                            dispatch(changeSuccess(true))\n                            onDisable(false)\n                        } catch (error: any) {\n                            console.error(error)\n                            dispatch(changeError({ activate: true, text: error?.data?.message }))\n                            onDisable(false)\n                        }\n                    }}>\n                        {!isAddOwnerLoading ? \"Confirm\" : <ClipLoader />}\n                    </button>\n                </div>\n            </div></>}\n    </div>\n}\n\nexport default AddOwner;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\n\n\nconst ReplaceOwner = ({ onDisable, ownerAddress }: { onDisable: React.Dispatch<boolean>, ownerAddress: string }) => {\n\n    const { replaceOwner, isReplaceOwnerLoading, refetch } = useMultisig()\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(ownerAddress);\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Replace Owner</div>\n        {/* <div className=\"flex flex-col space-y-3\">\n                <span>New Owner</span>\n                <div>\n                    <input type=\"text\" placeholder=\"Owner Name\" className=\"w-[75%] px-3 py-2 border border-black rounded-lg\" />\n                </div>\n            </div> */}\n        <div className=\"flex flex-col space-y-3\">\n            <span>Wallet Address</span>\n            <div>\n                <input defaultValue={ownerAddress} onChange={(e) => setAddress(e.target.value)} type=\"text\" placeholder=\"0xabc...\" className=\"w-full px-3 py-2 border border-black rounded-lg\" />\n            </div>\n        </div>\n        <div className=\"flex justify-center\">\n            <div className=\"grid grid-cols-1 gap-5 w-[30%] \">\n                <button className=\"px-3 py-2 bg-primary text-white rounded-xl\" onClick={async () => {\n                    if (address) {\n                        try {\n                            await replaceOwner(ownerAddress, address)\n                            dispatch(changeSuccess(true))\n                            refetch()\n                            onDisable(false)\n                        } catch (error : any) {\n                            console.error(error)\n                            dispatch(changeError({ activate: true, text: error?.data?.message }))\n                            onDisable(false)\n                        }\n                    }\n                }}>\n                    {isReplaceOwnerLoading ? <ClipLoader /> : \"Save\"}\n                </button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default ReplaceOwner;","import { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport Avatar from \"../../avatar\";\n\n\nconst RemoveOwner = ({ name, address, onDisable }: { name: string, address: string, onDisable: React.Dispatch<boolean> }) => {\n\n    const { signData, data, refetch, isRemoveLoading, removeOwner } = useMultisig();\n\n    const dispatch = useDispatch()\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Delete Owner</div>\n        <div className=\"flex flex-col space-y-3\">\n            <div>\n                Review the owner\n            </div>\n            <div className=\"flex items-center space-x-2\">\n                <div>\n                    <Avatar className=\"bg-opacity-10 font-bold text-xs\" name=\"Ow\" />\n                </div>\n                <div className=\"flex flex-col\">\n                    <div>{name}</div>\n                    <div className=\"font-thin text-sm\">Address: {address.toLowerCase()}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"flex justify-center\">\n            <div className=\"grid grid-cols-1 gap-5 w-[35%] \">\n                <button className=\"px-3 py-2 bg-red-500 text-white rounded-xl\" onClick={async () => {\n                    try {\n                        await removeOwner(address)\n                        refetch()\n                        dispatch(changeSuccess(true))\n                        onDisable(false)\n                    } catch (error: any) {\n                        console.error(error)\n                        dispatch(changeError({ activate: true, text: error?.data?.message }))\n                        onDisable(false)\n                    }\n                }}>\n                    {!isRemoveLoading ? \"Delete\" : <ClipLoader />}\n                </button>\n            </div>\n        </div>\n    </div>\n\n\n\n}\n\nexport default RemoveOwner;","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\"\nimport { Dropdown } from \"../..\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { DropDownItem } from \"../../../types\";\n\n\nconst ChangeTreshold = ({ onDisable }: { onDisable: React.Dispatch<boolean> }) => {\n\n    const { signData, data, isChangeSignLoading, changeSigns, refetch } = useMultisig()\n\n    const [sign, setSign] = useState<DropDownItem>({ name: (signData?.executinTransactions.toString() ?? \"1\"), address: '' })\n    const [internalSign, setInternalSign] = useState<DropDownItem>({ name: (signData?.changingMultiSigProperties.toString() ?? \"1\"), address: '' })\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (signData?.executinTransactions) {\n            setSign({ name: (signData?.executinTransactions.toString() ?? \"1\"), address: '' })\n        }\n        if (signData?.changingMultiSigProperties) {\n            setInternalSign({ name: (signData?.changingMultiSigProperties.toString() ?? \"1\"), address: '' })\n        }\n    }, [signData])\n\n    if (!data) return <div className=\"text-center\">Select a MultiSig account</div>\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Replace Owner</div>\n        <div className=\"flex flex-col space-y-3\">\n            <span>Any transaction requires the confirmation of: </span>\n            <div className=\"flex items-center gap-x-3\">\n                <Dropdown onSelect={setSign} className=\"px-3 space-x-2\" nameActivation={true} list={Array(data.length).fill('').map((s, i) => ({ name: (i + 1).toString(), address: '' }))} selected={sign} /> out of {data.length} owners\n            </div>\n        </div>\n        <div className=\"flex flex-col space-y-3\">\n            <span>Signatures required to change MultiSig properties: </span>\n            <div className=\"flex items-center gap-x-3\">\n                <Dropdown onSelect={setInternalSign} className=\"px-3 space-x-2\" nameActivation={true} list={Array(data.length).fill('').map((s, i) => ({ name: (i + 1).toString(), address: '' }))} selected={internalSign} /> out of {data.length} owners\n            </div>\n        </div>\n        <div className=\"flex justify-center\">\n            <div className=\"grid grid-cols-1 gap-5 w-[30%] \">\n                <button className=\"px-3 py-2 bg-primary text-white rounded-xl\" onClick={async () => {\n                    if (sign.name && internalSign.name) {\n                        try {\n                            await changeSigns(\n                                parseInt(sign.name),\n                                parseInt(internalSign.name)\n                            )\n                            refetch()\n                            dispatch(changeSuccess(true))\n                            onDisable(false)\n                        } catch (error: any) {\n                            console.error(error)\n                            dispatch(changeError({ activate: true, text: error?.data?.message }))\n                            onDisable(false)\n                        }\n                    }\n                }}>\n                    {isChangeSignLoading ? <ClipLoader /> : \"Save\"}\n                </button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default ChangeTreshold;","import { Dispatch } from \"react\";\nimport { useAppSelector } from \"../redux/hooks\";\nimport { selectErrorText } from \"../redux/reducers/notificationSlice\";\n\n\nconst Error = ({ onClose }: { onClose: Dispatch<boolean>}) => {\n    const title = useAppSelector(selectErrorText)\n\n    return <div className=\"absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 z-[100]\">\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/icons/error.svg\" width=\"200\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{title}</div>\n        <button className=\"px-16 py-4 text-white bg-primary font-bold shadow-xl\" onClick={() => onClose(false)}>\n            Close\n        </button>\n    </div>\n}\n\n\nexport default Error;","import { Dispatch } from \"react\";\n\nconst Success = ({ onClose, text = \"Payment Successfully Completed\", className, onAction }: { onClose: Dispatch<boolean>, text?: string, className?: string, onAction?: () => void }) => {\n\n    return <div className={`absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 z-[100] ${className}`}>\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/success.svg\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{text}</div>\n        <button className=\"px-16 py-4 text-white bg-primary font-bold shadow-xl rounded-xl\" onClick={() => { if (onAction) onAction(); onClose(false); }}>\n            Close\n        </button>\n    </div>\n}\n\n\nexport default Success;","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { Dropdown } from '../../components';\nimport Siderbarlist from '../../components/dashboard/sidebarlist'\nimport Error from '../../components/error';\nimport Modal from '../../components/modal';\nimport Success from '../../components/success';\nimport { useCreateAddressMutation, useGetMultisigAddressesQuery, useImportAddressMutation } from '../../redux/api';\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice';\nimport { changeAccount, SelectSelectedAccount } from '../../redux/reducers/selectedAccount';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { DropDownItem } from '../../types';\nimport { generate } from 'shortid'\n\nconst Sidebar = () => {\n\n    const { data, refetch, isFetching } = useGetMultisigAddressesQuery()\n    const [importMultisig, { isLoading }] = useImportAddressMutation()\n\n    const [createMultisig, { isLoading: createLoading }] = useCreateAddressMutation()\n\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n\n    const dispatch = useDispatch()\n    const isSuccess = useSelector(selectSuccess)\n    const isError = useSelector(selectError)\n\n    const [isAccountModal, setAccountModal] = useState(false)\n    const [isImportModal, setImportModal] = useState(false)\n    const [isCreateModal, setCreateModal] = useState(false)\n\n    const owners = useRef<string[]>([])\n    const [ownerAmount, setOwnerAmount] = useState(1)\n\n    const [sign, setSign] = useState<number | undefined>(1)\n    const [internalSign, setInternalSign] = useState<number | undefined>(1)\n\n    const importInputRef = useRef<HTMLInputElement>(null)\n\n    const [selectedItem, setItem] = useState<DropDownItem>({ name: storage!.accountAddress === selectedAccount ? \"Wallet\": \"Multisig\", address: selectedAccount })\n\n    const importClick = async () => {\n        if (importInputRef.current && importInputRef.current.value) {\n            try {\n                const res = await importMultisig({\n                    multisigAddress: importInputRef.current.value\n                }).unwrap()\n                refetch()\n                dispatch(changeSuccess(true))\n                // dispatch(changeAccount(res.result.address))\n                setImportModal(false)\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: (error?.data?.message || \"Something went wrong\") }))\n                setImportModal(false)\n            }\n        }\n    }\n\n    const createClick = async () => {\n        if (sign && internalSign && owners.current.length+1 >= sign && owners.current.length+1 >= internalSign ) {\n            try {\n                const res = await createMultisig({\n                    phrase: storage!.encryptedPhrase,\n                    owners: owners.current,\n                    required: sign,\n                    internalRequired: internalSign\n                }).unwrap()\n                refetch()\n                dispatch(changeSuccess(true))\n                // dispatch(changeAccount(res.multiSigAddress.address))\n                setCreateModal(false)\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: (error?.data?.message || \"Something went wrong\") }))\n                setCreateModal(false)\n            }\n        }\n    }\n\n    const [list, setList] = useState<DropDownItem[]>([\n        { name: \"Remox\", address: storage!.accountAddress },\n        { name: \"+ Multisig Account\", address: \"\", onClick: () => { setAccountModal(true) } },\n    ])\n\n    useEffect(() => {\n        if (data) {\n            setList([list[0], ...data.addresses.map((e, i) => ({ name: `MultiSig ${i+1}`, address: e.address })), list[1]])\n        }\n    }, [data])\n\n   \n\n    return <div className=\"flex flex-col gap-14 pl-4 lg:pl-10\">\n        <div>\n            <Dropdown list={list} selected={selectedItem} onSelect={(w) => {\n                if (w.address) {\n                    setItem(w)\n                    dispatch(changeAccount(w.address))\n                }\n            }} />\n        </div>\n        <div className=\"lg:pl-4\">\n            <Siderbarlist />\n        </div>\n        {isAccountModal && <Modal onDisable={setAccountModal}>\n            <div className=\"flex flex-col gap-4 mt-[-2rem]\">\n                <div className=\"text-center font-semibold\">Multi-Signature Account</div>\n                <div className=\"flex space-x-3 border border-black px-5 py-2 rounded-md cursor-pointer items-center\" onClick={() => {\n                    setCreateModal(true)\n                    setAccountModal(false)\n                }}>\n                    <img src=\"/icons/teamicon.svg\" alt=\"\" />\n                    <span>Create Multisig Account</span>\n                </div>\n                <div className=\"flex space-x-3 border border-black px-5 py-2 rounded-md cursor-pointer items-center\" onClick={() => {\n                    setImportModal(true)\n                    setAccountModal(false)\n                }}>\n                    <img src=\"/icons/teamicon.svg\" alt=\"\" />\n                    <span>Import Multisig Account</span>\n                </div>\n            </div>\n        </Modal>}\n        {isImportModal && <Modal onDisable={setImportModal}>\n            <div className=\"flex flex-col gap-4 mt-[-2rem]\">\n                <div className=\"text-center font-semibold\">Import MultiSig Account</div>\n                <div className=\"flex flex-col\">\n                    <span className=\"text-greylish opacity-35 pl-3\">MultiSig Address</span>\n                    <input ref={importInputRef} type=\"text\" className=\"border p-3 rounded-md border-black\" placeholder=\"0xabc...\" />\n                </div>\n                <div className=\"flex justify-center\">\n                    <button className=\"bg-primary px-10 py-2 rounded-xl text-white shadow-custom\" onClick={importClick}>\n                        {!isLoading ? \"Import\" : <div><ClipLoader /></div>}\n                    </button>\n                </div>\n            </div>\n        </Modal>}\n        {\n            isCreateModal && <Modal onDisable={setCreateModal}>\n                <div className=\"flex flex-col gap-4 mt-[-2rem]\">\n                    <div className=\"text-center font-semibold\">Create MultiSig Account</div>\n                    <div className=\"flex flex-col overflow-y-auto max-h-[75vh] space-y-5\">\n                        <span className=\"text-black opacity-35 pl-3\">Owners</span>\n                        <div className=\"w-full\">\n                            <input type=\"text\" className=\"border p-3 rounded-md border-black outline-none w-full text-greylish\" value={storage!.accountAddress} disabled />\n                        </div>\n                        {\n                            Array(ownerAmount).fill(' ').map((e, i) => {\n                                return <div className=\"w-full\" key={generate()}>\n                                    <input type=\"text\" onChange={(e) => { owners.current[i] = e.target.value }} className=\"border p-3 rounded-md border-black outline-none w-full\" placeholder=\"0xabc...\" />\n                                </div>\n                            })\n                        }\n                        <div className=\"cursor-pointer text-center text-greylish opacity-80 px-3\" onClick={() => { setOwnerAmount(ownerAmount + 1) }}>+ Add Owner</div>\n                        <div className=\"flex flex-col space-y-8\">\n                            <div>\n                                <span className=\"text-greylish opacity-35 pl-3\">Signatures required to execute TXs</span>\n                                <input type=\"text\" className=\"border p-3 rounded-md border-black outline-none w-full\" value={sign} onChange={(e) => { if (!isNaN(+e.target.value)) setSign(+e.target.value || undefined) }} />\n                            </div>\n                            <div>\n                                <span className=\"text-greylish opacity-35 pl-3\">Signatures required to change MultiSig properties</span>\n                                <input type=\"text\" className=\"border p-3 rounded-md border-black outline-none w-full\" value={internalSign} onChange={(e) => { if (!isNaN(+e.target.value)) setInternalSign(+e.target.value || undefined) }} />\n\n                            </div>\n                        </div>\n                        <div className=\"text-center\">\n                            <button className=\"bg-primary px-10 shadow-custom py-2 rounded-xl text-white\" onClick={createClick}>\n                                {createLoading ? <ClipLoader /> : \"Create\"}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        }\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess(val))} text=\"Successfully\" />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n\n}\n\nexport default Sidebar;","import { useAppDispatch } from \"../../redux/hooks\"\nimport { setMenu } from \"../../redux/reducers/toggles\"\nimport {motion} from 'framer-motion'\nimport { useEffect } from \"react\"\n\n\nconst MobileMenu = ({ children }: { children: JSX.Element | JSX.Element[] | string }) => {\n    const dispatch = useAppDispatch()\n    useEffect(() => {\n        document.querySelector('body')!.style.overflowY = \"hidden\"\n        document.querySelector('body')!.style.height = \"100vh\"\n        return () => {\n            document.querySelector('body')!.style.overflowY = \"\"\n            document.querySelector('body')!.style.height = \"auto\"\n        }\n    }, [])\n    return <>\n        <div className=\"absolute w-screen h-screen z-50 bg-white bg-opacity-60\" onClick={()=>{\n            dispatch(setMenu(false))\n        }}></div>\n        <motion.div initial={{x: -500}} animate={{x: 0}} transition={{type: 'tween'}} exit={{x: -500}} className=\"w-[50vw] fixed -translate-x-50 h-full bg-white z-[100] border-r-2\">\n            <div className=\"h-full flex flex-col items-center justify-center\">\n                {children}\n            </div>\n        </motion.div>\n    </>\n}\n\nexport default MobileMenu","import Navbar, { NavbarDropdown } from '../../layouts/dashboard/navbar'\nimport Sidebar from '../../layouts/dashboard/sidebar';\nimport MobileMenu from '../../layouts/dashboard/mobileMenu'\nimport Siderbarlist from '../../components/dashboard/sidebarlist'\nimport { useAppSelector } from '../../redux/hooks';\nimport { selectToggle } from '../../redux/reducers/toggles';\nimport { AnimatePresence } from 'framer-motion';\nimport { IoMdNotificationsOutline } from 'react-icons/io';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { ClipLoader } from 'react-spinners';\nimport NotificationCointainer from '../../components/notification';\nimport Visitcard from '../../components/dashboard/visitcard';\n\nconst Dashboard = ({ children }: { children?: JSX.Element | JSX.Element[] }) => {\n    const toggle = useAppSelector(selectToggle)\n    const storage = useAppSelector(selectStorage)\n\n    return <>\n        <AnimatePresence>\n            {toggle.mobileMenu &&\n                <MobileMenu>\n                    <div className=\"flex flex-col space-y-10 px-10\">\n                        <div className=\"actions flex flex-col items-center justify-evenly space-y-5\">\n                            {storage ? <Visitcard name=\"Remox\" address={storage.accountAddress} /> : <ClipLoader />}\n                            <NavbarDropdown />\n                            <div className=\"relative\">\n                                <NotificationCointainer />\n                            </div>\n                        </div>\n                        <Siderbarlist />\n                    </div>\n                </MobileMenu>\n            }\n        </AnimatePresence>\n        <div className=\"flex flex-col pt-6 gap-16\">\n            <Navbar></Navbar>\n            <div className=\"grid grid-cols-2 md:grid-cols-11 md:gap-12\">\n                <div className=\"hidden md:block md:col-span-2\"><Sidebar /></div>\n                <div className=\"col-span-11 md:col-span-8 pl-2 md:pl-7 pr-2\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Dashboard;","import { csv } from 'd3-fetch'\n\nclass CSV {\n    static async Import(file: File): Promise<string[][]> {\n        return new Promise(async (resolve, reject) => {\n\n            const url = URL.createObjectURL(file)\n\n            const res = await csv(url)\n            if (res) {\n                if (res.columns[0].toLowerCase().includes(\"name;address;amount;coin;amount2;coin2\")) {\n                    const result: string[][] = []\n                    for (let index = 0; index < res.length; index++) {\n                        const data = Object.values(res[index])[0]?.split(';')\n                        if (data && data.length > 0) {\n                            result.push(data)\n                        }else{\n                            reject(new Error(`Row is null`))\n                        }\n                    }\n                    resolve(result)\n                } else {\n                    reject(new Error(\"Columns are invalid. Please, set the column order like that: Name Address Amount Coin\"))\n                }\n            } else {\n                reject(new Error(`Cannot import an empty file`))\n            }\n        })\n    }\n}\n\nexport default CSV;","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"../../components/dropdown\";\nimport { generate } from 'shortid'\nimport { useHistory } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { MultipleTransactionData } from \"../../types/sdk\";\nimport CSV from '../../utility/CSV'\nimport { useGetBalanceQuery, useSendCeloMutation, useSendStableTokenMutation, useSendMultipleTransactionsMutation, useSendAltTokenMutation, useSubmitTransactionsMutation, useGetConvertableTokenAmountMutation } from \"../../redux/api\";\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport Input from \"../../components/pay/payinput\";\nimport { AltCoins, AltcoinsList, Coins, CoinsNameVisual, StableTokens, TransactionFeeTokenName } from \"../../types/coins\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\nimport { useRefetchData } from \"../../hooks\";\n\n\nconst Pay = () => {\n\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const isError = useSelector(selectError)\n    const dispatch = useAppDispatch()\n    const router = useHistory();\n\n    //const [tokenAmount] = useGetConvertableTokenAmountMutation()\n\n    const balance = useSelector(SelectBalances)\n\n    const [fetching] = useRefetchData(true)\n\n    // const { data, refetch } = useGetBalanceQuery()\n\n\n    const [sendCelo] = useSendCeloMutation()\n    const [sendStableToken] = useSendStableTokenMutation()\n    const [sendMultiple] = useSendMultipleTransactionsMutation()\n    const [sendAltcoin] = useSendAltTokenMutation()\n\n    const [sendMultisig] = useSubmitTransactionsMutation()\n\n\n    const [index, setIndex] = useState(1)\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n    const [selectedType, setSelectedType] = useState(false)\n\n\n    const [amountState, setAmountState] = useState<number[]>([])\n    const uniqueRef = useRef<string[]>([generate(), generate()])\n    const nameRef = useRef<Array<string>>([])\n    const addressRef = useRef<Array<string>>([])\n    const [wallets, setWallets] = useState<DropDownItem[]>([])\n    const amountRef = useRef<Array<string>>([])\n\n    const [refreshPage, setRefreshPage] = useState<string>(\"\")\n\n    const [csvImport, setCsvImport] = useState<string[][]>([]);\n\n    const fileInput = useRef<HTMLInputElement>(null);\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n    const reset = () => {\n        nameRef.current = []\n        addressRef.current = []\n        amountRef.current = []\n        uniqueRef.current = []\n        //setAmountState([])\n        //setWallets([]);\n    }\n\n    useEffect(() => {\n        fetching()\n    }, [])\n\n\n    useEffect(() => {\n        if (csvImport.length > 0) {\n            const list = csvImport.filter(w => w[1] && w[2] && w[3] && w[4] && w[5])\n            reset()\n            let ind = 0;\n            const wllt: any[] = []\n            const amm: number[] = []\n            for (let index = 0; index < list.length; index++) {\n                const [name, address, amount, coin, amount2, coin2] = list[index].slice(0, 6)\n\n                uniqueRef.current.push(generate())\n                uniqueRef.current.push(generate())\n                nameRef.current.push((name || \"\"));\n                addressRef.current.push((address || \"\"));\n                amountRef.current.push((amount || \"\"));\n                amm.push(parseFloat(amount || \"0\"))\n                nameRef.current.push((name || \"\"));\n                addressRef.current.push((address || \"\"));\n                amountRef.current.push((amount2 || \"\"));\n                amm.push(parseFloat(amount2 || \"0\"))\n\n                const a = { ...Coins[coin as TransactionFeeTokenName], type: Coins[coin as TransactionFeeTokenName].value };\n                const b = { ...Coins[coin2 as TransactionFeeTokenName], type: Coins[coin2 as TransactionFeeTokenName].value };\n                const wallet = [a, b];\n                wllt.push(...wallet)\n                setAmountState(amm)\n\n            }\n            setIndex((index === 1 ? 0 : index) + list.length)\n            setWallets(wllt)\n            // setRefreshPage(generate())\n            fileInput.current!.files = new DataTransfer().files;\n        }\n    }, [csvImport])\n\n\n    useEffect(() => {\n        if (balance && balance.CELO) {\n            const coins = Object.values(balance).map((coin: IBalanceItem) => ({\n                name: `${coin.amount.toFixed(3)} ${coin.coins.name}`,\n                type: coin.coins.value.toString(),\n                amount: coin.amount.toString(),\n                coinUrl: coin.coins.coinUrl,\n            }))\n            const v = { name: coins[0].name.split(' ')[1], coinUrl: coins[0].coinUrl, type: coins[0].type }\n            setWallets([{ ...v }, { ...v }])\n            setSelectedWallet(coins[0])\n            setList(coins)\n        }\n    }, [balance])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        setIsPaying(true)\n\n        try {\n            const result: Array<MultipleTransactionData> = []\n\n            const [nameList, addressList, amountList] = [nameRef.current, addressRef.current, amountRef.current]\n\n\n            for (let index = 0; index < addressList.length; index++) {\n                if (addressList[index] && amountList[index] && wallets[index].type) {\n                    let amount = amountList[index];\n                    if(selectedType){\n                        let value = (balance[wallets[index].name as keyof typeof balance]?.tokenPrice ?? 1)\n                        amount = (parseFloat(amount) / value).toFixed(4)\n                    }\n                    result.push({\n                        toAddress: addressList[index],\n                        amount: amount,\n                        tokenType: wallets[index].type!,\n                    })\n                }\n            }\n\n            if (storage!.accountAddress.toLowerCase() === selectedAccount.toLowerCase()) {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    if (result[0]!.tokenType === Coins.celo.value) {\n                        await sendCelo({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            comment: \"\",\n                            phrase: storage!.encryptedPhrase\n                        }).unwrap()\n\n                    } else if (result[0]!.tokenType === CoinsNameVisual.cUSD || result[0]!.tokenType === CoinsNameVisual.cEUR) {\n                        await sendStableToken({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            stableTokenType: result[0].tokenType === CoinsNameVisual.cUSD ? 'cUSD' as StableTokens : 'cEUR' as StableTokens\n                        }).unwrap()\n                    } else {\n                        await sendAltcoin({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            altTokenType: AltcoinsList[(result[0].tokenType as AltcoinsList)]\n                        }).unwrap()\n                    }\n                }\n                else if (result.length > 1) {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    await sendMultiple({\n                        multipleAddresses: arr,\n                        phrase: storage!.encryptedPhrase\n                    }).unwrap()\n                }\n            } else {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    await sendMultisig({\n                        toAddress: result[0].toAddress,\n                        multisigAddress: selectedAccount,\n                        phrase: storage!.encryptedPhrase,\n                        tokenType: result[0].tokenType,\n                        value: result[0].amount,\n                    }).unwrap()\n\n                }\n                else if (result.length > 1) {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    for (let i = 0; i < arr.length; i++) {\n                        await sendMultisig({\n                            toAddress: arr[i].toAddress,\n                            multisigAddress: selectedAccount,\n                            phrase: storage!.encryptedPhrase,\n                            tokenType: arr[i].tokenType,\n                            value: arr[i].amount,\n                        }).unwrap()\n                    }\n                }\n            }\n            setSuccess(true);\n            //refetch()\n            fetching()\n\n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n        setIsPaying(false);\n    }\n\n    return <div className=\"sm:px-32\">\n        <form onSubmit={Submit}>\n            <div className=\"sm:flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"sm:min-w-[85vw] min-h-[75vh] h-auto \">\n                    <div className=\"pl-14 py-2 text-left w-full\">\n                        <div className=\"text-xl font-semibold\">Pay Someone</div>\n                    </div>\n                    <div className=\"shadow-xl border sm:flex flex-col gap-3 gap-y-10 sm:gap-10 py-10\">\n                        <div className=\"sm:flex flex-col pl-3 sm:pl-12 sm:pr-[20%] gap-3 gap-y-10  sm:gap-10\">\n                            <div className=\"flex flex-col space-y-5\">\n                                <span className=\"text-left text-sm font-semibold\">Payment Type</span>\n                                <div className=\"flex space-x-24\">\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                                        <label className=\"font-semibold text-sm\">\n                                            Pay with Token Amounts\n                                        </label>\n                                    </div>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                                        <label className=\"font-semibold text-sm\">\n                                            Pay with USD-based Amounts\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex space-x-5 sm:space-x-0 sm:justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold text-sm\">Paying To</span>\n\n                                    <input ref={fileInput} type=\"file\" className=\"hidden\" onChange={(e) => e.target.files!.length > 0 ? CSV.Import(e.target.files![0]).then(e => setCsvImport(e)).catch(e => console.error(e)) : null} />\n                                </div>\n                                <div className=\"grid grid-cols-4 sm:grid-cols-[25%,40%,30%,5%] gap-5\">\n                                    {wallets.length > 0 && Array(index).fill(\" \").map((e, i) => {\n                                        if (!uniqueRef.current[i * 2]) {\n                                            uniqueRef.current[i * 2] = generate()\n                                            uniqueRef.current[i * 2 + 1] = generate()\n                                        }\n\n                                        return <Input key={uniqueRef.current[i * 2]} amountState={amountState} setAmount={setAmountState} setIndex={setIndex} overallIndex={index} uniqueArr={uniqueRef.current} index={i * 2} name={nameRef.current} address={addressRef.current} amount={amountRef.current} selectedWallet={wallets} setWallet={setWallets} setRefreshPage={setRefreshPage} isBasedOnDollar={selectedType} />\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"py-5 sm:py-0 grid grid-cols-[65%,35%] gap-16\">\n                                <div className=\"grid grid-cols-2 gap-x-5 sm:grid-cols-3\">\n                                    <button type=\"button\" className=\"px-3 py-1 sm:px-6 sm:py-3 min-w-[200px] border-2 border-primary text-primary rounded-xl\" onClick={() => {\n                                        setIndex(index + 1)\n                                    }}>\n                                        + Add More\n                                    </button>\n                                    <button type=\"button\" onClick={() => {\n                                        fileInput.current?.click()\n                                    }} className=\"px-3 py-1 sm:px-6 sm:py-3 min-w-[200px] border-2 border-primary text-primary rounded-xl\">\n                                        Import CSV\n                                    </button>\n                                </div>\n                                <span className=\"self-center text-lg opacity-60\">Total: ${amountState.reduce((a, e, i) => {\n                                    if (!wallets[i].type) return a;\n                                    if (selectedType) return a + e;\n                                    return a + e * (balance[wallets[i].name as keyof typeof balance]?.tokenPrice ?? 1);\n                                }, 0).toFixed(2)}</span>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center pt-5 sm:pt-0\">\n                            <div className=\"flex flex-col-reverse sm:grid grid-cols-2 w-[200px] sm:w-[400px] justify-center gap-5\">\n                                <button type=\"button\" className=\"border-2 border-primary px-3 py-2 text-primary rounded-lg\" onClick={() => router.goBack()}>Close</button>\n                                <button type=\"submit\" className=\"bg-primary px-3 py-2 text-white flex items-center justify-center rounded-lg\">{isPaying ? <ClipLoader /> : 'Pay'}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} onAction={() => { router.goBack() }} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: val, text: '' }))} />}\n    </div>\n}\n\n\n\nexport default Pay;","import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"../redux/reducers/storage\";\n\n\nconst Home = () => {\n    const storage = useSelector(selectStorage)\n\n\n    return <>\n        <section className=\"flex justify-center items-center w-full h-screen\">\n            <div className=\"w-[800px] h-[600px] bg-[#eeeeee] bg-opacity-40 flex flex-col justify-center items-center gap-14\">\n                <div className=\"w-[200px] sm:w-[400px] flex flex-col items-center justify-center gap-10\">\n                    <img src=\"/logo.png\" alt=\"\" className=\"w-full\"/>\n                    <span className=\"font-light text-greylish text-center\">All-in-One Tool For Crypto Treasury Management</span>\n                </div>\n                <div className=\"flex flex-col gap-5\">\n                    <Link to={storage ? { pathname: '/dashboard' } : { pathname: '/import' }} className=\"text-center\">\n                        <button className=\"border-2 bg-white text-primary border-primary shadow-xl px-8 py-3 rounded-xl\">Enter App</button>\n                    </Link>\n                    <Link to=\"/create\" className=\"text-center\">\n                        <button className=\"border-2 bg-primary text-white shadow-xl px-8 py-3 rounded-xl\">Create Account</button>\n                    </Link>\n                </div>\n            </div>\n        </section>\n    </>\n\n};\n\nexport default Home;","import { useState} from 'react'\nimport Header from '../layouts/home/header'\nimport Set from '../components/create/set'\nimport KeyPhrase from '../components/create/phrase'\nimport { PassDataFromSetToPhrase } from '../types/create'\n\nconst Create = () => {\n    const [data, setData] = useState<PassDataFromSetToPhrase>();\n\n    return <div className=\"h-screen w-full\">\n        <Header />\n        {!data ? <Set setData={setData} /> : <KeyPhrase data={data!} />}\n    </div>\n}\n\n\n\n\nexport default Create;","import PhraseBar from '../components/phraseBar';\nimport Header from '../layouts/home/header'\nimport { useRef, useState, useEffect } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { ClipLoader } from 'react-spinners';\nimport { selectStorage, setStorage } from '../redux/reducers/storage';\nimport { useUnlockMutation } from '../redux/api';\nimport { selectUnlock, setUnlock } from '../redux/reducers/unlock';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\n\nconst Unlock = () => {\n    const unlockState = useAppSelector(selectUnlock)\n    const storage = useAppSelector(selectStorage)\n\n    const [unlockApp, { isLoading }] = useUnlockMutation()\n\n    const dispatch = useAppDispatch();\n    const inputRef = useRef<HTMLInputElement>(null)\n    const location = useLocation()\n    const router = useHistory()\n    const [incorrrect, setIncorrect] = useState(false)\n\n    useEffect(() => {\n        if (router && !storage) router.push('/')\n    }, [unlockState, location, router, storage])\n\n    const Submit = async () => {\n        if (inputRef.current && storage?.accountAddress) {\n            setIncorrect(false);\n\n            try {\n                const data = await unlockApp({\n                    password: inputRef.current.value.trim(),\n                    address: storage.accountAddress\n                }).unwrap()\n\n                dispatch(setStorage(JSON.stringify({ ...storage, token: data!.token })))\n\n                dispatch(setUnlock(true))\n                router.push('/');\n            } catch (error) {\n                setIncorrect(true);\n                console.error(error)\n            }\n        }\n    }\n\n    return <>\n        <Header />\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary\">Unlock Your Wallet</h2>\n            <div className=\"flex flex-col gap-3\">\n                <div>Public Address</div>\n                {storage && <PhraseBar address={storage.accountAddress} scanIcon={false} />}\n            </div>\n            <div className=\"flex flex-col gap-4\">\n                <div>Enter your password to unlock your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submit()\n                    }\n                }} ref={inputRef} type=\"password\" autoComplete='new-password' autoFocus className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600 text-center\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <button onClick={Submit} className=\"bg-primary shadow-lg px-5 py-2 text-white rounded-lg\">{isLoading ? <ClipLoader /> : 'Unlock'}</button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\n\nexport default Unlock;","import { Dropdown } from \"../../components\";\nimport { Coins, CoinsNameVisual } from \"../../types/coins\";\nimport { DropDownItem } from '../../types'\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useGetConvertableTokenAmountMutation, useSwapCoinsMutation } from \"../../redux/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SelectBalances, SelectCurrencies } from \"../../redux/reducers/currencies\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { changeError, changeSuccess, selectError, selectSuccess } from \"../../redux/reducers/notificationSlice\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { ClipLoader } from \"react-spinners\";\nimport Modal from \"../../components/modal\";\nimport { useRefetchData, useModalSideExit } from '../../hooks';\nimport useMultisig from \"../../hooks/useMultisig\";\n\nconst Swap = () => {\n    const [token1, setToken1] = useState<DropDownItem>(Coins.cUSD)\n    const [token1Amount, setToken1Amount] = useState<number>(0)\n    const [token2, setToken2] = useState<DropDownItem>(Coins.celo)\n\n    const {isMultisig} = useMultisig()\n\n    const [refetch] = useRefetchData()\n\n    const token1Input = useRef<HTMLInputElement>(null)\n\n    const [appAmount, setAppAmount] = useState<string>(\"0\")\n    const [fee, setFee] = useState<string>(\"\")\n    const [oneCoinPrice, setOneCoinPrice] = useState<string>(\"\")\n\n    const [isOpen, setOpen] = useState<boolean>(false)\n    const [isSetting, setSetting] = useState<boolean>(false)\n\n    const [slippageArr, setSlippageArr] = useState([\n        { value: 1, label: '0,1%', selected: false },\n        { value: 5, label: '0,5%', selected: true },\n        { value: 10, label: '1%', selected: false },\n        { value: 0, label: '0%', selected: false, invisible: true }\n    ])\n\n    const [deadline, setDeadline] = useState<number>(1.5)\n\n    const balances = useSelector(SelectBalances)\n    const storage = useSelector(selectStorage)\n    const isSuccess = useSelector(selectSuccess)\n    const isError = useSelector(selectError)\n\n    const dispatch = useDispatch()\n\n    const [fetchCoin, { isLoading: coinLoading }] = useGetConvertableTokenAmountMutation()\n    const [swap, { isLoading }] = useSwapCoinsMutation()\n\n    const change = async () => {\n        if (token1.value && token2.value) {\n            try {\n                const data = await fetchCoin({\n                    input: token1.value,\n                    output: token2.value,\n                    amount: token1Amount.toString(),\n                    slippage: slippageArr.find(item => item.selected)!.value.toString(),\n                    deadline: Math.floor(deadline * 60)\n                }).unwrap()\n                setAppAmount(data.minimumAmountOut)\n                setFee(data.feeAmount)\n                setOneCoinPrice(data.oneTokenValue)\n            } catch (error) {\n                console.error(error)\n            }\n\n        }\n    }\n\n    const startSwap = async () => {\n        try {\n            if (token1.value && token2.value && token1Amount > 0) {\n                try {\n                    const data = await swap({\n                        input: token1.value,\n                        output: token2.value,\n                        amount: token1Amount.toString(),\n                        phrase: storage!.encryptedPhrase,\n                        slippage: slippageArr.find(item => item.selected)!.value.toString(),\n                        deadline: Math.floor(deadline * 60) \n                    }).unwrap()\n                    dispatch(changeSuccess(true))\n                    setOpen(false)\n                    refetch()\n                } catch (error) {\n                    console.error(error)\n                    dispatch(changeError({ activate: true }))\n                }\n\n            }\n        } catch (error) {\n\n        }\n    }\n\n    useEffect(() => {\n        if (token1 && token2) {\n            change()\n        }\n    }, [token1, token2, token1Amount])\n\n    const settingRef = useModalSideExit(isSetting, setSetting)\n\n    if(isMultisig) return <div className=\"text-center py-2\">We are working on bringing Swap into MultiSig account. Please, select a wallet account until we finish it</div>\n\n    return <div className=\"flex items-center justify-center\">\n        <div className=\"flex flex-col w-[50%]\">\n            <div className=\"shadow-custom rounded-xl bg-white pt-3 pb-10 px-3 flex flex-col space-y-1\">\n                <div className=\"flex justify-between\">\n                    <div className=\"font-bold font-xl pb-2\">Swap</div>\n                    <div className=\"relative\">\n                        <img src=\"/icons/settings.svg\" className=\"cursor-pointer\" onClick={() => setSetting(!isSetting)} />\n                        {isSetting && <div ref={settingRef} className=\"absolute z-[300] shadow-custom bg-white rounded-xl min-w-[250px] left-0 translate-x-[-90%] bottom-0 translate-y-full p-3 text-sm\">\n                            <div className=\"flex flex-col space-y-4\">\n                                <div className=\"font-bold\">Transaction Settings</div>\n                                <div className=\"flex flex-col space-y-3\">\n                                    <div>Slippage tolerance</div>\n                                    <div className=\"flex space-x-1 px-2\">\n                                        {slippageArr.filter(s => !s.invisible).map((item, index) => <div key={index} onClick={() => {\n                                            const arr = [...slippageArr]\n                                            arr.forEach(i => i.selected = false)\n                                            arr[index].selected = true\n                                            setSlippageArr(arr)\n                                        }} className={`${item.selected ? \"bg-primary bg-opacity-100 text-white\" : \"\"} px-2 py-1 bg-greylish bg-opacity-10 cursor-pointer rounded-xl`}>{item.label}</div>)}\n                                        <div className=\"bg-greylish bg-opacity-10 rounded-xl flex items-center pl-3 pr-5 space-x-1\">\n                                            <input placeholder=\"0.5\" type=\"number\" value={((slippageArr.at(-1)!.value / 10) || undefined)} className=\"outline-none text-right bg-transparent max-w-[50px] unvisibleArrow\" min={0} step={\"any\"} max={100} onChange={(event) => {\n                                                const value = (event.target as HTMLInputElement).value\n                                                if (parseFloat(value) >= 0) {\n                                                    setSlippageArr(slippageArr.map((item, index) => {\n                                                        if (index === slippageArr.length - 1) {\n                                                            item.selected = true\n                                                            item.value = Math.max(0, Math.min(100, parseFloat(value))) * 10\n                                                        } else item.selected = false\n                                                        return item\n                                                    }))\n                                                } else if (!value || value === \"0\") {\n                                                    setSlippageArr(slippageArr.map((item, index) => {\n                                                        if (index === slippageArr.length - 1) {\n                                                            item.selected = false\n                                                            item.value = 0\n                                                        } else if (index == 1) { item.selected = true } else item.selected = false\n                                                        return item\n                                                    }))\n                                                }\n                                            }} />\n                                            <span>%</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"flex flex-col space-y-3\">\n                                    <div>Transaction deadline</div>\n                                    <div className=\"flex space-x-1 px-2 items-center\">\n                                        <input type=\"number\" value={deadline === 1.5 ? undefined : deadline} onChange={(event) => {\n                                            const value = (event.target as HTMLInputElement).value\n                                            if (value) {\n                                                setDeadline(parseFloat(value))\n                                            } else setDeadline(1.5)\n                                        }} className=\"bg-greylish bg-opacity-10 rounded-xl py-1 w-[100px] outline-none px-2 text-right unvisibleArrow\" placeholder=\"1.5\" />\n                                        <div>minutes</div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"bg-greylish bg-opacity-10 items-center flex justify-between rounded-md py-3 px-3\">\n                    <div className=\"flex flex-col space-y-2 w-[130px]\">\n                        <div>\n                            <Dropdown onChange={(w: DropDownItem, selected: DropDownItem) => {\n                                if (w.value === token2.value) {\n                                    setToken2(selected)\n                                }\n                            }} parentClass=\"shadow-custom bg-white rounded-md\" onSelect={setToken1} className=\"border-none py-1 space-x-4 text-sm\" nameActivation={true} selected={token1} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, value: w.value, coinUrl: w.coinUrl, feeName: w.feeName, id: w.value, className: \"text-sm\" }))} />\n                        </div>\n                        <div>\n                            <input ref={token1Input} onChange={async (e) => { await change(); setToken1Amount(parseFloat((e.target.value || '0'))) }} type=\"number\" className=\"bg-transparent text-center outline-none unvisibleArrow max-w-[130px]\" placeholder=\"0\" min=\"0\" step=\"any\" />\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-2 items-end\">\n                        <div>\n                            Balance: {token1 && token1.name && balances[token1.name as keyof typeof balances] ? (balances[token1.name as keyof typeof balances]?.amount.toFixed(2) ?? 0) : 0}\n                        </div>\n                        <div className=\"flex space-x-2\">\n                            <button className=\"shadow-custom bg-white px-2 py-1 rounded-xl text-xs\" onClick={\n                                () => {\n                                    if (balances && token1 && balances[token1.name as keyof typeof balances] && balances[token1.name as keyof typeof balances]!.amount > 0) {\n                                        const amount = balances[token1.name as keyof typeof balances]!.amount * 0.5\n                                        token1Input.current!.value = amount.toFixed(2)\n                                        setToken1Amount(amount)\n                                    }\n                                }\n                            }>\n                                50%\n                            </button>\n                            <button className=\"shadow-custom bg-white px-2 py-1 rounded-xl text-xs\" onClick={() => {\n                                if (balances && token1 && balances[token1.name as keyof typeof balances] && balances[token1.name as keyof typeof balances]!.amount > 0) {\n                                    const amount = balances[token1.name as keyof typeof balances]!.amount\n                                    token1Input.current!.value = amount.toFixed(2)\n                                    setToken1Amount(amount)\n                                }\n                            }}>\n                                MAX\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex items-center justify-center\">\n                    <div className=\"bg-greylish bg-opacity-10 px-3 py-1 rounded-lg\">\n                        <img src=\"/icons/arrowdown.svg\" alt=\"\" />\n                    </div>\n                </div>\n                <div className=\"flex bg-greylish bg-opacity-10 justify-between rounded-md py-3 px-3\">\n                    <div className=\"flex flex-col space-y-2 w-[130px]\">\n                        <div>\n                            <Dropdown onChange={(w: DropDownItem, selected: DropDownItem) => {\n                                if (w.value === token1.value) {\n                                    setToken1(selected)\n                                }\n                            }} parentClass=\"shadow-custom bg-white rounded-md\" onSelect={setToken2} className=\"border-none py-1 space-x-4 text-sm\" nameActivation={true} selected={token2} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, value: w.value, feeName: w.feeName, coinUrl: w.coinUrl, id: w.value, className: \"text-sm\" }))} />\n                        </div>\n                        <div>\n                            {!(!token1Amount) && (!coinLoading ?\n                                <>\n                                    <div className=\"text-center outline-none unvisibleArrow\">\n                                        {parseFloat(appAmount).toFixed(2)}\n                                    </div>\n                                </> : <div className=\"text-center\"><ClipLoader size=\"24\" /></div>)\n                            }\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col items-end h-full\">\n                        <div className=\"text-right outline-none unvisibleArrow\">\n                            Balance: {token2 && token2.name && balances[token2.name as keyof typeof balances] ? (balances[token2.name as keyof typeof balances]?.amount.toFixed(2) ?? 0) : 0}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"px-8 py-3 font-extralight text-sm\">\n                <div className=\"flex justify-between\">\n                    <div>Rate:</div>\n                    <div className=\"flex\">1 {token1.name} = {!coinLoading ? parseFloat(oneCoinPrice).toFixed(2) : <div className=\"px-3\"><ClipLoader size={18} /></div>} {token2.name}</div>\n                </div>\n                <div className=\"flex justify-between\">\n                    <div>Fee:</div>\n                    <div className=\"flex\">{!coinLoading ? fee : <div className=\"px-3\"><ClipLoader size={18} /> </div>} {token1.name}</div>\n                </div>\n            </div>\n            <div className=\"text-center mx-8\">\n                <button className=\"bg-primary w-full py-3 text-white rounded-xl\" onClick={() => setOpen(true)}>\n                    {isLoading ? <ClipLoader /> : \"Swap\"}\n                </button>\n            </div>\n        </div>\n        {isOpen && <Modal onDisable={setOpen} title=\"Confirm Swap\" className=\"lg:left-[55.5%]\">\n            <div className=\"flex flex-col -mx-5 space-y-5\">\n                <div className=\"flex flex-col py-2 pb-10 space-y-7 border-b-2 px-5\">\n                    <div className=\"grid grid-cols-[7%,73%,20%] items-center\">\n                        <div>\n                            <img src={`${token1.coinUrl}`} alt=\"\"  className=\"w-[20px[ h-[20px]\"  />\n                        </div>\n                        <div className=\"font-bold\">\n                            {token1Amount}\n                        </div>\n                        <div className=\"text-right\">\n                            {token1.name}\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-[7%,73%,20%] items-center\">\n                        <div>\n                            <img src={`/icons/longdown.svg`} alt=\"\"/>\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-[7%,73%,20%] items-center\">\n                        <div>\n                            <img src={`${token2.coinUrl}`} className=\"w-[20px[ h-[20px]\" alt=\"\" />\n                        </div>\n                        <div className=\"font-bold\">\n                            {parseFloat(appAmount).toFixed(2)}\n                        </div>\n                        <div className=\"text-right\">\n                            {token2.name}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col px-5 text-xs space-y-1\">\n                    <div className=\"flex justify-between\">\n                        <div>Rate:</div>\n                        <div className=\"flex\">1 {token1.name} = {!coinLoading ? parseFloat(oneCoinPrice).toFixed(2) : <div className=\"px-3\"><ClipLoader size={18} /></div>} {token2.name}</div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <div>Fee:</div>\n                        <div className=\"flex\">{!coinLoading ? fee : <div className=\"px-3\"><ClipLoader size={18} /> </div>} {token1.name}</div>\n                    </div>\n                </div>\n                <div className=\"flex justify-center\">\n                    <button className=\"bg-primary w-3/5 py-3 text-white rounded-xl\" onClick={startSwap}>{isLoading ? <ClipLoader /> : \"Confirm Swap\"}</button>\n                </div>\n            </div>\n        </Modal>}\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess(val))} text=\"Successfully\" />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n}\n\nexport default Swap;","import { useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport CreatePassword from \"../../components/import/createPassword\";\nimport Login from \"../../components/import/login\";\nimport { useAccountExistMutation } from \"../../redux/api\";\n\nconst Import = () => {\n    const [accountExist, { error: reqError, isLoading }] = useAccountExistMutation()\n    const [input, setInput] = useState<string>()\n    const [index, setIndex] = useState(0)\n    const [isError, setError] = useState('')\n\n    const Submitted = async () => {\n        if (input) {\n            try {\n                setError('')\n                const data = await accountExist({ phrase: input.trim() }).unwrap()\n                if (!data!.result) setIndex(1)\n                else setIndex(2)\n            } catch (error: any) {\n                console.error(error)\n                setError(error?.data?.message)\n            }\n        }\n    }\n\n    return <>\n        {index === 0 ? <section className=\"h-screen flex flex-col items-center justify-center gap-8\">\n            <div className=\"text-2xl sm:text-3xl text-primary text-center\">Import Your Recovery Phrase</div>\n            <div className=\"text-greylish\">\n                Enter your recovery (seed) phrase.\n                <br />\n                Only import on devices you trust.\n            </div>\n            <div className=\"flex flex-col gap-5 justify-center items-center\">\n                <div>\n                    <textarea onChange={(e) => setInput(e.target.value)} className=\"border-2 p-3 outline-none w-[300px] sm:w-[470px]\" placeholder=\"fish boot hand foot\"  rows={7}></textarea>\n                </div>\n                {isError && <div className=\"text-red-500\">{isError}</div>}\n                <button onClick={Submitted} className=\"bg-primary text-white px-5 py-2 rounded-xl w-[200px]\">{isLoading ? <ClipLoader /> : \"Import Account\"}</button>\n            </div>\n        </section>\n            :\n            input ? index === 1 ? <CreatePassword phrase={input} /> : <Login phrase={input} /> : null\n        }\n\n    </>\n}\n\nexport default Import;","import { useSelector } from \"react-redux\";\nimport { generate } from \"shortid\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\n\n\nconst Assets = () => {\n    const selectBalance = useSelector(SelectBalances)\n    return <>\n        <div>\n            {/* <div className=\"font-semibold text-xl\">Assets</div> */}\n            <div className=\"w-full sm:px-5 /pt-4 pb-6 \">\n                <div id=\"header\" className=\"grid grid-cols-[35%,25%,20%,20%] sm:grid-cols-[25%,15%,15%,20%,12.5%,12.5%] sm:px-8 pb-5 /py-5\" >\n                    <div className=\"text-sm sm:text-base\">Assets</div>\n                    <div className=\"text-sm sm:text-base\">Balance</div>\n                    <div className=\"text-sm sm:text-base\">Amount</div>\n                    <div className=\"hidden sm:block\">USD Price</div>\n                    <div className=\"hidden sm:block\">24h</div>\n                    <div className=\"text-sm sm:text-base\">% Assets</div>\n                </div>\n                <div className=\"pb-5 px-2 sm:px-8 shadow-custom rounded-xl\">\n                    {Object.values(selectBalance).map((item: IBalanceItem, index) => {\n                        return <div key={generate()} className=\"grid grid-cols-[35%,25%,20%,20%] sm:grid-cols-[25%,15%,15%,20%,12.5%,12.5%] border-b border-black py-5\" >\n                            <div className=\"flex space-x-3 items-center\">\n                                <div><img src={item?.coins?.coinUrl} width={30} height={30} alt=\"\" /></div>\n                                <div>{item?.coins?.name} </div>\n                            </div>\n                            <div>\n                                $ {(item.amount * item.tokenPrice).toFixed(2)}\n                            </div>\n                            <div>\n                                {(item.amount||0).toFixed(2)}\n                            </div>\n                            <div className=\"hidden sm:block\">\n                                $ {(item.tokenPrice||0).toFixed(2)}\n                            </div>\n                            <div className=\"hidden sm:block\">\n                               % {(item.per_24||0).toFixed(2)}\n                            </div>\n                            <div>\n                               % {(item.percent||0).toFixed(2)}\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Assets;","import { Fragment, useEffect, useState, useRef } from 'react';\nimport TeamContainer from '../../components/teams/teamContainer'\nimport Modal from '../../components/modal'\nimport AddTeams from '../../components/teams/buttons/addTeam'\nimport AddMemberModal from '../../components/teams/buttons/addMember'\nimport { ClipLoader } from 'react-spinners';\nimport { TeamInfoWithMembers } from '../../types/sdk/Team/GetTeamsWithMembers';\nimport { generate } from 'shortid';\nimport Success from '../../components/success';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks'\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice'\nimport Error from '../../components/error';\nimport { useLazyGetTeamsWithMembersQuery } from '../../redux/api';\nimport { result } from 'lodash';\n\n\nconst Teams = () => {\n\n    const [teamCount] = useState(3)\n    const [skipCount, setSkipCount] = useState(0)\n    const skipRef = useRef(0)\n\n    const [trigger, result] = useLazyGetTeamsWithMembersQuery();\n\n\n    const isSuccess = useAppSelector(selectSuccess)\n    const isError = useAppSelector(selectError)\n    const dispatch = useAppDispatch()\n\n    const [addTeamModal, setAddTeamModal] = useState(false)\n    const [addMemberModal, setAddMemberModal] = useState(false)\n\n    const [teams, setTeams] = useState<TeamInfoWithMembers[]>([])\n\n    const maxTeamCount = useRef(0)\n\n    useEffect(() => {\n        if (result.data) {\n            maxTeamCount.current = result.data.total;\n            if (skipRef.current !== 0) {\n                setTeams([...teams, ...result.data.teams])\n            } else {\n                setTeams(result.data.teams)\n            }\n            dispatch(changeSuccess(false))\n        }\n    }, [result.data])\n\n    useEffect(() => {\n            skipRef.current = skipCount\n            trigger({ take: teamCount, skip: skipCount })\n    }, [skipCount])\n\n\n    useEffect(() => {\n        if (!isSuccess && result.data) {\n            //refetch()\n            skipRef.current = 0;\n            trigger({ take: teams.length < teamCount ? teamCount : teams.length, skip: skipRef.current })\n        }\n    }, [isSuccess])\n\n    return <div>\n        <div className=\"flex sm:justify-between pb-5 space-x-3 md:space-x-0\">\n            <div className=\"grid grid-cols-2 md:grid-cols-3 sm:gap-10 gap-1 col-span-4\">\n                <button className=\"bg-primary px-6 py-2 rounded-xl text-white text-xs sm:text-base\" onClick={() => setAddTeamModal(true)}>Add Team</button>\n                <button className=\"bg-primary px-6 py-2 rounded-xl text-white text-xs sm:text-base\" onClick={() => setAddMemberModal(true)}>Add Person</button>\n            </div>\n            {/* <button className=\"px-5 py-2 bg-greylish bg-opacity-5 rounded-xl\">\n                Export\n            </button> */}\n        </div>\n        <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n            <div id=\"header\" className=\"hidden sm:grid grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] border-b border-black sm:pb-5 px-5\" >\n                <div className=\"font-normal\">Name</div>\n                <div className=\"font-normal hidden lg:block\">Team</div>\n                <div className=\"font-normal\">Amount</div>\n                <div className=\"font-normal\">Wallet Address</div>\n            </div>\n            <div>\n                {teams.map(w => w && w.members && w.members.length > 0 ? <Fragment key={generate()}><TeamContainer {...w} /></Fragment> : undefined)}\n                {teams.map(w => w && (!w?.members || w?.members?.length === 0) ? <Fragment key={generate()}><TeamContainer {...w} /></Fragment> : undefined)}\n\n                {(result.isLoading || result.isFetching) && <div className=\"flex justify-center py-10\"><ClipLoader /></div>}\n            </div>\n        </div>\n        {(!result.isLoading && !result.isFetching) && (teams.length ?? 0) < maxTeamCount.current && <div className=\"flex justify-center py-4\">\n            <button className=\"text-primary px-5 py-3 rounded-xl border border-primary\" onClick={() => {\n                if (maxTeamCount.current - (teams.length ?? 0) < teamCount) {\n                    setSkipCount(maxTeamCount.current - (maxTeamCount.current - teams.length))\n                } else {\n                    setSkipCount(teams.length)\n                }\n            }}>\n                Load More\n            </button>\n        </div>}\n        {addTeamModal &&\n            <Modal onDisable={setAddTeamModal}>\n                <AddTeams onDisable={setAddTeamModal} />\n            </Modal>}\n        {addMemberModal &&\n            <Modal onDisable={setAddMemberModal}>\n                <AddMemberModal onDisable={setAddMemberModal} />\n            </Modal>}\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess(val))} text=\"Successfully\" />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({activate: val}))} />}\n    </div>\n}\n\nexport default Teams;","import { ClipLoader } from 'react-spinners';\nimport TransactionHistory from '../../components/dashboard/main/transactionHistory'\nimport Statistics from '../../components/dashboard/main/statistics'\nimport useTransactionProcess, { TransactionHook, TransactionHookByDate, TransactionHookByDateInOut } from '../../hooks/useTransactionProcess';\nimport { useEffect, useRef, useState } from 'react';\n\n\nconst Main = () => {\n    const [transactions] = useTransactionProcess(true)\n\n    return <main className=\"flex gap-5\">\n        <div className=\"w-1/2\">\n            <div className=\"grid grid-cols-2 gap-8 max-h-full\">\n                <Statistics />\n            </div>\n        </div>\n        <div className=\" w-1/2\">\n            <div id=\"transaction\" className=\"pb-14 pt-[30px]\">\n                {transactions ? <TransactionHistory transactions={transactions} /> : <div className=\"flex justify-center\"> <ClipLoader /></div>}\n            </div>\n        </div>\n    </main>\n}\n\nexport default Main;","import dateFormat from \"dateformat\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { generate } from \"shortid\";\nimport Web3 from \"web3\";\nimport TransactionItem from \"../../components/transactionItem\";\nimport { useLazyGetTransactionsQuery } from \"../../redux/api\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { AltCoins, Coins, TransactionFeeTokenName, TransactionDirection } from \"../../types\";\nimport { TransactionStatus } from \"../../types/dashboard/transaction\";\nimport { CSVLink } from \"react-csv\";\nimport _ from \"lodash\";\nimport useTransactionProcess, { TransactionHook, TransactionHookByDateInOut } from \"../../hooks/useTransactionProcess\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\nimport useMultisig from \"../../hooks/useMultisig\";\nimport { selectMultisigTransactions } from \"../../redux/reducers/multisig\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"../../components/dashboard/accordion\";\n\n\nconst Transactions = () => {\n    const storage = useAppSelector(selectStorage);\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const multisigData = useAppSelector(selectMultisigTransactions)\n\n    const { refetch, fetchTxs, isMultisig, data, signData, isTransactionLoading } = useMultisig()\n\n    const [take, setTake] = useState(4)\n    // const [trigger, { data: transactions }] = useLazyGetTransactionsQuery()\n    const [list, transactions] = useTransactionProcess(true)\n\n    const [multiSkip, setMultiSkip] = useState(0)\n\n    useEffect(() => {\n        if (isMultisig) {\n            const interval = setInterval(() => {\n                refetch(true, 0, (multisigData?.length || 20))\n            }, 30000)\n            return () => clearInterval(interval)\n        }\n    }, [selectedAccount, multisigData])\n\n\n    return <>\n        <div>\n            <div className=\"text-2xl font-bold px-5\">\n                Transactions\n            </div>\n            <div className=\"w-full px-5 pt-4 pb-3 rounded-xl\">\n                <div id=\"header\" className=\"grid grid-cols-[25%,45%,30%] sm:grid-cols-[39%,31%,15%,15%] border-b border-black pb-3 \" >\n                    <div className=\"sm:hidden text-xs font-medium\">Recipient/Sender</div>\n                    <div className=\"hidden sm:block text-xs sm:text-base font-medium\">{isMultisig ? \"Your Confirmation\" : \"Recipient/Sender\"}</div>\n                    <div className=\"text-xs sm:text-base font-medium\">{isMultisig ? \"Action\" : \"Paid Amount\"}</div>\n                    <div className=\"font-medium hidden md:block\">{isMultisig ? \"Signatures\" : \"Details\"}</div>\n                    {!isMultisig && <> <div className=\"place-self-end \">\n                        {transactions && <CSVLink className=\"font-normal px-2 sm:px-5 py-1 rounded-xl cursor-pointer bg-greylish bg-opacity-10 flex items-center justify-center xl:space-x-5\" filename={\"remox_transactions.csv\"} data={transactions.result.map(w => {\n                            let feeToken = Object.entries(TransactionFeeTokenName).find(s => s[0] === w.tokenSymbol)?.[1]\n                            return {\n                                'Sent From:': w.from,\n                                'Amount:': parseFloat(Web3.utils.fromWei(w.value, 'ether')).toFixed(4) + ` ${feeToken ? Coins[feeToken].name : \"Unknown\"}`,\n                                'To:': w.to,\n                                'Date': dateFormat(new Date(parseInt(w.timeStamp) * 1e3), \"mediumDate\"),\n                                \"Gas\": parseFloat(w.gasUsed) * parseFloat(w.gasPrice),\n                                \"Block Number\": w.blockNumber,\n                                \"Transaction Hash\": w.hash,\n                                \"Block Hash\": w.blockHash,\n                                \"Input\": w.input\n                            }\n                        })}>\n                            <div className={'hidden xl:block'}>Export</div>\n                            <img src=\"/icons/downloadicon.svg\" alt=\"\" />\n                        </CSVLink>}\n                    </div></>}\n                </div>\n                {!isMultisig && <> <div>\n                    {list ? Object.entries(list).map(([date, transactionObj]) => {\n                        const recievedTransactions = transactionObj.recieved;\n                        const sentTransactions = transactionObj.sent;\n                        return <Fragment key={date}>\n                            {recievedTransactions.length > 0 && <Accordion grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,25%,15%]\"} direction={TransactionDirection.In} date={date} dataCount={recievedTransactions.length} status={TransactionStatus.Completed}>\n                                <div>\n                                    {recievedTransactions.map(({ amount, address, coinName, blockNumber, date, coin }) => {\n                                        return <TransactionItem key={generate()} hash={blockNumber} address={address} amountCoin={amount} coinName={coinName} date={date} coin={coin} status={TransactionStatus.Completed} />\n                                    })}\n                                </div>\n                            </Accordion>}\n                            {sentTransactions.length > 0  && <Accordion grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,15%,15%]\"} direction={TransactionDirection.Out} date={date} dataCount={sentTransactions.length} status={TransactionStatus.Completed}>\n                                <div>\n                                    {sentTransactions.map(({ amount, coinName, blockNumber, address, date, coin }) => {\n                                        return <TransactionItem key={generate()} hash={blockNumber} address={address} date={date} amountCoin={amount} coinName={coinName} coin={coin} status={TransactionStatus.Completed} />\n                                    })}\n                                </div>\n                            </Accordion>}\n                        </Fragment>\n                    }) : <div className=\"text-center\"><ClipLoader /></div>}\n                </div>\n                    {/* {transactions && list && take < transactions.result.length && take < Object.values(list).length && <div className=\"flex justify-center pt-4\">\n                        <button className=\"text-primary px-5 py-3 rounded-xl border border-primary\" onClick={() => {\n                            if (transactions.result.length - take < 4) {\n                                setTake(transactions.result.length - (transactions.result.length - take))\n                            } else {\n                                setTake(take + 4 < transactions.result.length ? take + 4 : transactions.result.length)\n                            }\n                        }}>\n                            Load More\n                        </button>\n                    </div>} */}\n                </>}\n                {\n                    isMultisig && <div>\n                        {multisigData ?\n                            multisigData.length > 0 ? <>\n                                {multisigData.filter(w => w.method).map((w, i) => <div key={generate()} className=\"pl-5 grid grid-cols-[45%,25%,15%,15%] min-h-[75px] py-6 border-b border-black items-center\">\n                                    <div>\n                                        {w.executed ? <div className=\"text-white bg-green-500 border-2 border-green-500 rounded-xl px-3 py-1 text-center text-xs w-[125px]\">Submitted</div> : null}\n                                        {w.executed ? null : w.confirmations.includes(storage!.accountAddress) ? <div className=\"text-white bg-primary border-2 border-primary rounded-xl px-3 py-1 text-center text-xs w-[125px]\">Confirmed</div> : <div className=\"border-2 text-center border-primary  px-3 py-1 rounded-xl text-xs w-[125px]\">Not confirmed yet</div>}\n                                    </div>\n                                    <div className=\"flex flex-col space-y-1\">\n                                        <div>\n                                            <div className=\"border-b border-black inline\">\n                                                {w.method!.split('').reduce((acc, w, i) => {\n                                                    if (i === 0) return acc + w.toUpperCase()\n                                                    if (w !== w.toLowerCase() && i > 0) return acc + \" \" + w\n                                                    return acc + w;\n                                                }, '')}\n                                            </div>\n                                        </div>\n                                        {w.owner ? <div className=\"truncate pr-10 text-xs\">{w.method?.toLowerCase().includes('transfer') ? 'To' : 'Owner'}: {w.owner}</div> : null}\n                                        {w.valueOfTransfer ? <div className=\"truncate pr-10 text-xs\">Value: {w.valueOfTransfer} {(Object.values(Coins).find((s: AltCoins) => s.contractAddress.toLowerCase() === w.destination.toLowerCase()) as AltCoins)?.name}</div> : null}\n                                        {w.newOwner ? <div className=\"truncate pr-10 text-xs\">New Owner: {w.newOwner}</div> : null}\n                                        {w.requiredCount ? <div className=\"truncate pr-10 text-xs\">New Signature Threshold: {+w.requiredCount}</div> : null}\n                                    </div>\n                                    <div className=\"font-semibold \">\n                                        {w.confirmations.length} <span className=\"font-medium\">out of</span> {w.method?.toLowerCase().includes(\"transfer\") ? signData?.executinTransactions : signData?.changingMultiSigProperties}\n                                    </div>\n                                    <div className=\"flex flex-col justify-center cursor-pointer text-blue-400 items-end pr-5 md:pr-0 lg:pr-5\">\n                                        <Link to={`/multisig/${w.id}`}>View</Link>\n                                    </div>\n                                </div>)}\n\n                            </> : <div className=\"flex flex-col justify-center\">\n                                <div className=\"text-center py-3\"><ClipLoader /></div>\n                                <div className=\"text-center text-xs text-gray-500\">It can take longer</div>\n                            </div> : <div className=\"text-center py-3\">No Transaction Yet</div>}\n\n                        {multisigData && multisigData.length > 0 && (!multisigData.some(s => s.id === 1)) && <div className=\"flex justify-center py-4\"> <button className=\"text-primary px-5 py-3 rounded-xl border border-primary\" onClick={() => {\n                            setMultiSkip((multisigData?.length ?? 0))\n                            fetchTxs(true, (multisigData?.length ?? 0))\n                        }}>\n                            {isTransactionLoading ? <div> <ClipLoader /> </div> : \"Load More\"}\n                        </button></div>}\n                    </div>\n                }\n            </div>\n        </div>\n    </>\n}\n\nexport default Transactions;","import dateFormat from \"dateformat\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ClipLoader } from \"react-spinners\";\nimport Web3 from \"web3\";\nimport Dropdown from \"../../components/dropdown\";\nimport { useLazyGetTransactionsQuery } from \"../../redux/api\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { SelectCurrencies } from \"../../redux/reducers/currencies\";\nimport { Coins, CoinsURL, TransactionFeeTokenName } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport lodash from \"lodash\";\nimport { Transactions } from \"../../types/sdk\";\nimport _ from \"lodash\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\n\nconst Details = () => {\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const currencies = useAppSelector(SelectCurrencies)\n    const params = useParams<{ id: string }>()\n\n    const [totalAmount, setTotalAmount] = useState<number>();\n    const [transactionFee, setTransactionFee] = useState<number>();\n\n    const [list, setList] = useState<{ [name: string]: Transactions[] }>()\n    const [trigger, { data: transactions, isLoading, isFetching }] = useLazyGetTransactionsQuery()\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        if (selectedAccount) {\n            trigger(selectedAccount)\n        }\n    }, [])\n\n    const maList = useMemo(() => {\n        if (transactions?.result) {\n            const res = lodash.groupBy(transactions.result, lodash.iteratee('blockNumber'))\n            let newObject: { [name: string]: Transactions[] } = {}\n            Object.entries(res).map(([key, value]) => {\n                const data = _(value).orderBy((o) => BigInt(o.value), ['desc']).uniqBy('hash').value()\n                newObject[key] = data\n            })\n            return newObject;\n        }\n    }, [transactions?.result])\n\n    useEffect(() => {\n        if(maList) setList(maList)\n    }, [transactions?.result])\n\n    useEffect(() => {\n        if (list) {\n            setLoading(true)\n            if (list[params.id][0].from.toLowerCase() !== selectedAccount.toLowerCase()) {\n                const maTx = list[params.id].find(w => w.to.toLowerCase() === selectedAccount.toLowerCase())\n                if (maTx) {\n                    let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === maTx.tokenSymbol)?.[1];\n                    const coin = feeToken ? Coins[feeToken] : Coins.cUSD\n                    setTotalAmount(lodash.round((feeToken ? (currencies[coin.name]?.price ?? 0) : 0) * Number(Web3.utils.fromWei(maTx.value, 'ether')), 6))\n\n                    setTransactionFee(Number(Web3.utils.fromWei((Number(maTx.gasUsed) * Number(maTx.gasPrice)).toString(), 'ether')))\n                }\n            } else {\n                const total = lodash.round(list[params.id].reduce((a, c) => {\n                    let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === c.tokenSymbol)?.[1];\n                    const coin = feeToken ? Coins[feeToken] : Coins.cUSD\n                    a += (feeToken ? (currencies[coin.name]?.price ?? 0) : 0) * Number(Web3.utils.fromWei(c.value, 'ether'))\n                    return a;\n                }, 0), 6)\n                setTotalAmount(total)\n\n                const fee = list[params.id].reduce((a, c) => {\n                    a += Number(Web3.utils.fromWei((Number(c.gasUsed) * Number(c.gasPrice)).toString(), 'ether'))\n                    return a\n                }, 0)\n\n                setTransactionFee(fee)\n            }\n            setLoading(false)\n        }\n    }, [list, params.id])\n\n    return <>\n        <div>\n            <div className=\"w-full shadow-custom px-5 py-14 rounded-xl flex flex-col items-center justify-center\">\n                <div className=\"font-bold text-xl sm:text-2xl\">\n                    Transaction Details\n                </div>\n                {list && (!isLoading && !loading) ? <div className=\"flex flex-col sm:grid sm:grid-cols-3 py-5 gap-14\">\n                    {list[params.id].length === 1 ?\n                        TransactionDetailInput(\"Transaction Hash\", `${list[params.id][0].hash}`, `https://explorer.celo.org/tx/${list[params.id][0].hash}/token-transfers`)\n                        :\n                        <Dropdown displayName=\"Transaction Hash\" className=\"h-full bg-greylish bg-opacity-10 font-semibold\" onSelect={(w: DropDownItem) => {\n                            window.open(`https://explorer.celo.org/tx/${w.name}/token-transfers`, '_blank')\n                        }} nameActivation={true} selected={{ name: \"Go to Explorer\", coinUrl: CoinsURL.None }} list={[\n                            ...list[params.id].map(w => ({ name: w.hash, coinUrl: CoinsURL.None })),\n                        ]} />\n                    }\n                    {TransactionDetailInput(\"Paid To\", [...new Set(list[params.id].map(w => w.to))].length === 1 ? '1 person' : `${[...new Set(list[params.id].map(w => w.to))].length} people`)}\n                    {TransactionDetailInput(\"Total Amount\", `${totalAmount} USD`)}\n                    {TransactionDetailInput(\"Transaction Fee\", `${transactionFee}`)}\n                    {TransactionDetailInput(\"Created Date & Time\", `${dateFormat(new Date(Number(list[params.id][0].timeStamp) * 1e3), 'dd/mm/yyyy hh:MM:ss')}`)}\n                    {TransactionDetailInput(\"Status\", <div className=\"flex items-center gap-x-2\"><div className=\"bg-green-400 h-[10px] w-[10px] rounded-full\"></div>Completed</div>)}\n                    {list[params.id].length === 1 || [...new Set(list[params.id].map(w => w.to))].length === 1 ?\n                        TransactionDetailInput(\"Wallet Address\",\n                            (list[params.id][0].from.toLowerCase() !== selectedAccount.toLowerCase() ? list[params.id][0].from : list[params.id][0].to).split('').reduce((a, c, i, arr) => {\n                                return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n                            }, ''), undefined, () => window.navigator.clipboard.writeText(list[params.id][0].from)\n                        )\n                        :\n                        <Dropdown displayName=\"Wallet Address\" className=\"h-[75px] bg-greylish bg-opacity-10\" nameActivation={true} selected={{ name: \"Choose to copy an address\", coinUrl: CoinsURL.None }}\n                            onSelect={(w: DropDownItem) => {\n                                if (w.name) window.navigator.clipboard.writeText(w.name)\n                            }}\n                            list={[\n                                ...list[params.id].map(w => ({ name: w.to, coinUrl: CoinsURL.None, disableAddressDisplay: true })),\n                            ]} />}\n                </div> : <ClipLoader />}\n            </div>\n        </div>\n    </>\n}\n\nexport default Details;\n\n\nconst TransactionDetailInput = (title: string, children: JSX.Element | JSX.Element[] | string, url?: string, onClick?: () => void) => {\n\n    return <div className=\"bg-greylish bg-opacity-10 flex flex-col px-4 py-3 rounded-xl min-h-[75px]\">\n        <div className=\"text-sm text-greylish opacity-80\">\n            {title}\n        </div>\n        <div className={`font-bold text-lg truncate ${onClick && \"cursor-pointer\"} ${url && \"cursor-pointer\"}`} onClick={() => {\n            url ? window.open(url, '_blank') : console.log(\"Wish you more money :)\")\n        }}>\n            {children}\n        </div>\n        { }\n    </div>\n}","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"../../components/dropdown\";\nimport { generate } from 'shortid'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member, MultipleTransactionData } from \"../../types/sdk\";\nimport { useGetBalanceQuery, useLazyGetTeamsWithMembersQuery, useSendCeloMutation, useSendStableTokenMutation, useSendMultipleTransactionsMutation, useSendAltTokenMutation, useSubmitTransactionsMutation } from \"../../redux/api\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport TeamInput from \"../../components/pay/teaminput\";\nimport { AltCoins, AltcoinsList, Coins, CoinsName, StableTokens, TransactionFeeTokenName } from \"../../types/coins\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport lodash from \"lodash\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\";\nimport Initalization from \"../../utility/init\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\nimport { useRefetchData } from \"../../hooks\";\n\n\nconst MassPay = () => {\n\n    const { state } : {state: {memberList?: Member[]}} = useLocation()\n    const memberList = state?.memberList\n    \n    const storage = useAppSelector(selectStorage)\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const isError = useAppSelector(selectError)\n    const balance = useAppSelector(SelectBalances)\n    const router = useHistory();\n    const dispatch = useAppDispatch()\n\n    // const { data, refetch } = useGetBalanceQuery()\n    const [refetch] = useRefetchData(true)\n\n    const [sendCelo] = useSendCeloMutation()\n    const [sendStableToken] = useSendStableTokenMutation()\n    const [sendMultiple] = useSendMultipleTransactionsMutation()\n    const [sendAltcoin] = useSendAltTokenMutation()\n\n    const [sendMultisig] = useSubmitTransactionsMutation()\n\n\n    const [getTeams, { data: teams, isLoading: teamLoading }] = useLazyGetTeamsWithMembersQuery()\n\n\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem | undefined>(memberList ? { name: \"Custom\", address: \"0\" } : undefined);\n\n    // const resMember = useRef<Array<Member & { selected: boolean }>>([])\n    const [resMember, setResMember] = useState<Array<Member & { selected: boolean }>>(memberList ? memberList.map(w => ({ ...w, selected: false })) : [])\n    const [members, setMembers] = useState<Member[] | undefined>(memberList);\n    const [selectedId, setSelectedId] = useState<string[]>([]);\n\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n\n    useEffect(() => {\n        getTeams({ take: Number.MAX_SAFE_INTEGER })\n        refetch()\n    }, [])\n\n\n    useEffect(() => {\n        if (balance && balance.CELO) {\n            setSelectedWallet({ name: \"Set all to\", address: \"\" })\n            const coins = Object.values(balance).map((coin: IBalanceItem) => ({\n                name: `${coin.amount.toFixed(3)} ${coin.coins.name}`,\n                type: coin.coins.value.toString(),\n                value: coin.coins.value,\n                coinUrl: coin.coins.coinUrl,\n                amount: coin.amount.toString(),\n            }))\n            setList(coins)\n        }\n    }, [balance])\n\n    useEffect(() => {\n        if (teams && teams.teams.length && !memberList) {\n            setSelectedTeam({ name: teams.teams[0].title, address: teams.teams[0].id })\n        }\n    }, [teams])\n\n    useEffect(() => {\n        if (teams && teams.teams.length && selectedTeam && selectedTeam.address && selectedTeam.name.toLowerCase() !== \"custom\") {\n            const team = teams.teams.find(w => w.id === selectedTeam.address)\n            if (team && team.members) {\n                setResMember(team.members.map(w => ({ ...w, selected: false })))\n            }\n            setMembers(teams.teams.find(w => w.id === selectedTeam.address)!.members)\n        }\n    }, [selectedTeam, teams])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const result: Array<MultipleTransactionData> = []\n\n        const mems = resMember.filter(w => selectedId.includes(w.id))\n\n        if (mems.length) {\n            for (let index = 0; index < mems.length; index++) {\n                let amount;\n                if (mems[index].usdBase) {\n                    amount = (parseFloat(mems[index].amount) * (balance[mems[index].currency as keyof typeof balance]?.tokenPrice ?? 1)).toString()\n                } else {\n                    amount = mems[index].amount\n                }\n                result.push({\n                    toAddress: mems[index].address,\n                    amount,\n                    tokenType: mems[index].currency\n                })\n\n                let secAmount = mems[index].secondaryAmount, secCurrency = mems[index].secondaryCurrency;\n\n                if (secAmount && secCurrency) {\n                    if (mems[index].secondaryAmount) {\n                        secAmount = (parseFloat(secAmount) * (balance[mems[index].secondaryCurrency as keyof typeof balance]?.tokenPrice ?? 1)).toString()\n                    }\n\n                    result.push({\n                        toAddress: mems[index].address,\n                        amount: secAmount,\n                        tokenType: secCurrency\n                    })\n                }\n            }\n        }\n\n        setIsPaying(true)\n\n        try {\n            if (storage!.accountAddress.toLowerCase() === selectedAccount.toLowerCase()) {\n                if (result.length === 1) {\n                    if (result[0].tokenType === CoinsName.CELO) {\n                        await sendCelo({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase\n                        }).unwrap\n\n                    } else if (result[0].tokenType === CoinsName.cUSD || result[0].tokenType === CoinsName.cEUR) {\n                        await sendStableToken({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            stableTokenType: StableTokens[(result[0].tokenType)]\n                        }).unwrap()\n                    } else {\n                        await sendAltcoin({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            altTokenType: AltcoinsList[(result[0].tokenType as AltcoinsList)]\n                        }).unwrap()\n                    }\n                }\n                else {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    await sendMultiple({\n                        multipleAddresses: arr,\n                        phrase: storage!.encryptedPhrase\n                    }).unwrap()\n                }\n            } else {\n                if (result.length === 1) {\n                    await sendMultisig({\n                        toAddress: result[0].toAddress,\n                        multisigAddress: selectedAccount,\n                        phrase: storage!.encryptedPhrase,\n                        tokenType: result[0].tokenType,\n                        value: result[0].amount,\n                    }).unwrap()\n                }\n                else {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    for (let i = 0; i < arr.length; i++) {\n                        await sendMultisig({\n                            toAddress: arr[i].toAddress,\n                            multisigAddress: selectedAccount,\n                            phrase: storage!.encryptedPhrase,\n                            tokenType: arr[i].tokenType,\n                            value: arr[i].amount,\n                        }).unwrap()\n                    }\n                }\n            }\n            setSuccess(true);\n            refetch()\n            // Initalization();\n\n\n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n\n        setIsPaying(false);\n    }\n\n\n    return <div>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"w-[95%] sm:w-[85vw] min-h-[75vh]\">\n                    <div className=\"w-full\">\n                        <div className=\"pl-14 text-xl font-semibold\">Mass Payout</div>\n                    </div>\n                    <div className=\" h-auto shadow-xl rounded-xl border flex flex-col gap-10 py-10\">\n                        {!teamLoading && teams && teams.teams.length === 0 ? <div className=\"flex justify-center\">No Team Yet. Please, first, create a team</div> : <><div className=\"flex flex-col px-4 sm:pl-12 sm:pr-[25%] gap-10\">\n                            <div className=\"flex flex-col space-y-3\">\n                                <span className=\"text-left text-sm font-semibold\">Paying From</span>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-3 sm:gap-x-10\">\n                                    {!(teams && selectedTeam) ? <ClipLoader /> : <Dropdown className=\"h-full\" disableAddressDisplay={true} onSelect={setSelectedTeam} nameActivation={true} selected={selectedTeam} list={teams.teams.map(w => ({ name: w.title, address: w.id }))} />}\n                                    {/* {!(balance && balance.CELO && selectedWallet) ? <ClipLoader /> : <Dropdown onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={list} disableAddressDisplay={true} />} */}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold\">Team Details</span>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                                            if (e.target.checked) setSelectedId(resMember.map(w => w.id))\n                                            else setSelectedId([])\n                                        }} />\n                                        <button type=\"button\">\n                                            Select All\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-[25%,45%,25%,5%] gap-5\">\n                                    <div className=\"hidden sm:block font-semibold\">Name</div>\n                                    <div className=\"hidden sm:block font-semibold\">Address</div>\n                                    <div className=\"hidden sm:block font-semibold\">Disbursement</div>\n                                    <div className=\"hidden sm:block\"></div>\n                                    {teams && resMember && members && members.length > 0 ? resMember.map((w, i) => <TeamInput generalWallet={selectedWallet!} setGeneralWallet={setSelectedWallet} selectedId={selectedId} setSelectedId={setSelectedId} key={w.id} index={i} {...w} members={resMember} setMembers={setResMember} />) : 'No Member Yet'}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                            <div className=\"flex justify-center\">\n                                <div className=\"flex flex-col-reverse sm:grid sm:grid-cols-2 w-[400px] justify-center gap-5\">\n                                    <button type=\"button\" className=\"border-2 border-primary px-3 py-2 text-primary rounded-lg\" onClick={() => router.goBack()}>Close</button>\n                                    <button type=\"submit\" className=\"bg-primary px-3 py-2 text-white flex items-center justify-center rounded-lg\">{isPaying ? <ClipLoader /> : 'Pay'}</button>\n                                </div>\n                            </div> </>}\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} onAction={() => { router.goBack() }} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: false, text: '' }))} />}\n    </div>\n\n}\n\nexport default MassPay;","import { useState } from 'react'\nimport shortid, { generate } from 'shortid'\nimport { AddOwner, RemoveOwner, ReplaceOwner } from '../../components'\nimport Avatar from '../../components/avatar'\nimport Modal from '../../components/modal'\nimport ChangeTreshold from '../../components/settings/owner/changeThreshold'\nimport useMultisig from '../../hooks/useMultisig'\n\nconst OwnerSetting = () => {\n    const { data, storage, signData } = useMultisig()\n\n    const [addOwnerModal, setAddOwnerModal] = useState(false)\n    const [replaceOwnerModal, setReplaceOwnerModal] = useState(false)\n    const [changeTresholdModal, setChangeTresholdModal] = useState(false)\n    const [removeModal, setRemoveModal] = useState(false)\n\n    const [selectedOwner, setSelectedOwner] = useState(\"\")\n    const [removable, setRemovable] = useState({name: \"\", address: \"\"})\n\n    if (!data) return <div className=\"text-center\">Please, select a MultiSig account</div>\n\n    return <div className=\"flex flex-col space-y-7\">\n        <div className=\"flex flex-col space-y-2\">\n            <div className=\"text-xl\">\n                Manage Owners\n            </div>\n            <div className=\"grid grid-cols-[55%,45%]\">\n                <div>\n                    Add, remove, replace, invite or rename owners\n                </div>\n                <div className=\"grid grid-cols-[45%,45%,10%]\">\n                    <div>\n                        <button className=\"px-5 py-2 bg-primary text-white rounded-lg font-extralight w-[150px] flex items-center justify-center gap-x-1\" onClick={() => {setChangeTresholdModal(true)}}>\n                            <img src=\"/icons/edit.svg\" alt=\"\" />\n                            Treshold\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"px-5 py-2 bg-primary text-white rounded-lg font-extralight w-[150px]\" onClick={() => setAddOwnerModal(true)}>\n                            + Add owner\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div>\n                Every transaction requires the confirmation of <span className=\"font-semibold\">{signData?.executinTransactions} out of {data?.length}</span> owners\n            </div>\n        </div>\n        <div className=\"shadow-custom px-12 py-4 -mx-10 rounded-xl\">\n            <div className=\"flex flex-col space-y-5\">\n                {data?.map((e, i) => <div key={shortid()} className=\"grid grid-cols-[55%,10%,5%,30%] items-center\">\n                    <div key={generate()} className=\"flex items-center space-x-2\">\n                        <div>\n                            <Avatar className=\"bg-opacity-10 font-bold text-xs\" name=\"Ow\" />\n                        </div>\n                        <div className=\"flex flex-col\">\n                            <div>Owner {i + 1}</div>\n                            <div className=\"font-thin text-sm\">Address: {e.toLowerCase()}</div>\n                        </div>\n                    </div>\n                    <div>\n                        {storage!.accountAddress.toLowerCase() === e.toLowerCase() ? <div className=\"font-thin text-sm bg-primary text-white inline rounded-xl px-4 py-1\">You</div> : \"\"}\n                    </div>\n                    <div className=\"cursor-pointer\" onClick={() => {\n                        setSelectedOwner(e)\n                        setReplaceOwnerModal(true)\n                    }}>\n                        <img src=\"/icons/editSetting.svg\" alt=\"\" />\n                    </div>\n                    <div className=\"cursor-pointer\" onClick={() => {\n                        setRemovable({name: `Owner ${i + 1}`, address: e})\n                        setRemoveModal(true)\n                    }}>\n                        <img src=\"/icons/trashSetting.svg\" alt=\"\" />\n                    </div>\n                </div>)}\n            </div>\n        </div>\n        {addOwnerModal && <Modal onDisable={setAddOwnerModal} disableX={true}>\n            <AddOwner onDisable={setAddOwnerModal} />\n        </Modal>}\n        {replaceOwnerModal && <Modal onDisable={setReplaceOwnerModal} disableX={true}>\n            <ReplaceOwner ownerAddress={selectedOwner} onDisable={setReplaceOwnerModal} />\n        </Modal>}\n        {changeTresholdModal && <Modal onDisable={setChangeTresholdModal} disableX={true}>\n            <ChangeTreshold onDisable={setChangeTresholdModal} />\n        </Modal>}\n        {removeModal && <Modal onDisable={setRemoveModal} disableX={true}>\n            <RemoveOwner address={removable.address} name={removable.name} onDisable={setRemoveModal} />\n        </Modal>}\n    </div>\n}\n\nexport default OwnerSetting","\nconst SpendingSetting = ()=>{\n\n    return <>\n    Spending\n    </>\n}\n\nexport default SpendingSetting;","import { NavLink, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport OwnerSetting from \"./owner\";\nimport SpendingSetting from \"./spending\";\n\nconst SettingLayout = () => {\n    const { path } = useRouteMatch();\n    return (\n        <div>\n            <div className=\"flex w-full relative after:absolute after:w-full after:h-[1px] after:bg-black after:bottom-[1px] after:left-0 after:z-10\">\n                <NavLink to={path} exact className=\"mx-5\" activeClassName='text-primary border-b-[3px] border-primary z-50'>\n                    <div className=\"flex gap-x-3 pb-3 \">\n                        <img src=\"/icons/ownerSetting.svg\" />\n                        <span>Owner</span>\n                    </div>\n                </NavLink>\n                {/* <NavLink to={`/dashboard/settings/spending`} className=\"mx-5\" activeClassName='text-primary border-b-[3px] border-primary z-50'>\n                    <div className=\"flex gap-x-3 pb-3\">\n                        <img src=\"/icons/spendingSetting.svg\" />\n                        Spending Limits (soon)\n                    </div>\n                </NavLink>\n                <div className=\"flex gap-x-3 px-5\">\n                    <img src=\"/icons/profileSetting.svg\" />\n                    Profile\n                </div> */}\n            </div>\n            <div className=\"px-10 py-5\">\n                <Switch>\n                    <Route path={path} exact>\n                        <OwnerSetting />\n                    </Route>\n                    <Route path={`/dashboard/settings/spending`}>\n                        <SpendingSetting />\n                    </Route>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default SettingLayout;","import { useDispatch, useSelector } from \"react-redux\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useConfirmTransactionsMutation, useGetMultisigTransactionQuery, useRevokeTransactionsMutation } from \"../../redux/api\"\nimport useMultisig from '../../hooks/useMultisig'\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\"\nimport { ClipLoader } from \"react-spinners\"\nimport { selectStorage } from \"../../redux/reducers/storage\"\nimport { useEffect, useState } from \"react\"\nimport { AltCoins, Coins } from \"../../types/coins\"\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\"\nimport Error from \"../../components/error\"\nimport { generate } from \"shortid\"\n\nconst MultisigTransaction = () => {\n    const history = useHistory()\n    const { id } = useParams<{ id: string }>()\n    const selectedAddress = useSelector(SelectSelectedAccount)\n    const storage = useSelector(selectStorage)\n    const { signData, data, refetch: refreshMultisig } = useMultisig()\n    const { isLoading, isFetching, data: transactionData, refetch } = useGetMultisigTransactionQuery({ address: selectedAddress, id })\n    const [revokeTransaction, { isLoading: revokeLoading }] = useRevokeTransactionsMutation()\n    const [confirmTransaction, { isLoading: confirmLoading }] = useConfirmTransactionsMutation()\n\n    const isError = useSelector(selectError)\n    const dispatch = useDispatch()\n\n    const [filterData, setFilterData] = useState<{\n        requiredCount?: string,\n        owner?: string,\n        newOwner?: string,\n        valueOfTransfer?: string,\n        method?: string\n    }>({})\n\n    useEffect(() => {\n        if (transactionData) {\n            setFilterData({\n                requiredCount: transactionData.txResult?.requiredCount,\n                owner: transactionData.txResult?.owner,\n                newOwner: transactionData.txResult?.newOwner,\n                valueOfTransfer: transactionData.txResult?.valueOfTransfer,\n                method: transactionData.txResult?.method\n            })\n        }\n    }, [transactionData, isFetching])\n\n    const submitAction = async () => {\n        if (!transactionData?.txResult.confirmations.includes(storage!.accountAddress)) {\n            try {\n                await confirmTransaction({\n                    multisigAddress: selectedAddress,\n                    transactionId: parseInt(id),\n                    phrase: storage!.encryptedPhrase\n                }).unwrap()\n                refetch()\n                refreshMultisig()\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: error?.data?.message }));\n            }\n\n        } else {\n            try {\n                await revokeTransaction({\n                    multisigAddress: selectedAddress,\n                    transactionId: parseInt(id),\n                    phrase: storage!.encryptedPhrase\n                }).unwrap()\n                refetch()\n                refreshMultisig()\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: error?.data?.message }));\n            }\n        }\n    }\n\n\n    if (isLoading || isFetching) {\n        return <div className=\"w-full h-screen flex items-center justify-center\"> <div><ClipLoader /></div></div>\n    }\n\n    return <div className=\"flex w-[60%] my-14 mx-auto\">\n        <div className=\"flex flex-col w-full space-y-10 flex-wrap\">\n            <div className=\"flex flex-col space-y-3\">\n                <div className=\"font-bold text-lg\">\n                    Transaction Status\n                </div>\n                <div>\n                    Transaction requires the confirmation of <span className=\"font-semibold\">{transactionData?.txResult.method?.toLowerCase().includes(\"transfer\") ? signData?.executinTransactions : signData?.changingMultiSigProperties} out of {data?.length} owners</span>\n                </div>\n            </div>\n            <div className=\"flex flex-wrap items-center justify-center gap-y-5\">\n                {data?.map((w, i, arr) =>\n                    <div key={generate()} className=\"flex flex-col   gap-4 items-center justify-center w-[120px]\" title={w}>\n                        <div className={`w-[50px] shadow-custom h-[50px] relative ${w.toLowerCase() === storage!.accountAddress.toLowerCase() ? \"bg-[#3EBE11]\" : \"\"} ${i !== 0 ? \"before:-translate-x-full before:absolute before:top-1/2 before:w-full before:h-[2px] before:bg-black\" : \"\"} ${i !== arr.length - 1 ? \"after:translate-x-full after:absolute after:top-1/2 after:w-full after:h-[2px] after:bg-black \" : \"\"} rounded-full ${transactionData?.txResult.confirmations.includes(w) ? \"bg-[#0055FF]\" : \"bg-[#E90D0D]\"}`}></div>\n                        <div className=\"truncate max-w-[120px] font-semibold\">\n                            {w.toLowerCase() !== storage!.accountAddress.toLowerCase() ? w.split('').reduce((a, c, i, arr) => {\n                                return i < 6 || (arr.length - i) < 3 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n                            }, '') : \"You\"}\n                        </div>\n                        <div className=\"h-[25px]\">\n                            {w.toLowerCase() !== storage!.accountAddress.toLowerCase() ? transactionData?.txResult.confirmations.includes(w) ? \"Approved\" : \"Pending\" : \"\"}\n                        </div>\n                    </div>\n                )}\n            </div>\n            <div className=\"shadow-custom w-full px-10 py-5\">\n                <div className=\"text-xl font-semibold pb-5\">Transaction Detail</div>\n                <div className=\"grid\" style={{\n                    gridTemplateColumns: `repeat(${Object.values(filterData).filter(s => s).length}, minmax(0, 1fr))`\n                }}>\n                    {filterData.method ? <div className=\"py-3 border-b border-black\">Action Name</div> : null}\n                    {filterData.valueOfTransfer ? <div className=\"py-3 border-b border-black\">Amount</div> : null}\n                    {filterData.owner ? <div className=\"py-3 border-b border-black\">{filterData.newOwner ? \"Old\" : \"Address\"}</div> : null}\n                    {filterData.newOwner ? <div className=\" py-3 border-b border-black\">New</div> : null}\n                    {filterData.requiredCount ? <div className=\" py-3 border-b border-black\">New Signature Threshold</div> : null}\n                    {filterData.method ? <div className=\" pt-3\">{\n                        filterData.method!.split('').reduce((acc, w, i) => {\n                            if (i === 0) return acc + w.toUpperCase()\n                            if (w !== w.toLowerCase() && i > 0) return acc + \" \" + w\n                            return acc + w;\n                        }, '')\n                    }</div> : null}\n                    {filterData.valueOfTransfer ? <div className=\"flex space-x-3 items-center pt-3\">\n                        <div>\n                            <img src={(Object.values(Coins).find((s: AltCoins) => s.contractAddress.toLowerCase() === transactionData?.txResult.destination.toLowerCase()) as AltCoins).coinUrl} alt=\"\" className='w-[25px] h-[25px]' />\n                        </div>\n                        <div>{filterData.valueOfTransfer}</div>\n                    </div> : null}\n                    {filterData.owner ? <div className=\" pt-3 text-sm truncate\" title={filterData.owner}>{filterData.owner}</div> : null}\n                    {filterData.newOwner ? <div className=\" pt-3 text-sm truncate\" title={filterData.newOwner}>{filterData.newOwner}</div> : null}\n                    {filterData.requiredCount ? <div className=\" pt-3 text-sm\" title={filterData.requiredCount}>{+filterData.requiredCount}</div> : null}\n                </div>\n            </div>\n            <div className=\"flex justify-center space-x-5\">\n                <div>\n                    <button className=\"border-2 rounded-xl border-primary px-5 py-2 w-[125px]\" onClick={() => history.goBack()}>\n                        Back\n                    </button>\n                </div>\n                { transactionData?.txResult.executed ? null : <div>\n                    <button onClick={submitAction} className={`${!transactionData?.txResult.confirmations.includes(storage!.accountAddress) ? \"bg-[#2D5EFF] border-[#2D5EFF]\" : \"bg-[#EF2727] border-[#EF2727]\"} border-2 text-white px-5 py-2 rounded-xl w-[125px]`}>\n                        {revokeLoading || confirmLoading ? <ClipLoader size={15} /> : !transactionData?.txResult.confirmations.includes(storage!.accountAddress) ? \"Approve\" : \"Revoke\"}\n                    </button>\n                </div>}\n            </div>\n        </div>\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: val, text: '' }))} />}\n    </div>\n}\n\nexport default MultisigTransaction","import { Coins } from \"../../types/coins\";\nimport Avatar from \"../avatar\";\nimport { Interval, Member } from \"../../types/sdk\";\nimport dateFormat from \"dateformat\";\n\nconst TeamItem = (props:  { member: Member, teamName: string, memberState: [Member[], React.Dispatch<React.SetStateAction<Member[]>>] }) => {\n\n    return <>\n        <div className=\"pl-[2px] items-start\">\n            <div className=\"flex space-x-3 items-center\">\n                <input type=\"checkbox\" checked={props.memberState[0].some(s=>s.id === props.member.id)} className=\"relative cursor-pointer max-w-[20px] max-h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                    const members = [...props.memberState[0]]\n                    if (e.target.checked) {\n                        if (!members.some(s => s.id === props.member.id)) {\n                            members.push(props.member)\n                            props.memberState[1](members)\n                        }\n                        } else {\n                            props.memberState[1](members.filter(m => props.member.id !== m.id))\n                        }\n                    }\n                } />\n                <div className=\"hover:cursor-pointer flex items-center space-x-1\">\n                    <Avatar name={props.member.name} />\n                    <div>\n                        {props.member.name}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"flex flex-col space-y-4\">\n            <div className=\" pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.member.amount}</div>\n                {props.member.usdBase ? <div>USD as {Coins[props.member.currency].name}</div> :\n                    <div>\n                        {Coins[props.member.currency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.member.currency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>\n            {props.member.secondaryCurrency && <div className=\"pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.member.secondaryAmount}</div>\n                {props.member.secondaryUsdBase ? <div>USD as {Coins[props.member.secondaryCurrency].name}</div> :\n                    <div>\n                        {Coins[props.member.secondaryCurrency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.member.secondaryCurrency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>}\n        </div>\n        <div className=\"pl-[2px] hidden sm:flex items-start\">\n            {(props.member.interval === Interval.monthly && \"Monthly\")}\n            {(props.member.interval === Interval.weakly && \"Weekly\")}\n        </div>\n        <div className=\"flex space-x-8\">\n            {props.member.paymantDate && <>\n                <div className=\"col-span-2 sm:col-span-1 pt-3 sm:pt-0 pl-[2px] truncate\">\n                    {/* {new Date().getUTCDay() < new Date(props.member.paymantDate).getUTCDay() ? dateFormat(date.addMonths(new Date(), 1), `${new Date(props.member.paymantDate).getUTCDay()} mmm yyyy`) : dateFormat(new Date(props.member.paymantDate), `dd mmm yyyy`)} */}\n                    {dateFormat(new Date(props.member.paymantDate), `dd ${dateFormat(new Date(), 'mmm')} yyyy`)}\n                </div>\n                {new Date().getUTCDay() < new Date(props.member.paymantDate).getUTCDay() && <div title=\"Late Payment\">\n                    <img src=\"/icons/warningmark.svg\" className=\"max-w-[20px] max-h-[20px]\" alt=\"\" />\n                </div>}\n            </>}\n        </div>\n\n    </>\n}\n\nexport default TeamItem;","import { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport { useDeleteTeamMutation, useUpdateTeamMutation } from \"../../redux/api\";\nimport { Member, TeamInfoWithMembers } from \"../../types/sdk\";\nimport Modal from \"../modal\";\nimport TeamItem from \"../payroll/teamItem\";\n\n\nconst TeamContainer = (props: TeamInfoWithMembers & { memberState: [Member[], React.Dispatch<React.SetStateAction<Member[]>>] }) => {\n\n    const [num, setNum] = useState(3)\n\n    return <>\n        <div className=\"col-span-4 flex space-x-3 py-4 pt-4 sm:pt-6 pb-1 px-5 items-center justify-start\">\n            <div>\n                <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                    const members = [...props.memberState[0]]\n                    if (e.target.checked) {\n                        props.members?.forEach(m => {\n                            if (!members.some(x => x.id === m.id)) {\n                                members.push(m)\n                            }\n                        })\n                        props.memberState[1](members)\n                    }else{\n                        props.memberState[1](members.filter(m => !props.members?.some(x => x.id === m.id)))\n                    }\n                }} />\n            </div>\n            <div className=\"font-semibold text-[1.5rem] overflow-hidden whitespace-nowrap\">\n                <div>{props.title}</div>\n            </div>\n        </div>\n        {props.members && props.members.slice(0, num).map(w =>\n            <div key={generate()} className=\"grid grid-cols-2 sm:grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] py-6 border-b border-black pb-5 px-5 text-sm\">\n                <TeamItem teamName={props.title} member={w} memberState={props.memberState} />\n            </div>\n        )}\n        {props.members && props.members.length > 3 && num !== 100 ? <button className=\"py-3 pb-5 px-5 font-bold text-primary\" onClick={() => setNum(100)}>\n            Show More\n        </button> : null}\n        {!props.members ? <div className=\"b-5 px-5 border-b border-black pb-5\">No Team Member Yet</div> : undefined}\n    </>\n}\n\nexport default TeamContainer;","import { Fragment, useEffect, useState, useRef } from 'react';\nimport TeamContainer from '../../components/payroll/teamContainer'\nimport { ClipLoader } from 'react-spinners';\nimport { TeamInfoWithMembers } from '../../types/sdk/Team/GetTeamsWithMembers';\nimport Success from '../../components/success';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks'\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice'\nimport Error from '../../components/error';\nimport { useGetTeamsWithMembersQuery, useLazyGetTeamsWithMembersQuery } from '../../redux/api';\nimport _ from 'lodash';\nimport { Member } from '../../types/sdk';\nimport { SelectBalances } from '../../redux/reducers/currencies';\nimport { Coins } from '../../types';\nimport {useHistory} from 'react-router-dom'\n\nconst Payroll = () => {\n    const history = useHistory()\n\n    const result = useGetTeamsWithMembersQuery({ take: 1000 });\n    const balance = useAppSelector(SelectBalances)\n\n    const isSuccess = useAppSelector(selectSuccess)\n    const isError = useAppSelector(selectError)\n    const dispatch = useAppDispatch()\n\n\n    const [teams, setTeams] = useState<TeamInfoWithMembers[]>([])\n\n    const [totalPrice, setTotalPrice] = useState<{ [name: string]: number }>()\n\n    const memberState = useState<Member[]>([])\n\n    useEffect(() => {\n        result.refetch()\n    },[])\n\n    useEffect(() => {\n        if (result.data) {\n            setTeams(result.data.teams)\n            const list: Member[] = [];\n            result.data.teams.forEach(team => {\n                team.members?.forEach(member => {\n                    list.push(member)\n                })\n            })\n            const first = Object.entries(_(list).groupBy('currency').value()).map(([currency, members]) => {\n                let totalAmount = members.reduce((acc, curr) => {\n                    if (new Date(curr.paymantDate).getMonth() !== new Date().getMonth()) {\n                        return acc;\n                    }\n                    let amount = parseFloat(curr.amount)\n\n                    if (curr.usdBase) {\n                        amount *= (balance[curr.currency as keyof typeof balance]?.tokenPrice ?? 1)\n                    }\n\n                    return acc + amount;\n                }, 0)\n\n                return {\n                    currency,\n                    totalAmount\n                }\n            })\n\n            const second = Object.entries(_(list).groupBy('secondaryCurrency').value()).filter(s => s[0] !== 'undefined').map(([currency, members]) => {\n                let totalAmount = members.reduce((acc, curr) => {\n                    if (new Date(curr.paymantDate).getMonth() !== new Date().getMonth()) {\n                        return acc;\n                    }\n                    let amount = (parseFloat(curr!.secondaryAmount!))\n\n                    if (curr.secondaryUsdBase) {\n                        amount *= (balance[curr.secondaryCurrency! as keyof typeof balance]?.tokenPrice ?? 1)\n                    }\n\n                    return acc + amount\n\n                }, 0)\n\n                return {\n                    currency,\n                    totalAmount\n                }\n            })\n\n            let res: any = {}\n\n            first.forEach((item) => {\n                if (!res[item.currency]) {\n                    res[item.currency] = item.totalAmount\n                } else {\n                    res[item.currency] += item.totalAmount\n                }\n            })\n\n            second.forEach((item) => {\n                if (!res[item.currency]) {\n                    res[item.currency] = item.totalAmount\n                } else {\n                    res[item.currency] += item.totalAmount\n                }\n            })\n\n            setTotalPrice(res)\n        }\n    }, [result.data])\n\n\n    return <div className=\"flex flex-col space-y-3\">\n        <div className=\"text-2xl font-bold pl-10\">\n            Payroll\n        </div>\n        <div className=\"rounded-xl shadow-custom px-10 pb-10 pt-6\">\n            <div className='flex flex-col space-y-3'>\n                <div className='text-greylish opacity-90'>Total payout per month</div>\n                <div className=\"flex justify-between\">\n                    <div className='grid grid-cols-2 gap-12'>\n                        {totalPrice &&\n                            Object.entries(totalPrice).filter(s => s[1]).map(([currency, amount]) => {\n                                return <div key={currency} className=\"flex space-x-2 relative h-fit\">\n                                    <div className=\"font-semibold text-xl\">{amount.toFixed(2)}</div>\n                                    <div className=\"font-semibold text-xl\">{Coins[currency as keyof typeof Coins].name}</div>\n                                    <div>\n                                        <img src={Coins[currency as keyof typeof Coins].coinUrl} className=\"w-[25px] h-[25px] rounded-full\" alt=\"\" />\n                                    </div>\n                                    <div className=\"absolute right-2 -bottom-6 text-sm text-greylish opacity-75 text-right\">\n                                        {(amount / (balance[Coins[currency as keyof typeof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)).toFixed(2)} USD\n                                    </div>\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div>\n                        <button className=\"bg-primary px-5 py-3 text-white rounded-xl\" onClick={()=>{\n                            history.push({\n                                pathname: '/masspayout',\n                                state:{\n                                    memberList: memberState[0]\n                                }\n                            })\n                        }}>\n                            Run Payroll\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n            <div id=\"header\" className=\"hidden sm:grid grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] border-b border-black sm:pb-5 px-5\" >\n                <div className=\"font-normal\">Name</div>\n                <div className=\"font-normal hidden lg:block\">Amount</div>\n                <div className=\"font-normal\">Frequency</div>\n                <div className=\"font-normal\">Next Payment</div>\n            </div>\n            <div>\n                {teams.map(w => w && w.members && w.members.length > 0 ? <Fragment key={w.id}><TeamContainer {...w} memberState={memberState}/></Fragment> : undefined)}\n\n                {(result.isLoading || result.isFetching) && <div className=\"flex justify-center py-10\"><ClipLoader /></div>}\n            </div>\n        </div>\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess(val))} text=\"Successfully\" />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n}\n\nexport default Payroll;","import Dashboard from './pages/dashboard/index';\nimport {\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  Redirect\n} from 'react-router-dom'\nimport Pay from './pages/dashboard/pay';\nimport Home from './pages/home';\nimport Create from './pages/create';\nimport { useEffect } from 'react'\nimport Unlock from './pages/unlock';\nimport Swap from './pages/swap'\nimport Import from './pages/import/index';\nimport OwnerSetting from './pages/settings/owner'\nimport Assets from './pages/dashboard/assets'\nimport Teams from './pages/teams/index'\nimport Main from './pages/dashboard/main'\nimport Transactions from './pages/transactions/transactions'\nimport { IStorage, selectStorage } from './redux/reducers/storage';\nimport { selectUnlock } from './redux/reducers/unlock';\nimport { useAppSelector } from './redux/hooks';\nimport Details from './pages/transactions/details';\nimport MassPay from './pages/dashboard/masspay'\nimport Initalization from './utility/init'\nimport SettingLayout from './pages/settings';\nimport MultisigTransaction from './pages/multisig/transaction'\nimport Payroll from './pages/payroll'\n\nfunction App(): JSX.Element {\n  const storage = useAppSelector(selectStorage)\n  const unlock = useAppSelector(selectUnlock)\n\n\n  return (\n    <div className=\"App min-h-screen w-full\">\n      <Switch>\n        <Route path=\"/unlock\" exact >\n          <Unlock />\n        </Route>\n        <CustomRouter unlock={unlock} data={storage} />\n      </Switch>\n    </div>\n  );\n}\n\nconst CustomRouter = ({ unlock, data }: { unlock: boolean, data: IStorage | null }) => {\n  const router = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (router && data && unlock && location && (location.pathname === '/' || location.pathname === '/import')) router.push('/dashboard')\n  }, [unlock, router, data, location])\n\n  const unlockChecking = (element: JSX.Element | Array<JSX.Element>) => {\n\n    if (!location.pathname.includes(\"/dashboard\") && !data?.accountAddress) return element\n    if (unlock) {\n      return element\n    }\n\n    return <Redirect\n      to={{\n        pathname: \"/unlock\",\n        state: { from: location }\n      }}\n    />\n  }\n\n  return <>\n    <Route path=\"/\" exact render={() => unlockChecking(<Home />)} />\n    <Route path=\"/create\" exact render={() => unlockChecking(<Create />)} />\n    <Route path=\"/import\" exact render={() => unlockChecking(<Import />)} />\n    <AuthRouter data={data} unlockChecking={unlockChecking} />\n  </>\n}\n\n\nconst AuthRouter = ({ data, unlockChecking }: { data: IStorage | null, unlockChecking: Function }) => {\n  const router = useHistory();\n\n\n  useEffect(() => {\n    if (!data) {\n      router.push('/')\n      return\n    }\n\n    //Initalization()\n\n  }, [data, router])\n\n  return <>\n\n    <Route path={'/masspayout'} exact render={() => unlockChecking(<MassPay />)} />\n    <Route path={'/pay'} exact render={() => unlockChecking(<Pay />)} />\n    <Route path={'/multisig/:id'} exact render={() => unlockChecking(<MultisigTransaction />)} />\n    <Route path={'/dashboard'} render={({ match: { path } }) => {\n      return <Dashboard>\n        <Switch>\n          <Route path={path + '/'} exact render={() => unlockChecking(<Main />)} />\n          <Route path={path + '/assets'} exact render={() => unlockChecking(<Assets />)} />\n          <Route path={path + '/payroll'} exact render={() => unlockChecking(<Payroll />)} />\n          <Route path={path + '/teams'} exact render={() => unlockChecking(<Teams />)} />\n          <Route path={path + '/transactions'} exact render={() => unlockChecking(<Transactions />)} />\n          <Route path={path + '/transactions/:id'} exact render={() => unlockChecking(<Details />)} />\n          <Route path={path + '/swap'} exact render={() => unlockChecking(<Swap />)} />\n          <Route path={path + '/settings'} render={() => unlockChecking(<SettingLayout />)} />\n        </Switch>\n      </Dashboard>\n    }} >\n\n    </Route>\n  </>\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport Notification from './reducers/notificationSlice'\nimport Storage from './reducers/storage'\nimport Unlock from './reducers/unlock'\nimport Currency from './reducers/currencies'\nimport Toggle from './reducers/toggles'\nimport Transaction from './reducers/transactions'\nimport SelectedAcount from './reducers/selectedAccount'\nimport Multisig from './reducers/multisig'\nimport { accountAPI, customerAPI, teamAPI, transactionAPI, teamMemberAPI, BlockScoutApi, swapAPI, multisigAPI } from './api'\n\nconst store = configureStore({\n    reducer: {\n        currencyandbalance: Currency,\n        notification: Notification,\n        storage: Storage,\n        unlock: Unlock,\n        toggle: Toggle,\n        transactionsStore: Transaction,\n        selectedAccount: SelectedAcount,\n        multisig: Multisig,\n        [accountAPI.reducerPath]: accountAPI.reducer,\n        [customerAPI.reducerPath]: customerAPI.reducer,\n        [swapAPI.reducerPath]: swapAPI.reducer,\n        [teamAPI.reducerPath]: teamAPI.reducer,\n        [teamMemberAPI.reducerPath]: teamMemberAPI.reducer,\n        [transactionAPI.reducerPath]: transactionAPI.reducer,\n        [BlockScoutApi.reducerPath]: BlockScoutApi.reducer,\n        [multisigAPI.reducerPath]: multisigAPI.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(accountAPI.middleware, customerAPI.middleware, transactionAPI.middleware, teamAPI.middleware, teamMemberAPI.middleware, BlockScoutApi.middleware, swapAPI.middleware, multisigAPI.middleware),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dist/index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n","export enum TransactionType {\n    PaySomeone = \"Pay Someone\",\n    MassPayout = \"Mass Payout\",\n    QuickTransfer = \"Quick Transfer\",\n    IncomingPayment = \"Incoming Payment\",\n    MassPayment = \"Mass Payment\",\n    Swap = \"Swap\"\n}\n\nexport enum TransactionDirection {\n    In,\n    Out,\n    Swap\n}\n\nexport enum TransactionStatus{\n    Completed = \"Completed\", \n    Pending = \"Pending\", \n    Rejected = \"Rejected\",\n}"],"sourceRoot":""}