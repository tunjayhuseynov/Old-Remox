{"version":3,"sources":["types/index.ts","types/sdk/Transaction/GetBalance.ts","types/sdk.ts","types/sdk/TeamMember/addMember.ts","types/dashboard/transaction.ts","types/coins.ts","components/notification/index.tsx","redux/hooks.ts","redux/reducers/storage.ts","redux/reducers/toggles.ts","redux/reducers/transactions.ts","redux/reducers/selectedAccount.ts","hooks/useTransactionProcess.tsx","utility/const.ts","redux/api/account.ts","redux/api/customer.ts","redux/api/team.ts","redux/api/transaction.ts","redux/api/teamMember.ts","redux/api/blockscout.ts","redux/api/swap.ts","redux/api/multisig.ts","redux/reducers/notificationSlice.ts","redux/reducers/currencies.ts","hooks/useRefetchData.tsx","hooks/useModalSideExit.tsx","utility/index.ts","components/copied.tsx","components/dashboard/visitcard.tsx","components/button.tsx","layouts/dashboard/navbar.tsx","components/phraseBar.tsx","redux/reducers/unlock.ts","components/create/phrase.tsx","components/input.tsx","components/create/set.tsx","components/dashboard/sidebarlist.tsx","components/dashboard/main/coinitem.tsx","components/dashboard/main/statistics.tsx","components/transactionItem.tsx","components/dashboard/accordion.tsx","components/dashboard/main/transactionHistory.tsx","components/import/createPassword.tsx","layouts/home/header.tsx","components/import/login.tsx","components/dropdown.tsx","components/pay/payinput.tsx","components/pay/teaminput.tsx","components/teams/buttons/addMember.tsx","components/teams/buttons/addTeam.tsx","components/teams/buttons/delete.tsx","components/teams/buttons/editMember.tsx","components/teams/buttons/editTeam.tsx","components/avatar.tsx","components/teams/buttons/profile.tsx","components/modal.tsx","components/teams/teamItem.tsx","components/teams/teamContainer.tsx","redux/reducers/multisig.ts","hooks/useMultisig.tsx","components/settings/owner/addOwner.tsx","components/settings/owner/replaceOwner.tsx","components/settings/owner/removeOwner.tsx","components/settings/owner/changeThreshold.tsx","components/error.tsx","components/success.tsx","components/multisig/create.tsx","layouts/dashboard/sidebar.tsx","layouts/dashboard/mobileMenu.tsx","pages/dashboard/index.tsx","utility/CSV.tsx","pages/dashboard/pay.tsx","pages/home.tsx","pages/create.tsx","pages/unlock.tsx","pages/swap/index.tsx","pages/import/index.tsx","pages/settings/owner.tsx","pages/dashboard/assets.tsx","pages/teams/index.tsx","pages/dashboard/main.tsx","pages/transactions/transactions.tsx","pages/transactions/details.tsx","pages/dashboard/masspay.tsx","pages/settings/index.tsx","pages/multisig/transaction.tsx","components/payroll/teamItem.tsx","components/payroll/teamContainer.tsx","pages/payroll/index.tsx","pages/settings/spending.tsx","pages/settings/profile.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["GetBalanceResponseEnum","Interval","TransactionType","TransactionDirection","TransactionStatus","CoinsURL","CoinsName","CoinsNameVisual","TransactionFeeTokenName","StableTokens","AltcoinsList","CoinsNameLower","CoinsResponse","Coins","celo","name","CELO","coinUrl","value","feeName","lowerName","responseName","celoBalance","contractAddress","cUSD","cUSDBalance","cEUR","cEURBalance","UBE","MOO","MOBI","POOF","cREAL","Status","useAppDispatch","useDispatch","useAppSelector","useSelector","storageSlice","createSlice","initialState","val","localStorage","getItem","user","JSON","parse","reducers","setStorage","state","action","setItem","payload","data","removeStorage","removeItem","actions","selectStorage","storage","toggleSlice","mobileMenu","setMenu","selectToggle","toggle","TransactionAPI","transactions","setTransactions","removeTransactions","SelectTransactions","transactionsStore","SelectedAccountSlice","address","accountAddress","init","changeAccount","SelectSelectedAccount","selectedAccount","useTransactionProcess","currencies","currencyandbalance","celoCoins","useMemo","result","reverse","map","transaction","index","amount","coin","coinName","direction","date","hash","rawDate","blockNum","outputCoin","outputAmount","outputCoinName","inputCoin","inputAmount","inputCoinName","from","to","swap","tx","timeStamp","blockNumber","parseFloat","Web3","utils","fromWei","Object","entries","find","w","tokenSymbol","input","startsWith","Swap","trim","toLowerCase","Out","In","dateFormat","Date","parseInt","values","includes","substring","length","toBN","toFixed","amountUSD","price","surplus","type","IncomingPayment","QuickTransfer","byBlockNumber","_","filter","groupBy","reduce","a","e","i","filtered","hashFilter","forEach","push","maxBy","froms","s","swaps","tos","renFroms","hashs","renTos","recieved","sent","BaseUrl","window","location","hostname","accountAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","set","endpoints","builder","signIn","mutation","query","url","method","body","accountCreate","createPassword","accountExist","unlock","putAccountInfo","setTime","getTime","getDetails","useLazyGetDetailsQuery","useLazyGetTimeQuery","useGetDetailsQuery","useSetTimeMutation","useSignInMutation","useAccountCreateMutation","useCreatePasswordMutation","useAccountExistMutation","useUnlockMutation","usePutAccountInfoMutation","customerAPI","customerCreate","getCustomer","params","deleteCustomer","id","teamAPI","useCustomerCreateMutation","useGetCustomerQuery","useDeleteCustomerMutation","createTeam","getTeams","getTeamsWithMembers","deleteTeam","updateTeam","useCreateTeamMutation","useLazyGetTeamsQuery","useLazyGetTeamsWithMembersQuery","useGetTeamsWithMembersQuery","useDeleteTeamMutation","useUpdateTeamMutation","transactionAPI","keepUnusedDataFor","getBalance","getCurrencies","sendCelo","sendStableToken","sendAltToken","sendMultipleTransactions","useLazyGetBalanceQuery","useGetBalanceQuery","useLazyGetCurrenciesQuery","useSendCeloMutation","useGetCurrenciesQuery","useSendStableTokenMutation","useSendAltTokenMutation","useSendMultipleTransactionsMutation","teamMemberAPI","addMember","getMembers","getMember","deleteMember","updateMember","useAddMemberMutation","useLazyGetMemberQuery","useDeleteMemberMutation","useGetMembersQuery","useLazyGetMembersQuery","useUpdateMemberMutation","BlockScoutApi","getTransactions","getTransactionBuHash","useLazyGetTransactionsQuery","useGetTransactionsQuery","swapAPI","useLazyGetTransactionBuHashQuery","useGetTransactionBuHashQuery","getConvertableTokenAmount","swapCoins","useGetConvertableTokenAmountMutation","useSwapCoinsMutation","multisigAPI","mode","getMultisigBalance","importAddress","createAddress","getMultisigAddresses","removeMultisigAddress","getOwners","addOwner","removeOwner","replaceOwner","getRequiredSignatures","changeRequiredSignatures","chnageInternalRequiredSignatures","submitTransactions","revokeTransactions","confirmTransactions","executeTransactions","getMultisigTransaction","getNotExecutedTransactions","getTransactionsByPagination","skip","take","getAllTransactions","transformResponse","response","item","useLazyGetTransactionsByPaginationQuery","useGetTransactionsByPaginationQuery","useCreateAddressMutation","useGetAllTransactionsQuery","useLazyGetAllTransactionsQuery","useGetMultisigTransactionQuery","useLazyGetMultisigBalanceQuery","useLazyGetMultisigTransactionQuery","useGetMultisigBalanceQuery","useImportAddressMutation","useAddOwnerMutation","useChangeRequiredSignaturesMutation","useChnageInternalRequiredSignaturesMutation","useConfirmTransactionsMutation","useGetMultisigAddressesQuery","useExecuteTransactionsMutation","useLazyGetOwnersQuery","useGetNotExecutedTransactionsQuery","useGetOwnersQuery","useGetRequiredSignaturesQuery","useLazyGetMultisigAddressesQuery","useLazyGetNotExecutedTransactionsQuery","useLazyGetRequiredSignaturesQuery","useRemoveOwnerMutation","useRemoveMultisigAddressMutation","useReplaceOwnerMutation","useRevokeTransactionsMutation","useSubmitTransactionsMutation","notificationSlice","onSuccess","onSuccessText","onError","onErrorText","notificationSeen","changeError","text","activate","changeSuccess","changeNotificationSeen","selectError","notification","selectErrorText","selectSuccessText","selectSuccess","NotificationCointainer","list","dispatch","useState","openNotify","setNotify","trigger","divRef","useRef","useEffect","time","now","toString","unwrap","then","click","useCallback","current","contains","target","addEventListener","removeEventListener","className","onClick","ref","transactionObj","recievedTransactions","sentTransactions","status","OK","title","link","generate","NotificationItem","State","undefined","balances","CurrencySlice","updateAllCurrencies","cusd","ceur","ube","moo","mobi","poof","creal","percent_24","updateBalance","current_balance","deleteBalance","updateUserBalance","per_24","percent","coins","tokenPrice","SelectCurrencies","SelectBalances","useRefetchData","disableInterval","transactionStore","currencyTrigger","currencyData","isFetching","balanceTrigger","balanceData","balanceFetching","transactionTrigger","transactionData","transactionFetching","multisigTrigger","multisigBalance","multiFetching","balance","updatedCurrency","d","Celo","Cusd","Ceur","Ube","Moo","Mobi","Poof","cReal","pCelo","pCusd","pCeur","pUbe","pMoo","pMobi","pPoof","pReal","celoPrice","cusdPrice","ceurPrice","ubePrice","mooPrice","mobiPrice","poofPrice","cRealPrice","total","updatedBalance","some","fetching","timer","setInterval","clearInterval","useModalSideExit","isSetting","setSetting","settingRef","AddressReducer","split","c","arr","Copied","tooltip","triggerRef","usePopperTooltip","getArrowProps","getTooltipProps","setTooltipRef","setTriggerRef","visible","Visitcard","setTooltip","setDivRef","navigator","clipboard","writeText","setTimeout","src","alt","Button","children","version","isLoading","disabled","size","Li","NavbarDropdown","isOpen","setOpen","style","transform","PaySVG","MassPayoutSVG","RequestMoneySVG","FundSVG","Navbar","menuBar","refetch","toggled","hideOutline","width","placeholder","PhraseBar","mnemonic","scanIcon","setData","see","setSee","replace","slice","inlineSize","outerWidth","toUpperCase","height","unlockSlide","setUnlock","selectUnlock","KeyPhrase","router","useNavigate","stringify","localSave","Input","validation","limit","required","password","setPassword","repeatPassword","setRepeatPassword","autoComplete","minLength","onChange","Set","createAccount","create","preventDefault","inputData","userName","surname","companyName","obj","encryptedPhrase","pass","console","error","onSubmit","DashboardSVG","active","PayrollSVG","TransactionsSVG","SwapSVG","AssetsSVG","TeamsSVG","SettingSVG","LogoutSVG","Sidebarlist","end","isActive","CoinItem","usd","img","rate","Statistic","setPercent","setBalance","lastIn","setIn","lastOut","setOut","allInOne","setAllInOne","balanceRedux","cusdBalance","ceurBalance","ubeBalance","mooBalance","mobiBalance","poofBalance","crealBalance","all","chart","celoDeg","Math","ceil","cusdDeg","ceurDeg","ubeDeg","mooDeg","mobiDeg","poofDeg","crealDeg","currencObj","currencObj2","indexable","per","sort","b","toLocaleString","localeCompare","myin","myout","t","feeToken","getMonth","calc","color","background","TransactionItem","amountCoin","detect","setDetect","clientWidth","isSwap","variants","close","open","Accordion","dataCount","grid","Completed","Pending","motion","div","initial","animate","TransactionHistory","Array","isArray","block","join","CreatePassword","phrase","isValid","setValid","Submitted","Header","Login","signin","setInput","incorrrect","setIncorrect","onKeyDown","event","key","transition","staggerChildren","duration","forwardRef","Viewer","displayName","disableAddressDisplay","Dropdown","selected","nameActivation","onSelect","loader","parentClass","childClass","liRef","liHeight","setLiHeight","customRef","offsetHeight","selectedWallet","setWallet","setIndex","overallIndex","uniqueArr","isBasedOnDollar","setRefreshPage","setAmount","amountState","anotherToken","setAnotherToken","v","defaultValue","Number","step","min","wallet","splice","TeamInput","props","currency","setSelectedWallet","selectedWallet2","setSelectedWallet2","secondaryCurrency","updateValue","is2","customWallet","newArr","members","newItem","secondaryAmount","setMembers","checked","selectedId","tick","setSelectedId","usdBase","AddMemberModal","onDisable","triggerTeams","addMemberLoading","secondActive","setSecondActive","startDate","setStartDate","None","setSelected","monthly","selectedFrequency","setSelectedFrequency","selectedType","setSelectedType","MAX_SAFE_INTEGER","teams","Submit","firstName","lastName","teamName","walletAddress","amount2","firstNameValue","lastNameValue","walletAddressValue","amountValue","amountValue2","log","alert","teamId","interval","paymantDate","toISOString","secondaryUsdBase","message","weakly","minDate","AddTeams","Delete","onCurrentModal","onDelete","loading","setLoading","EditMember","triggerTeam","member","memberLoading","updateLoading","selectedTeam","setSelectedTeam","memberName","memberNameValue","addressValue","EditTeam","Avatar","Profile","onEditModal","onDeleteModal","Modal","disableX","document","querySelector","overflowY","top","scrollY","innerHeight","TeamItem","modalVisible","setModalVisible","modalEditVisible","setModalEditVisible","deleteModal","setDeleteModal","TeamContainer","editModal","setEditModal","num","setNum","DeleteTeam","multisigSlice","selectMultisigTransactions","multisig","useMultisig","multiSlice","addingOwner","isAddOwnerLoading","replacingOwner","isReplaceOwnerLoading","changeSign","isChangeSignLoading","changeInternalSign","isChangeInternalLoading","removingOwner","isRemoveLoading","fetch","signFethch","signData","isMultisig","setIsMultisig","multiNonExecutedFetch","multiData","transactionLoading","fetchTxs","disabledTransactionDispatch","transactionArray","ownerAddress","multisigAddress","changeSigns","sign","internalSign","requirement","newOwner","res","oldOwner","newOwnerAddress","isTransactionLoading","AddOwner","pageIndex","setPageIndex","setAddress","changingMultiSigProperties","ReplaceOwner","RemoveOwner","ChangeTreshold","executinTransactions","setSign","setInternalSign","fill","Error","onClose","Success","onAction","Create","setCreateModal","createMultisig","createLoading","ownerAmount","setOwnerAmount","owners","createClick","internalRequired","isNaN","Sidebar","importMultisig","isSuccess","isError","isAccountModal","setAccountModal","isImportModal","setImportModal","isCreateModal","importInputRef","selectedItem","importClick","setList","addresses","MobileMenu","x","exit","Dashboard","AnimatePresence","CSV","file","Promise","resolve","reject","URL","createObjectURL","csv","columns","Pay","sendMultiple","sendAltcoin","sendMultisig","isPaying","setIsPaying","setSuccess","setAmountState","uniqueRef","nameRef","addressRef","wallets","setWallets","amountRef","csvImport","setCsvImport","fileInput","wllt","amm","coin2","files","DataTransfer","addressList","amountList","toAddress","tokenType","comment","stableTokenType","altTokenType","multipleAddresses","Import","catch","cols","rows","Home","isModal","setModal","pathname","Unlock","unlockState","unlockApp","inputRef","useLocation","autoFocus","token1","setToken1","token1Amount","setToken1Amount","token2","setToken2","token1Input","appAmount","setAppAmount","fee","setFee","oneCoinPrice","setOneCoinPrice","label","invisible","slippageArr","setSlippageArr","deadline","setDeadline","fetchCoin","coinLoading","change","output","slippage","floor","minimumAmountOut","feeAmount","oneTokenValue","startSwap","at","max","token1_copy","token2_copy","token2_amount","setError","OwnerSetting","addOwnerModal","setAddOwnerModal","replaceOwnerModal","setReplaceOwnerModal","changeTresholdModal","setChangeTresholdModal","removeModal","setRemoveModal","selectedOwner","setSelectedOwner","removable","setRemovable","shortid","Assets","selectBalance","Teams","teamCount","skipCount","setSkipCount","skipRef","addTeamModal","setAddTeamModal","addMemberModal","setAddMemberModal","setTeams","maxTeamCount","Main","Transactions","multisigData","transactionVisual","setVisual","TransactionGenerator","filename","gasUsed","gasPrice","blockHash","executed","acc","confirmations","owner","valueOfTransfer","destination","requiredCount","random","Details","useParams","totalAmount","setTotalAmount","transactionFee","setTransactionFee","maList","lodash","iteratee","newObject","orderBy","o","BigInt","uniqBy","maTx","round","TransactionDetailInput","MassPay","memberList","teamLoading","resMember","setResMember","team","mems","secAmount","secCurrency","generalWallet","setGeneralWallet","SettingLayout","path","MultisigTransaction","history","selectedAddress","refreshMultisig","revokeTransaction","revokeLoading","confirmTransaction","confirmLoading","filterData","setFilterData","txResult","submitAction","transactionId","gridTemplateColumns","memberState","m","getUTCDay","Payroll","totalPrice","first","curr","second","SpendingSetting","ProfileSetting","updateInfo","isUser","setUser","isCompany","setCompany","update","company","ProtectUser","LockIfUserIn","App","element","store","configureStore","reducer","Currency","Notification","Storage","Toggle","Transaction","SelectedAcount","Multisig","middleware","getDefaultMiddleware","serializableCheck","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0cf2445.chunk.js","sourcesContent":["export * from './dashboard/transaction';\nexport * from './dropdown'\nexport * from './coins'","export interface GetBalanceResponse {\n\tceloBalance: string;\n\tcUSDBalance: string;\n\tcEURBalance: string;\n\tUBE: string;\n\tMOO: string;\n\tMOBI: string;\n\tPOOF: string;\n\tcREAL: string;\n}\n\nexport enum GetBalanceResponseEnum {\n\tceloBalance = \"celoBalance\",\n\tcUSDBalance = \"cUSDBalance\",\n\tcEURBalance = \"cEURBalance\",\n\tUBE = \"UBE\",\n\tMOO = \"MOO\",\n\tMOBI = \"MOBI\",\n\tPOOF = \"POOF\",\n\tcREAL = \"cREAL\",\n}\n","export * from './sdk/Account/AccountCreate'\nexport * from './sdk/Account/AccountExist'\nexport * from './sdk/Account/CreatePassword'\nexport * from './sdk/Account/Signin'\nexport * from './sdk/Account/Unlock'\nexport * from './sdk/Account/AccountInfo'\n\nexport * from './sdk/Transaction/GetBalance'\nexport * from './sdk/Transaction/SendCUSD'\nexport * from './sdk/Transaction/SendCelo'\nexport * from './sdk/Transaction/SendMultipleTransaction'\nexport * from './sdk/Transaction/SendAltcoin'\nexport * from './sdk/Transaction/GetCurrencies'\n\nexport * from './sdk/Customer/CustomerCreate'\nexport * from './sdk/Customer/GetCustomer'\n\nexport * from './sdk/Team/CreateTeam'\nexport * from './sdk/Team/GetTeams'\nexport * from './sdk/Team/UpdateTeam'\nexport * from './sdk/Team/GetTeamsWithMembers'\n\nexport * from './sdk/TeamMember/addMember'\nexport * from './sdk/TeamMember/getMember'\nexport * from './sdk/TeamMember/updatemember'\n\nexport * from './sdk/blockscout'\n\nexport * from './sdk/Swap'\nexport * from './sdk/Multisig'","import { CoinsName } from '../../coins'\n\nexport enum Interval {\n    weakly = \"weakly\",\n    monthly = \"monthly\",\n}\n\nexport interface AddMember {\n    name: string,\n    address: string,\n    currency: CoinsName,\n    amount: string,\n    teamId: string, \n    paymantDate: string,\n    interval: Interval,\n    usdBase: boolean,\n    secondaryCurrency?: CoinsName,\n    secondaryAmount?: string,\n    secondaryUsdBase?: boolean,\n}\n\nexport interface AddMemberResponse {\n    id: string,\n    name: string,\n    address: string,\n    currency: CoinsName,\n    amount: string,\n    teamId: string, \n    paymantDate: string,\n    interval: Interval,\n    usdBase: boolean,\n    secondaryCurrency?: CoinsName,\n    secondaryAmount?: string,\n    secondaryUsdBase?: boolean,\n}","export enum TransactionType {\n    PaySomeone = \"Pay Someone\",\n    MassPayout = \"Mass Payout\",\n    QuickTransfer = \"Quick Transfer\",\n    IncomingPayment = \"Incoming Payment\",\n    MassPayment = \"Mass Payment\",\n    Swap = \"Swap\"\n}\n\nexport enum TransactionDirection {\n    In,\n    Out,\n    Swap\n}\n\nexport enum TransactionStatus{\n    Completed = \"Completed\", \n    Pending = \"Pending\", \n    Rejected = \"Rejected\",\n}","import { GetBalanceResponseEnum } from './sdk';\n\nexport enum CoinsURL {\n\tCELO = '/icons/celoiconsquare.svg',\n\tcUSD = '/icons/celodollar.svg',\n\tcEUR = '/icons/ceur.png',\n\tUBE = '/icons/ubeswap.png',\n\tMOO = '/icons/moola.png',\n\tMOBI = '/icons/mobius.png',\n\tPOOF = '/icons/poof.png',\n\tcREAL= \"/icons/creal.png\",\n\tNone = ''\n}\n\nexport enum CoinsName {\n\tCELO = 'celo',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsNameVisual {\n\tCELO = 'CELO',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum TransactionFeeTokenName {\n\tCELO = 'celo',\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum StableTokens {\n\tcUSD = 'cUSD',\n\tcEUR = 'cEUR'\n}\n\nexport enum AltcoinsList {\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsNameLower {\n\tCELO = 'celo',\n\tcUSD = 'cUsd',\n\tcEUR = 'cEur',\n\tUBE = 'UBE',\n\tMOO = 'MOO',\n\tMOBI = 'MOBI',\n\tPOOF = 'POOF',\n\tcREAL= 'cREAL',\n}\n\nexport enum CoinsResponse {}\n\nexport const Coins: Coins = {\n\tcelo: {\n\t\tname: CoinsNameVisual.CELO,\n\t\tcoinUrl: CoinsURL.CELO,\n\t\tvalue: CoinsName.CELO,\n\t\tfeeName: TransactionFeeTokenName.CELO,\n\t\tlowerName: CoinsNameLower.CELO,\n\t\tresponseName: GetBalanceResponseEnum.celoBalance,\n\t\tcontractAddress: \"0x471EcE3750Da237f93B8E339c536989b8978a438\"\n\t},\n\tcUSD: {\n\t\tname: CoinsNameVisual.cUSD,\n\t\tcoinUrl: CoinsURL.cUSD,\n\t\tvalue: CoinsName.cUSD,\n\t\tfeeName: TransactionFeeTokenName.cUSD,\n\t\tlowerName: CoinsNameLower.cUSD,\n\t\tresponseName: GetBalanceResponseEnum.cUSDBalance,\n\t\tcontractAddress: \"0x765DE816845861e75A25fCA122bb6898B8B1282a\"\n\t},\n\tcEUR: {\n\t\tname: CoinsNameVisual.cEUR,\n\t\tcoinUrl: CoinsURL.cEUR,\n\t\tvalue: CoinsName.cEUR,\n\t\tfeeName: TransactionFeeTokenName.cEUR,\n\t\tlowerName: CoinsNameLower.cEUR,\n\t\tresponseName: GetBalanceResponseEnum.cEURBalance,\n\t\tcontractAddress: \"0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73\"\n\t},\n\tUBE: {\n\t\tname: CoinsNameVisual.UBE,\n\t\tcoinUrl: CoinsURL.UBE,\n\t\tvalue: CoinsName.UBE,\n\t\tfeeName: TransactionFeeTokenName.UBE,\n\t\tlowerName: CoinsNameLower.UBE,\n\t\tresponseName: GetBalanceResponseEnum.UBE, \n\t\tcontractAddress: \"0x00Be915B9dCf56a3CBE739D9B9c202ca692409EC\"\n\t},\n\tMOO: {\n\t\tname: CoinsNameVisual.MOO,\n\t\tcoinUrl: CoinsURL.MOO,\n\t\tvalue: CoinsName.MOO,\n\t\tfeeName: TransactionFeeTokenName.MOO,\n\t\tlowerName: CoinsNameLower.MOO,\n\t\tresponseName: GetBalanceResponseEnum.MOO, \n\t\tcontractAddress: \"0x17700282592D6917F6A73D0bF8AcCf4D578c131e\"\n\t},\n\tMOBI: {\n\t\tname: CoinsNameVisual.MOBI,\n\t\tcoinUrl: CoinsURL.MOBI,\n\t\tvalue: CoinsName.MOBI,\n\t\tfeeName: TransactionFeeTokenName.MOBI,\n\t\tlowerName: CoinsNameLower.MOBI,\n\t\tresponseName: GetBalanceResponseEnum.MOBI, \n\t\tcontractAddress: \"0x73a210637f6F6B7005512677Ba6B3C96bb4AA44B\"\n\t},\n\tPOOF: {\n\t\tname: CoinsNameVisual.POOF,\n\t\tcoinUrl: CoinsURL.POOF,\n\t\tvalue: CoinsName.POOF,\n\t\tfeeName: TransactionFeeTokenName.POOF,\n\t\tlowerName: CoinsNameLower.POOF,\n\t\tresponseName: GetBalanceResponseEnum.POOF, \n\t\tcontractAddress: \"0x00400FcbF0816bebB94654259de7273f4A05c762\"\n\t},\n\tcREAL: {\t\n\t\tname: CoinsNameVisual.cREAL,\n\t\tcoinUrl: CoinsURL.cREAL,\n\t\tvalue: CoinsName.cREAL,\n\t\tfeeName: TransactionFeeTokenName.cREAL,\n\t\tlowerName: CoinsNameLower.cREAL,\n\t\tresponseName: GetBalanceResponseEnum.cREAL, \n\t\tcontractAddress: \"0xe8537a3d056DA446677B9E9d6c5dB704EaAb4787\"\n\t}\n};\n\nexport interface Coins {\n\tcelo: AltCoins;\n\tcUSD: AltCoins;\n\tcEUR: AltCoins;\n\tUBE: AltCoins;\n\tMOO: AltCoins;\n\tMOBI: AltCoins;\n\tPOOF: AltCoins;\n\tcREAL: AltCoins;\n}\n\nexport interface AltCoins {\n\tname: CoinsNameVisual;\n\tcoinUrl: CoinsURL;\n\tvalue: CoinsName;\n\tfeeName: TransactionFeeTokenName;\n\tlowerName: CoinsNameLower;\n\tresponseName: GetBalanceResponseEnum;\n\tcontractAddress: string;\n}\n","import { Fragment, useCallback, useEffect, useRef, useState } from \"react\";\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport useTransactionProcess, { TransactionHook } from \"../../hooks/useTransactionProcess\";\nimport { useSetTimeMutation } from \"../../redux/api\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { changeNotificationSeen } from \"../../redux/reducers/notificationSlice\";\nimport { RootState } from \"../../redux/store\";\nimport { TransactionDirection, TransactionStatus, TransactionType } from \"../../types\";\nimport Accordion from \"../dashboard/accordion\";\n\n\nenum Status {\n    OK,\n    Reject,\n    Pending\n}\n\nconst NotificationCointainer = () => {\n    const [list] = useTransactionProcess()\n    const dispatch = useAppDispatch()\n    const seenTime = useAppSelector((state: RootState) => state.notification.notificationSeen)\n    const [openNotify, setNotify] = useState(false)\n    const [trigger] = useSetTimeMutation()\n\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (openNotify) {\n            trigger({ time: Date.now().toString() }).unwrap().then(() => {\n                dispatch(changeNotificationSeen(Date.now()))\n            })\n        }\n    }, [openNotify])\n\n    const click = useCallback((e) => {\n        if (openNotify && divRef.current && !divRef.current.contains(e.target)) {\n            setNotify(false)\n        }\n    }, [openNotify])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, divRef])\n\n    let index = 0\n\n    return <>\n        <IoMdNotificationsOutline className=\"text-2xl cursor-pointer\" onClick={() => setNotify(!openNotify)} />\n        {openNotify &&\n            <div ref={divRef} className=\"translate-x-[75%] sm:translate-x-0 z-40 absolute shadow-custom min-w-[325px] min-h-[200px] right-0 bg-white mt-7 rounded-xl\">\n                <div className=\"flex flex-col min-h-[325px] sm:min-h-[auto] justify-center sm:justify-between sm:items-stretch items-center\">\n                    {\n                        list && Object.entries(list).map(([date, transactionObj]) => {\n                            if (!transactionObj[\"recieved\"] || !transactionObj[\"sent\"]) return null\n                            const recievedTransactions = transactionObj.recieved;\n                            const sentTransactions = transactionObj.sent;\n                            return <Fragment key={date}>\n                                {index < 3 && recievedTransactions.length > 0 && ++index &&\n                                    recievedTransactions.map(({ amountUSD, surplus, blockNumber, address }) => {\n                                        return <NotificationItem key={generate()} status={Status.OK} title={TransactionType.IncomingPayment} body={amountUSD[0] !== -1 ? `${surplus} ${amountUSD.reduce((a, e) => a + e).toFixed(4)} $` : ''} link={`/dashboard/transactions/${blockNumber}/${address}`} />\n\n                                    })\n                                }\n                                {index < 3 && sentTransactions.length > 0 && ++index &&\n                                    sentTransactions.map(({ amountUSD, surplus, blockNumber, address }) => {\n                                        return <NotificationItem key={generate()} status={Status.OK} title={TransactionType.IncomingPayment} body={amountUSD[0] !== -1 ? `${surplus} ${amountUSD.reduce((a, e) => a + e).toFixed(4)} $` : ''} link={`/dashboard/transactions/${blockNumber}/${address}`} />\n\n                                    })\n                                }\n                            </Fragment>\n                        })\n                    }\n                    {(!list || !Object.values(list).length) && <div>No notification yet. We'll notify you</div>}\n                </div>\n            </div>\n        }\n    </>\n}\n\nexport default NotificationCointainer;\n\n\nconst NotificationItem = ({ status, title, body, link }: { status: Status, title: TransactionType, body: string, link: string }) => {\n\n    return <div className=\"grid grid-cols-[15%,65%,20%] min-h-[50px] border-b-2 items-center px-3 py-2\">\n        <div>\n            {\n                status === Status.OK && <div className=\"w-[15px] h-[15px] rounded-full bg-blue-600\"></div>\n            }\n        </div>\n        <div className=\"flex flex-col\">\n            <div>{title}</div>\n            <div className=\"opacity-50\">{body}</div>\n        </div>\n        <Link to={link}>\n            <div className={'text-primary'}>\n                View\n            </div>\n        </Link>\n    </div>\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IStorage {\n    accountAddress: string,\n    encryptedPhrase: string,\n    token: string,\n    userName?: string;\n    surname?: string,\n    companyName?: string,\n}\n\ninterface IContainer {\n    user: IStorage | null, \n}\n\nconst initialState = (): IContainer => {\n    const val = localStorage.getItem(\"user\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { user: data }\n    }\n    return { user: null };\n}\n\n\nexport const storageSlice = createSlice({\n    name: \"storage\",\n    initialState: initialState(),\n    reducers: {\n        setStorage: (state, action) => {\n            localStorage.setItem(\"user\", action.payload)\n            const data: IStorage = JSON.parse(action.payload)\n            state.user = data\n        },\n        removeStorage: (state) => {\n            localStorage.removeItem(\"user\")\n            state.user = null;\n        }\n    }\n})\n\nexport const { setStorage, removeStorage } = storageSlice.actions\n\nexport const selectStorage = (state: RootState) => state.storage.user\n\nexport default storageSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../store';\n\nconst initialState = {\n\tmobileMenu: false\n};\n\nexport const toggleSlice = createSlice({\n\tname: 'storage',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetMenu: (state, action) =>{\n\t\t\tstate.mobileMenu = action.payload;\n\t\t}\n\t}\n});\n\nexport const {setMenu} = toggleSlice.actions;\n\nexport const selectToggle = (state: RootState) => state.toggle;\n\nexport default toggleSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { GetTransactions } from '../../types/sdk/blockscout';\nimport { RootState } from '../store';\n\ninterface InitialTransaction {\n\ttransactions: GetTransactions | null;\n}\n\nconst initialState: InitialTransaction = {\n\ttransactions: null\n};\n\nexport const TransactionAPI = createSlice({\n\tname: 'transactions',\n\tinitialState: initialState,\n\treducers: {\n\t\tsetTransactions: (state, action) => {\n\t\t\tstate.transactions = action.payload;\n\t\t},\n\t\tremoveTransactions: (state) => {\n\t\t\tstate.transactions = null;\n\t\t}\n\t}\n});\n\nexport const { setTransactions, removeTransactions } = TransactionAPI.actions;\nexport const SelectTransactions = (state: RootState) => state.transactionsStore.transactions;\nexport default TransactionAPI.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\nimport { IStorage } from './storage'\n\n\ninterface IContainer {\n    address: string, \n}\n\nconst init = (): IContainer => {\n    const val = localStorage.getItem(\"user\")\n\n    if (val) {\n        const data: IStorage = JSON.parse(val)\n        return { address: data.accountAddress }\n    }\n    return { address: '' };\n}\n\nexport const SelectedAccountSlice = createSlice({\n    name: 'selectedAccount',\n    initialState: init(),\n    reducers: {\n        changeAccount: (state: IContainer, action: PayloadAction<string>) => {\n            state.address = action.payload\n        },\n \n    },\n})\n\nexport const { changeAccount } = SelectedAccountSlice.actions\n\nexport const SelectSelectedAccount = (state: RootState) => state.selectedAccount.address\n\nexport default SelectedAccountSlice.reducer","import { useEffect, useMemo } from 'react';\nimport { useAppSelector } from '../redux/hooks';\nimport { SelectTransactions } from '../redux/reducers/transactions';\nimport lodash from 'lodash';\nimport { GetTransactions, Transactions } from '../types/sdk';\nimport _ from 'lodash';\nimport Web3 from 'web3';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../types/coins';\nimport { selectStorage } from '../redux/reducers/storage';\nimport dateFormat from 'dateformat';\nimport { TransactionDirection, TransactionType } from '../types';\nimport { SelectCurrencies } from '../redux/reducers/currencies';\nimport store, { RootState } from '../redux/store';\nimport { useSelector } from 'react-redux';\nimport { useGetNotExecutedTransactionsQuery, useLazyGetNotExecutedTransactionsQuery } from '../redux/api';\nimport selectedAccount, { SelectSelectedAccount } from '../redux/reducers/selectedAccount';\nimport transaction from '../pages/multisig/transaction';\n\nexport interface TransactionHook {\n    amount: number;\n    coin: AltCoins;\n    coinName: string;\n    direction: TransactionDirection;\n    date: string;\n    amountUSD: number;\n    surplus: string;\n    type: TransactionType;\n    hash: string;\n    rawDate: string;\n    blockNum: string;\n    from: string;\n    to: string;\n    swap?: {\n        outputCoin: AltCoins\n        outputAmount: string\n        outputCoinName: string\n        inputCoin: AltCoins\n        inputCoinName: string\n        inputAmount: string\n    }\n}\n\nexport interface TransactionHookByDate {\n    [name: string]: TransactionHook[]\n}\n\nexport interface TransactionHookByDateInOut {\n    [name: string]: {\n        date: string,\n        recieved: RenderedTransactionForm[],\n        swaps: TransactionHook[],\n        sent: RenderedTransactionForm[]\n    }\n}\n\nexport interface RenderedTransactionForm {\n    amount: string[];\n    coin: AltCoins[];\n    hashs: string[];\n    address: string;\n    date: string;\n    coinName: string[];\n    blockNumber: string;\n    amountUSD: number[];\n    rawDate: string;\n    surplus: string;\n}\n\nconst useTransactionProcess = (groupByDate = false): [TransactionHookByDateInOut, GetTransactions] | [] => {\n    const transactions = useSelector(SelectTransactions);\n    const currencies = useSelector((state: RootState) => state.currencyandbalance.celoCoins);\n    const selectedAccount = useSelector(SelectSelectedAccount);\n\n    return useMemo(() => {\n        if (transactions) {\n            let result = [...transactions.result].reverse().map((transaction, index) => {\n                let amount, coin, coinName, direction, date, amountUSD, surplus, type, hash, rawDate, blockNum, outputCoin, outputAmount, outputCoinName, inputCoin, inputAmount, inputCoinName, from, to, swap;\n\n                const tx = transaction\n                rawDate = tx.timeStamp;\n                blockNum = tx.blockNumber;\n                hash = tx.hash\n                amount = parseFloat(Web3.utils.fromWei(tx.value, 'ether'))\n                let feeName = Object.entries(TransactionFeeTokenName).find(w => w[0] === tx.tokenSymbol)?.[1]\n                coin = feeName ? Coins[feeName] : Coins.cUSD;\n                coinName = feeName ? coin.name : \"Unknown\";\n                from = tx.from;\n                to = tx.to;\n                direction = tx.input.startsWith(\"0x38ed1739\") ? TransactionDirection.Swap : tx.from.trim().toLowerCase() === selectedAccount.trim().toLowerCase() ? TransactionDirection.Out : TransactionDirection.In\n                date = dateFormat(new Date(parseInt(tx.timeStamp) * 1e3), \"mediumDate\")\n                if (direction == TransactionDirection.Swap) {\n                    inputCoin = Object.values(Coins).find((w: AltCoins) => w.contractAddress.toLowerCase().includes(tx.input.substring(tx.input.length - 64 - 40, tx.input.length - 64).toLowerCase()));\n                    inputCoinName = inputCoin.name\n                    inputAmount = Web3.utils.fromWei(Web3.utils.toBN(tx.input.substring(10, 74)), 'ether');\n                    inputAmount = parseFloat(inputAmount).toFixed(2);\n\n\n                    outputCoin = Object.values(Coins).find((w: AltCoins) => w.contractAddress.toLowerCase().includes(tx.input.substring(tx.input.length - 40).toLowerCase()));\n                    outputCoinName = outputCoin.name\n                    outputAmount = Web3.utils.fromWei(Web3.utils.toBN(tx.input.substring(74, 74 + 64)), 'ether');\n                    outputAmount = parseFloat(outputAmount).toFixed(2);\n\n                    swap = {\n                        inputAmount,\n                        inputCoin,\n                        inputCoinName,\n                        outputAmount,\n                        outputCoin,\n                        outputCoinName\n                    }\n                }\n                amountUSD = direction !== TransactionDirection.Swap ? (currencies[coin.name]?.price ?? 0) * parseFloat(parseFloat(Web3.utils.fromWei(tx.value, 'ether')).toFixed(4)) : -1\n                surplus = direction === TransactionDirection.In ? '+' : '-'\n                type = TransactionDirection.Swap !== direction ? direction === TransactionDirection.In ? TransactionType.IncomingPayment : TransactionType.QuickTransfer : TransactionType.Swap\n\n                return { amount, coin, coinName, direction, date, amountUSD, surplus, type, hash, rawDate, blockNum, swap, to, from }\n            })\n\n            const byBlockNumber = _(result.filter(w => w !== null) as TransactionHook[]).groupBy(\"blockNum\").value() as TransactionHookByDate\n\n            const res = Object.entries(byBlockNumber).reverse().reduce<TransactionHookByDateInOut>((a, e, i) => {\n\n                const filtered: TransactionHook[] = []\n                const hashFilter = _(e[1] as TransactionHook[]).groupBy(\"hash\").value() as TransactionHookByDate\n\n                Object.entries(hashFilter).forEach(([hash, transactions]) => {\n                    filtered.push(_.maxBy(transactions, 'amount') as TransactionHook)\n                })\n\n                const froms = _(filtered.filter(s => s.direction === TransactionDirection.In) as TransactionHook[]).groupBy(\"from\").value() as TransactionHookByDate\n                const swaps = filtered.filter(s => s.direction === TransactionDirection.Swap) as TransactionHook[]\n                const tos = _(filtered.filter(s => s.direction === TransactionDirection.Out) as TransactionHook[]).groupBy(\"to\").value()\n\n                const renFroms: RenderedTransactionForm[] = [];\n\n                Object.entries(froms).forEach(([address, transaction]) => {\n                    renFroms.push({\n                        amount: transaction.map(s => s.amount.toFixed(2)),\n                        coin: transaction.map(s => s.coin),\n                        coinName: transaction.map(s => s.coinName),\n                        amountUSD: transaction.map(s => s.amountUSD),\n                        address,\n                        date: transaction[0].date,\n                        blockNumber: transaction[0].blockNum,\n                        hashs: transaction.map(s => s.hash),\n                        rawDate: transaction[0].rawDate,\n                        surplus: transaction[0].surplus\n                    })\n\n                })\n\n                const renTos: RenderedTransactionForm[] = []\n\n                Object.entries(tos).forEach(([address, transaction]) => {\n                    renTos.push({\n                        amount: transaction.map(s => s.amount.toFixed(2)),\n                        coin: transaction.map(s => s.coin),\n                        coinName: transaction.map(s => s.coinName),\n                        amountUSD: transaction.map(s => s.amountUSD),\n                        hashs: transaction.map(s => s.hash),\n                        address,\n                        date: transaction[0].date,\n                        blockNumber: transaction[0].blockNum,\n                        rawDate: transaction[0].rawDate,\n                        surplus: transaction[0].surplus\n                    })\n\n                })\n\n                a[i] = {\n                    date: e[1][0].date,\n                    recieved: renFroms,\n                    swaps,\n                    sent: renTos,\n                }\n                return a;\n            }, {})\n\n            return [res, transactions];\n        };\n        return []\n    }, [transactions])\n}\nexport default useTransactionProcess;","const hostname = window.location.hostname;\nexport const BaseUrl = hostname.includes(\"localhost\") ? \"http://app.localhost/api\" : \"/api\"","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AccountCreate, AccountCreateResponse, AccountExist, AccountExistResponse, AccountInfo, CreatePassword, CreatePasswordResponse, Signin, SigninResponse, Unlock, UnlockResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const accountAPI = createApi({\n    reducerPath: 'accountAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        signIn: builder.mutation<SigninResponse, Signin>({\n            query: (data) => ({\n                url: '/account/signin',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        accountCreate: builder.mutation<AccountCreateResponse, AccountCreate>({\n            query: (data) => ({\n                url: `/account/create`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        createPassword: builder.mutation<CreatePasswordResponse, CreatePassword>({\n            query: (data) => ({\n                url: `/account/createPassword`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        accountExist: builder.mutation<AccountExistResponse, AccountExist>({\n            query: (data) => ({\n                url: `/account/isExist`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        unlock: builder.mutation<UnlockResponse, Unlock>({\n            query: (data) => ({\n                url: `/account/reLogin`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        putAccountInfo: builder.mutation<void, AccountInfo>({\n            query: (data) => ({\n                url: `/account`,\n                method: 'PUT',\n                body: data\n            })\n        }),\n        setTime: builder.mutation<void, { time: string }>({\n            query: (data) => ({\n                url: `/account/setTime`,\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getTime: builder.query<{ date: string }, void>({\n            query: () => ({\n                url: `/account/time`,\n            })\n        }),\n        getDetails: builder.query<{ result: { userName: string, surname: string, companyName: string } }, void>({\n            query: () => ({\n                url: `/account/details`,\n            })\n        })\n    }),\n})\n\n\nexport const { useLazyGetTimeQuery, useGetDetailsQuery, useLazyGetDetailsQuery, useSetTimeMutation, useSignInMutation, useAccountCreateMutation, useCreatePasswordMutation, useAccountExistMutation, useUnlockMutation, usePutAccountInfoMutation } = accountAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { CustomerCreate, CustomerCreateResponse, GetCustomer } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const customerAPI = createApi({\n    reducerPath: 'customerAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        customerCreate: builder.mutation<CustomerCreateResponse, CustomerCreate>({\n            query: (data) => ({\n                url: '/customer/create',\n                method: 'POST',\n                body: data\n            }),\n        }),\n\n        getCustomer: builder.query<CustomerCreateResponse[], GetCustomer>({\n            query: (data) => ({\n                url: `/customer/byAccount`,\n                params: data\n            })\n        }),\n\n        deleteCustomer: builder.mutation<void, number>({\n            query: (id) => ({\n                url: `/customer/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n    }),\n})\n\n\nexport const { useCustomerCreateMutation, useGetCustomerQuery, useDeleteCustomerMutation } = customerAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { CreateTeam, CreateTeamResponse, GetTeams, GetTeamsResponse, GetTeamsWithMembers, GetTeamsWithMembersResponse, UpdateTeam, UpdateTeamResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamAPI = createApi({\n  reducerPath: 'teamAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BaseUrl,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).storage?.user?.token;\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: (builder) => ({\n    createTeam: builder.mutation<CreateTeamResponse, CreateTeam>({\n      query: (data) => ({\n        url: '/team/create',\n        method: 'POST',\n        body: data\n      }),\n    }),\n\n    getTeams: builder.query<GetTeamsResponse, GetTeams>({\n      query: (data) => ({\n        url: `/team/byAccount`,\n        params: data\n      })\n    }),\n\n    getTeamsWithMembers: builder.query<GetTeamsWithMembersResponse, GetTeamsWithMembers>({\n      query: (data) => ({\n        url: `/team/byAccount/withMembers`,\n        params: data\n      })\n    }),\n\n    deleteTeam: builder.mutation<any, string>({\n      query: (id) => ({\n        url: `/team/${id}`,\n        method: 'DELETE'\n      })\n    }),\n\n    updateTeam: builder.mutation<UpdateTeamResponse, { id: string, body: UpdateTeam }>({\n      query: ({ id, body }) => ({\n        url: `/team/${id}`,\n        method: 'PATCH',\n        body: body\n      })\n    })\n  }),\n})\n\n\nexport const { useCreateTeamMutation, useLazyGetTeamsQuery, useLazyGetTeamsWithMembersQuery ,useGetTeamsWithMembersQuery, useDeleteTeamMutation, useUpdateTeamMutation } = teamAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { GetBalanceResponse, SendCelo, SendCeloResponse, SendStableToken, SendStableTokenResponse, SendMultipleTransaction, SendAltcoin, SendAltcoinResponse, GetCurrencies } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const transactionAPI = createApi({\n    reducerPath: 'transactionAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getBalance: builder.query<GetBalanceResponse, void>({\n            query: () => ({\n                url: '/transaction/balance',\n            })\n        }),\n        getCurrencies: builder.query<GetCurrencies, void>({\n            query: () => ({\n                url: '/transaction/currency',\n            })\n        }),\n        sendCelo: builder.mutation<SendCeloResponse, SendCelo>({\n            query: (data) => ({\n                url: '/transaction/sendCelo',\n                method: 'POST',\n                body: data,\n            })\n        }),\n\n        sendStableToken: builder.mutation<SendStableTokenResponse, SendStableToken>({\n            query: (data) => ({\n                url: '/transaction/sendStableCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendAltToken: builder.mutation<SendAltcoinResponse, SendAltcoin>({\n            query: (data) => ({\n                url: '/transaction/sendAltCoin',\n                method: 'POST',\n                body: data,\n            })\n        }),\n        sendMultipleTransactions: builder.mutation<void, SendMultipleTransaction>({\n            query: (data) => ({\n                url: '/transaction/multipleTran',\n                method: 'POST',\n                body: data,\n            })\n        })\n    }),\n})\n\n\nexport const { useGetBalanceQuery, useLazyGetBalanceQuery, useLazyGetCurrenciesQuery ,useGetCurrenciesQuery,  useSendCeloMutation, useSendStableTokenMutation, useSendAltTokenMutation, useSendMultipleTransactionsMutation } = transactionAPI\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AddMember, AddMemberResponse, GetTeams, GetTeamsResponse, Member, UpdateMember, UpdateMemberResponse } from '../../types/sdk'\nimport { RootState } from '../store';\n\nexport const teamMemberAPI = createApi({\n    reducerPath: 'teamMemberAPI',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        addMember: builder.mutation<AddMemberResponse, AddMember>({\n            query: (data) => ({\n                url: `/team-member/add`,\n                method: 'POST',\n                body: data\n            })\n        }),\n\n        getMembers: builder.query<GetTeamsResponse, { id: string, params: GetTeams }>({\n            query: ({ id, params }) => ({\n                url: `/team-member/byTeam/${id}`,\n                params: params\n            })\n        }),\n\n        getMember: builder.query<{member: Member}, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`\n            })\n        }),\n\n        deleteMember: builder.mutation<void, string>({\n            query: (id) => ({\n                url: `/team-member/${id}`,\n                method: 'DELETE',\n            })\n        }),\n\n        updateMember: builder.mutation<UpdateMemberResponse, UpdateMember>({\n            query: (data) => ({\n                url: `/team-member`,\n                method: 'PUT',\n                body: data\n            })\n        })\n    }),\n})\n\n\nexport const { useAddMemberMutation, useLazyGetMemberQuery, useGetMembersQuery, useLazyGetMembersQuery, useDeleteMemberMutation, useUpdateMemberMutation } = teamMemberAPI","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { GetTransactions } from '../../types/sdk';\n\n\nexport const BlockScoutApi = createApi({\n\tbaseQuery: fetchBaseQuery({\n\t\tbaseUrl: 'https://explorer.celo.org/api'\n\t}),\n\tendpoints: (builder) => ({\n\t\tgetTransactions: builder.query<GetTransactions, string>({\n\t\t\tquery: (data) => ({\n\t\t\t\turl: `?module=account&action=tokentx&address=`+data\n\t\t\t})\n\t\t}),\n\t\tgetTransactionBuHash: builder.query<GetTransactions, string>({\n\t\t\tquery: (data) => ({\n\t\t\t\turl: `?module=transaction&action=gettxinfo&txhash=`+data\n\t\t\t})\n\t\t})\n\t})\n});\n\nexport const { useGetTransactionsQuery, useLazyGetTransactionsQuery, useLazyGetTransactionBuHashQuery, useGetTransactionBuHashQuery } = BlockScoutApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { GetMinimumAmount, GetMinimumAmountResponse, GetSwap, GetSwapResponse } from '../../types/sdk';\nimport { BaseUrl } from '../../utility/const'\nimport { RootState } from '../store';\n\nexport const swapAPI = createApi({\n    keepUnusedDataFor: 0,\n    reducerPath: 'swapApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    endpoints: (builder) => ({\n        getConvertableTokenAmount: builder.mutation<GetMinimumAmountResponse, GetMinimumAmount>({\n            query: (data) => ({\n                url: '/transaction/minimumAmountOut',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        swapCoins: builder.mutation<GetSwapResponse, GetSwap>({\n            query: (data) =>({\n                url: '/transaction/swap',\n                method: 'POST',\n                body: data\n            })\n        })    \n    }),\n})\n\nexport const {useGetConvertableTokenAmountMutation, useSwapCoinsMutation} = swapAPI\n\n\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { BaseUrl } from '../../utility/const'\nimport { AddOwner, AddOwnerResponse, ChangeRequiremnt, ChangeRequiremntResponse, CustomerCreate, CustomerCreateResponse, GetCustomer, GetRequiredSignatures, GetRequiredSignaturesResponse, MultisigBalance, MultisigBalanceResponse, NonExecTransaction, NonExecTransactionItem, NonExecTransactionResponse, RecTransaction, RecTransactionResponse, ReplaceOwner, SubmitTrasaction, SubmitTrasactionResponse } from '../../types/sdk'\nimport { RootState } from '../store';\nimport { method } from 'lodash';\n\nexport const multisigAPI = createApi({\n    reducerPath: 'multisigAPI',\n    keepUnusedDataFor: 0,\n    baseQuery: fetchBaseQuery({\n        baseUrl: BaseUrl,\n        prepareHeaders: (headers, { getState }) => {\n            const token = (getState() as RootState).storage?.user?.token;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n        mode: 'cors',\n    }),\n    endpoints: (builder) => ({\n\n        getMultisigBalance: builder.query<MultisigBalanceResponse, MultisigBalance>({\n            query: (data) => ({\n                url: '/multisig/balance/' + data.address,\n            })\n        }),\n\n        //MULTISIG\n        importAddress: builder.mutation<{ result: { address: string } }, { multisigAddress: string }>({\n            query: (data) => ({\n                url: '/multisig/importAddress',\n                method: 'POST',\n                body: data\n            }),\n        }),\n        createAddress: builder.mutation<{ multiSigAddress: { address: string } }, { phrase: string, owners: string[], required: number, internalRequired: number }>({\n            query: (data) => ({\n                url: '/multisig/createMultisig',\n                method: 'POST',\n                body: data\n            })\n        }),\n        getMultisigAddresses: builder.query<{ addresses: Array<{ address: string }> }, void>({\n            query: () => ({\n                url: '/multisig/addresses',\n            })\n        }),\n        removeMultisigAddress: builder.mutation<{ message: string }, { address: string }>({\n            query: (data) => ({\n                url: '/multisig/removeAddress/' + data.address,\n                method: 'DELETE',\n            })\n        }),\n\n\n        //OWNERS\n        getOwners: builder.query<string[], { address: string }>({\n            query: (data) => ({\n                url: '/multisig/owners/' + data.address,\n            })\n        }),\n        addOwner: builder.mutation<AddOwnerResponse, AddOwner>({\n            query: (data) => ({\n                url: '/multisig/addOwner',\n                method: 'POST',\n                body: data\n            })\n        }),\n        removeOwner: builder.mutation<AddOwnerResponse, AddOwner>({\n            query: (data) => ({\n                url: '/multisig/removeOwner',\n                method: 'DELETE',\n                body: data\n            })\n        }),\n        replaceOwner: builder.mutation<AddOwnerResponse, ReplaceOwner>({\n            query: (data) => ({\n                url: '/multisig/replaceOwner',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n\n\n\n        // Settings\n        getRequiredSignatures: builder.query<GetRequiredSignaturesResponse, GetRequiredSignatures>({\n            query: (data) => ({\n                url: '/multisig/required/' + data.address,\n            })\n        }),\n        changeRequiredSignatures: builder.mutation<ChangeRequiremntResponse, ChangeRequiremnt>({\n            query: (data) => ({\n                url: '/multisig/changeRequirement',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        chnageInternalRequiredSignatures: builder.mutation<ChangeRequiremntResponse, ChangeRequiremnt>({\n            query: (data) => ({\n                url: '/multisig/changeInternalRequirement',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n\n\n        //Transactions\n        submitTransactions: builder.mutation<SubmitTrasactionResponse, SubmitTrasaction>({\n            query: (data) => ({\n                url: '/multisig/submitTransaction',\n                method: 'POST',\n                body: data\n            })\n        }),\n        revokeTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/revokeTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        confirmTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/confirmTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        executeTransactions: builder.mutation<RecTransactionResponse, RecTransaction>({\n            query: (data) => ({\n                url: '/multisig/executeTransaction',\n                method: 'PATCH',\n                body: data\n            })\n        }),\n        getMultisigTransaction: builder.query<{ txResult: NonExecTransactionItem }, NonExecTransaction & { id: string }>({\n            query: (data) => ({\n                url: '/multisig/transaction/' + data.address + `/${data.id}`,\n            })\n        }),\n        getNotExecutedTransactions: builder.query<NonExecTransactionResponse, NonExecTransaction>({\n            query: (data) => ({\n                url: '/multisig/transactions/' + data.address,\n            })\n        }),\n        getTransactionsByPagination: builder.query<NonExecTransactionResponse, NonExecTransaction & { skip: number, take: number }>({\n            query: (data) => ({\n                url: '/multisig/transactions/' + data.address + `/${data.skip}/${data.take}`,\n            })\n        }),\n        getAllTransactions: builder.query<{ transactions: NonExecTransactionItem[] }, NonExecTransaction>({\n            query: (data) => ({\n                url: '/multisig/allTransactions/' + data.address,\n                transformResponse: (response: { data: { transactions: NonExecTransactionItem[] } }) => {\n                    response.data.transactions.forEach((item, index) => {\n                        item.id = index;\n                    })\n\n                    return response;\n                }\n            })\n        })\n    }),\n})\n\n\nexport const {\n    useGetTransactionsByPaginationQuery, useLazyGetTransactionsByPaginationQuery,\n    useGetAllTransactionsQuery, useLazyGetAllTransactionsQuery,\n    useCreateAddressMutation, useGetMultisigTransactionQuery, useLazyGetMultisigTransactionQuery,\n    useGetMultisigBalanceQuery, useLazyGetMultisigBalanceQuery,\n    useImportAddressMutation, useAddOwnerMutation, useChangeRequiredSignaturesMutation,\n    useChnageInternalRequiredSignaturesMutation, useConfirmTransactionsMutation,\n    useExecuteTransactionsMutation, useGetMultisigAddressesQuery,\n    useGetNotExecutedTransactionsQuery, useGetOwnersQuery, useGetRequiredSignaturesQuery,\n    useLazyGetMultisigAddressesQuery, useLazyGetNotExecutedTransactionsQuery, useLazyGetOwnersQuery,\n    useLazyGetRequiredSignaturesQuery, useRemoveMultisigAddressMutation, useRemoveOwnerMutation,\n    useReplaceOwnerMutation, useRevokeTransactionsMutation, useSubmitTransactionsMutation } = multisigAPI","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\ninterface NotificatinoState {\n    onSuccess: boolean;\n    onSuccessText: string | JSX.Element;\n    onError: boolean;\n    onErrorText: string;\n    notificationSeen: number;\n}\n\nconst initialState: NotificatinoState = {\n    onSuccess: false,\n    onSuccessText: 'Successfully!',\n    onError: false,\n    onErrorText: '',\n    notificationSeen: 0\n}\n\nexport const notificationSlice = createSlice({\n    name: 'notification',\n    initialState,\n    reducers: {\n        changeError: (state, action: PayloadAction<{ activate: boolean; text?: string }>) => {\n            state.onErrorText = action.payload.text || \"Something went wrong\";\n            state.onError = action.payload.activate;\n        },\n        changeSuccess: (state, action: PayloadAction<{ activate: boolean; text?: string | JSX.Element }>) => {\n            state.onSuccess = action.payload.activate;\n            state.onSuccessText = action.payload.text || \"Successfully!\"\n        },\n        changeNotificationSeen: (state, action: PayloadAction<number>) => {\n            state.notificationSeen = action.payload;\n        }\n    },\n})\n\nexport const { changeError, changeSuccess, changeNotificationSeen } = notificationSlice.actions\n\nexport const selectError = (state: RootState) => state.notification.onError\nexport const selectErrorText = (state: RootState) => state.notification.onErrorText\nexport const selectSuccessText = (state: RootState) => state.notification.onSuccessText\nexport const selectSuccess = (state: RootState) => state.notification.onSuccess\n\nexport default notificationSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\nimport { AltCoins } from '../../types/coins';\nimport Initalization from '../../utility/init';\nimport { RootState } from '../store';\n\nexport interface ICurrencyInternal {\n\tprice?: number;\n\tpercent_24?: number;\n\tcurrent_balance?: number;\n}\n\nexport interface IBalanceItem {\n\tamount: number;\n\tper_24: number;\n\tpercent: number;\n\tcoins: AltCoins;\n\ttokenPrice: number;\n}\n\ninterface IBalanceMembers {\n\tCELO: IBalanceItem | undefined;\n\tcUSD: IBalanceItem | undefined;\n\tcEUR: IBalanceItem | undefined;\n\tUBE: IBalanceItem | undefined;\n\tMOO: IBalanceItem | undefined;\n\tMOBI: IBalanceItem | undefined;\n\tPOOF: IBalanceItem | undefined;\n\tcREAL: IBalanceItem | undefined;\n}\n\ninterface ICurrency {\n\tceloCoins: ICoinMembers;\n\tbalances: IBalanceMembers;\n}\n\nexport interface ICoinMembers {\n\tCELO: ICurrencyInternal | undefined;\n\tcUSD: ICurrencyInternal | undefined;\n\tcEUR: ICurrencyInternal | undefined;\n\tUBE: ICurrencyInternal | undefined;\n\tMOO: ICurrencyInternal | undefined;\n\tMOBI: ICurrencyInternal | undefined;\n\tPOOF: ICurrencyInternal | undefined;\n\tcREAL: ICurrencyInternal | undefined;\n}\n\nconst State: ICurrency = {\n\tceloCoins: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined,\n\t\tcREAL: undefined,\n\t},\n\tbalances: {\n\t\tCELO: undefined,\n\t\tcUSD: undefined,\n\t\tcEUR: undefined,\n\t\tUBE: undefined,\n\t\tMOO: undefined,\n\t\tMOBI: undefined,\n\t\tPOOF: undefined,\n\t\tcREAL: undefined,\n\t}\n};\n\nexport const CurrencySlice = createSlice({\n\tname: 'currencySlice',\n\tinitialState: State,\n\treducers: {\n\t\tupdateAllCurrencies: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return\n\t\t\tconst [celo, cusd, ceur, ube, moo, mobi, poof, creal]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { percent_24: celo.percent_24, price: celo.price },\n\t\t\t\tcUSD: { percent_24: cusd.percent_24, price: cusd.price },\n\t\t\t\tcEUR: { percent_24: ceur.percent_24, price: ceur.price },\n\t\t\t\tUBE: { percent_24: ube.percent_24, price: ube.price },\n\t\t\t\tMOO: { percent_24: moo.percent_24, price: moo.price },\n\t\t\t\tMOBI: { percent_24: mobi.percent_24, price: mobi.price },\n\t\t\t\tPOOF: { percent_24: poof.percent_24, price: poof.price },\n\t\t\t\tcREAL: { percent_24: creal.percent_24, price: creal.price },\n\t\t\t};\n\t\t},\n\t\tupdateBalance: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return\n\t\t\tconst [celo, cusd, ceur, ube, moo, mobi, poof, creal]: ICurrencyInternal[] = action.payload;\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: { ...state.celoCoins.CELO, current_balance: celo.current_balance },\n\t\t\t\tcUSD: { ...state.celoCoins.cUSD, current_balance: cusd.current_balance },\n\t\t\t\tcEUR: { ...state.celoCoins.cEUR, current_balance: ceur.current_balance },\n\t\t\t\tUBE: { ...state.celoCoins.UBE, current_balance: ube.current_balance },\n\t\t\t\tMOO: { ...state.celoCoins.MOO, current_balance: moo.current_balance },\n\t\t\t\tMOBI: { ...state.celoCoins.MOBI, current_balance: mobi.current_balance },\n\t\t\t\tPOOF: { ...state.celoCoins.POOF, current_balance: poof.current_balance },\n\t\t\t\tcREAL: { ...state.celoCoins.cREAL, current_balance: creal.current_balance },\n\t\t\t};\n\t\t},\n\t\tdeleteBalance: (state: ICurrency) => {\n\t\t\tstate.celoCoins = {\n\t\t\t\tCELO: undefined,\n\t\t\t\tcUSD: undefined,\n\t\t\t\tcEUR: undefined,\n\t\t\t\tUBE: undefined,\n\t\t\t\tMOO: undefined,\n\t\t\t\tMOBI: undefined,\n\t\t\t\tPOOF: undefined,\n\t\t\t\tcREAL: undefined,\n\t\t\t}\n\t\t\tstate.balances = {\n\t\t\t\tCELO: undefined,\n\t\t\t\tcUSD: undefined,\n\t\t\t\tcEUR: undefined,\n\t\t\t\tUBE: undefined,\n\t\t\t\tMOO: undefined,\n\t\t\t\tMOBI: undefined,\n\t\t\t\tPOOF: undefined,\n\t\t\t\tcREAL: undefined,\n\t\t\t}\n\t\t},\n\t\tupdateUserBalance: (state: ICurrency, action) => {\n\t\t\tif (!action.payload) return\n\t\t\tconst [celo, cusd, ceur, ube, moo, mobi, poof, creal]: IBalanceItem[] = action.payload;\n\t\t\tstate.balances = {\n\t\t\t\tCELO: {\n\t\t\t\t\tamount: celo.amount,\n\t\t\t\t\tper_24: celo.per_24,\n\t\t\t\t\tpercent: celo.percent,\n\t\t\t\t\tcoins: celo.coins,\n\t\t\t\t\ttokenPrice: celo.tokenPrice\n\t\t\t\t},\n\t\t\t\tcUSD: {\n\t\t\t\t\tamount: cusd.amount,\n\t\t\t\t\tper_24: cusd.per_24,\n\t\t\t\t\tpercent: cusd.percent,\n\t\t\t\t\tcoins: cusd.coins,\n\t\t\t\t\ttokenPrice: cusd.tokenPrice\n\t\t\t\t},\n\t\t\t\tcEUR: {\n\t\t\t\t\tamount: ceur.amount,\n\t\t\t\t\tper_24: ceur.per_24,\n\t\t\t\t\tpercent: ceur.percent,\n\t\t\t\t\tcoins: ceur.coins,\n\t\t\t\t\ttokenPrice: ceur.tokenPrice\n\t\t\t\t},\n\t\t\t\tUBE: {\n\t\t\t\t\tamount: ube.amount,\n\t\t\t\t\tper_24: ube.per_24,\n\t\t\t\t\tpercent: ube.percent,\n\t\t\t\t\tcoins: ube.coins,\n\t\t\t\t\ttokenPrice: ube.tokenPrice\n\t\t\t\t},\n\t\t\t\tMOO: {\n\t\t\t\t\tamount: moo.amount,\n\t\t\t\t\tper_24: moo.per_24,\n\t\t\t\t\tpercent: moo.percent,\n\t\t\t\t\tcoins: moo.coins,\n\t\t\t\t\ttokenPrice: moo.tokenPrice\n\t\t\t\t},\n\t\t\t\tMOBI: {\n\t\t\t\t\tamount: mobi.amount,\n\t\t\t\t\tper_24: mobi.per_24,\n\t\t\t\t\tpercent: mobi.percent,\n\t\t\t\t\tcoins: mobi.coins,\n\t\t\t\t\ttokenPrice: mobi.tokenPrice\n\t\t\t\t},\n\t\t\t\tPOOF: {\n\t\t\t\t\tamount: poof.amount,\n\t\t\t\t\tper_24: poof.per_24,\n\t\t\t\t\tpercent: poof.percent,\n\t\t\t\t\tcoins: poof.coins,\n\t\t\t\t\ttokenPrice: poof.tokenPrice\n\t\t\t\t},\n\t\t\t\tcREAL: {\n\t\t\t\t\tamount: creal.amount,\n\t\t\t\t\tper_24: creal.per_24,\n\t\t\t\t\tpercent: creal.percent,\n\t\t\t\t\tcoins: creal.coins,\n\t\t\t\t\ttokenPrice: creal.tokenPrice\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n});\n\nexport const { updateAllCurrencies, updateUserBalance, deleteBalance } = CurrencySlice.actions;\n\nexport const SelectCurrencies = (state: RootState): ICoinMembers => state.currencyandbalance.celoCoins;\nexport const SelectBalances = (state: RootState): IBalanceMembers => state.currencyandbalance.balances;\nexport const SelectCelo = (state: RootState) => state.currencyandbalance.celoCoins.CELO;\nexport const SelectCusd = (state: RootState) => state.currencyandbalance.celoCoins.cUSD;\nexport const SelectCeur = (state: RootState) => state.currencyandbalance.celoCoins.cEUR;\n\nexport default CurrencySlice.reducer;\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLazyGetBalanceQuery, useLazyGetCurrenciesQuery, useLazyGetMultisigBalanceQuery, useLazyGetNotExecutedTransactionsQuery, useLazyGetTransactionsQuery } from '../redux/api'\nimport { SelectCurrencies, updateAllCurrencies, updateUserBalance } from '../redux/reducers/currencies'\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount'\nimport { selectStorage } from '../redux/reducers/storage'\nimport { SelectTransactions, setTransactions } from '../redux/reducers/transactions'\nimport { Coins } from '../types/coins'\nimport { GetBalanceResponse, MultisigBalanceResponse } from '../types/sdk'\n\nconst useRefetchData = (disableInterval = false) => {\n    const dispatch = useDispatch()\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const transactionStore = useSelector(SelectTransactions)\n    const currencies = useSelector(SelectCurrencies)\n\n    const [currencyTrigger, { data: currencyData, isFetching }] = useLazyGetCurrenciesQuery()\n    const [balanceTrigger, { data: balanceData, isFetching: balanceFetching }] = useLazyGetBalanceQuery()\n    const [transactionTrigger, { data: transactionData, isFetching: transactionFetching }] = useLazyGetTransactionsQuery()\n\n    const [multisigTrigger, { data: multisigBalance, isFetching: multiFetching }] = useLazyGetMultisigBalanceQuery()\n\n\n    useEffect(() => {\n        if (transactionData && transactionData.result.length > 0 && !transactionFetching) {\n            if (transactionStore?.result.length !== transactionData.result.length || (transactionStore.result[0].hash !== transactionData.result[0].hash || transactionStore.result[transactionStore.result.length - 1].hash !== transactionData.result[transactionData.result.length - 1].hash)) {\n                dispatch(setTransactions(transactionData))\n            }\n        } else if (transactionData && transactionData.result.length === 0) dispatch(setTransactions(transactionData))\n    }, [transactionData, transactionFetching])\n\n    useEffect(() => {\n        if (currencyData && currencyData.data && (storage?.accountAddress === selectedAccount && balanceData && !balanceFetching) || (storage?.accountAddress !== selectedAccount && multisigBalance && !multiFetching)) {\n            const updatedCurrency = currencyData!.data.map(d => ({\n                price: d.price,\n                percent_24: d.percent_24\n            }))\n\n            let [Celo, Cusd, Ceur, Ube, Moo, Mobi, Poof, cReal] = updatedCurrency;\n            // cReal = {\n            //     price: 0,\n            //     percent_24: 0\n            // }\n            const celo = Celo\n            const cusd = Cusd\n            const ceur = Ceur\n            const ube = Ube\n            const moo = Moo\n            const mobi = Mobi\n            const poof = Poof\n            const creal = cReal\n\n\n\n            if (balanceData || multisigBalance) {\n                let balance;\n                if (storage?.accountAddress === selectedAccount) {\n                    balance = balanceData;\n                } else balance = multisigBalance\n\n                if (balance && celo && cusd && ceur && ube && moo && mobi && poof && creal) {\n                    let pCelo;\n                    let pCusd;\n                    let pCeur;\n                    let pUbe;\n                    let pMoo;\n                    let pMobi;\n                    let pPoof;\n                    let pReal;\n                    if (storage?.accountAddress === selectedAccount) {\n                        balance = balance as GetBalanceResponse;\n                        pCelo = parseFloat(balance.celoBalance);\n                        pCusd = parseFloat(balance.cUSDBalance);\n                        pCeur = parseFloat(balance.cEURBalance);\n                        pUbe = parseFloat(balance.UBE);\n                        pMoo = parseFloat(balance.MOO);\n                        pMobi = parseFloat(balance.MOBI);\n                        pPoof = parseFloat(balance.POOF);\n                        pReal = parseFloat(balance.cREAL);\n                    } else {\n                        balance = balance as MultisigBalanceResponse;\n                        pCelo = parseFloat(balance.celo);\n                        pCusd = parseFloat(balance.cUSD);\n                        pCeur = parseFloat(balance.cEUR);\n                        pUbe = parseFloat(balance.UBE);\n                        pMoo = parseFloat(balance.MOO);\n                        pMobi = parseFloat(balance.MOBI);\n                        pPoof = parseFloat(balance.POOF);\n                        pReal = parseFloat(balance.cREAL);\n                    }\n\n                    const celoPrice = pCelo * (celo.price ?? 0);\n                    const cusdPrice = pCusd * (cusd.price ?? 0);\n                    const ceurPrice = pCeur * (ceur.price ?? 0);\n                    const ubePrice = pUbe * (ube.price ?? 0);\n                    const mooPrice = pMoo * (moo.price ?? 0);\n                    const mobiPrice = pMobi * (mobi.price ?? 0);\n                    const poofPrice = pPoof * (poof.price ?? 0);\n                    const cRealPrice = pReal * (creal.price ?? 0);\n\n                    const total = celoPrice + cusdPrice + mooPrice + + ceurPrice + ubePrice + mobiPrice + poofPrice + cRealPrice;\n\n                    const updatedBalance = [\n                        { amount: pCelo, per_24: Celo.percent_24, percent: (celoPrice * 100) / total, coins: Coins.celo, tokenPrice: +celo.price },\n                        { amount: pCusd, per_24: Cusd.percent_24, percent: (cusdPrice * 100) / total, coins: Coins.cUSD, tokenPrice: +cusd.price },\n                        { amount: pCeur, per_24: Ceur.percent_24, percent: (ceurPrice * 100) / total, coins: Coins.cEUR, tokenPrice: +ceur.price },\n                        { amount: pUbe, per_24: Ube.percent_24, percent: (ubePrice * 100) / total, coins: Coins.UBE, tokenPrice: +ube.price },\n                        { amount: pMoo, per_24: Moo.percent_24, percent: (mooPrice * 100) / total, coins: Coins.MOO, tokenPrice: +moo.price },\n                        { amount: pMobi, per_24: Mobi.percent_24, percent: (mobiPrice * 100) / total, coins: Coins.MOBI, tokenPrice: +mobi.price },\n                        { amount: pPoof, per_24: Poof.percent_24, percent: (poofPrice * 100) / total, coins: Coins.POOF, tokenPrice: +poof.price },\n                        { amount: pReal, per_24: cReal.percent_24, percent: (cRealPrice * 100) / total, coins: Coins.cREAL, tokenPrice: +creal.price }\n                    ]\n\n                    dispatch(updateUserBalance(updatedBalance))\n                }\n            }\n        }\n\n    }, [balanceData, balanceFetching, multisigBalance, multiFetching])\n\n    useEffect(() => {\n        if (currencyData && !isFetching) {\n            const updatedCurrency = currencyData.data.map(d => ({\n                price: d.price,\n                percent_24: d.percent_24\n            }))\n            \n            if (!currencies.CELO || Object.values(currencies).some((w, i) => {\n                return w.price !== updatedCurrency[i].price\n            })) {\n                dispatch(updateAllCurrencies(\n                    updatedCurrency\n                ))\n            }\n\n            if (storage?.accountAddress === selectedAccount) {\n                transactionTrigger(storage!.accountAddress)\n                balanceTrigger()\n            } else {\n                transactionTrigger(selectedAccount)\n                multisigTrigger({ address: selectedAccount })\n            }\n\n        }\n    }, [currencyData, isFetching])\n\n    const fetching = () => {\n        currencyTrigger()\n    }\n\n    useEffect(() => {\n        let timer: any;\n        if (!disableInterval) {\n            timer = setInterval(() => {\n                fetching()\n            }, 10000)\n        }\n\n        return () => { if (timer) clearInterval(timer) }\n    })\n\n    return [fetching];\n}\n\nexport default useRefetchData;","import { Dispatch, useCallback, useEffect, useRef } from \"react\"\n\n\nconst useModalSideExit = (isSetting: boolean, setSetting: Dispatch<boolean>) => {\n    const settingRef = useRef<HTMLDivElement>(null)\n    const click = useCallback((e) => {\n        if (isSetting && settingRef.current && !settingRef.current.contains(e.target)) {\n            setSetting(false)\n        }\n    }, [isSetting])\n\n    useEffect(() => {\n        window.addEventListener('click', click)\n\n        return () => window.removeEventListener('click', click)\n    }, [click, settingRef])\n\n    return settingRef;\n}\n\nexport default useModalSideExit;","\n\nexport const AddressReducer = (address: string)=>{\n    return address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')\n}","import React, { useEffect } from 'react'\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport 'react-popper-tooltip/dist/styles.css';\n\n\nexport default function Copied({ tooltip, triggerRef }: { tooltip: boolean, triggerRef: React.SetStateAction<HTMLElement | null> }) {\n\n    const {\n        getArrowProps,\n        getTooltipProps,\n        setTooltipRef,\n        setTriggerRef,\n        visible\n    } = usePopperTooltip();\n\n    useEffect(() => {\n        setTriggerRef(triggerRef)\n    }, [triggerRef])\n\n    return (\n        <>\n            {tooltip && (\n                <div\n                    ref={setTooltipRef}\n                    {...getTooltipProps({ className: '!rounded-sm tooltip-container' })}\n                >\n                    <div {...getArrowProps({ className: 'tooltip-arrow ' })} />\n                    <div className=\"text-sm -m-2 px-2 py-1 rounded-xl\">\n                        Copied!\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n","import { AddressReducer } from \"../../utility\";\nimport { useRef, useState } from \"react\";\nimport Copied from \"../copied\";\n\n\nconst Visitcard = ({ name, address }: { name: string, address: string }) => {\n\n    const [tooltip, setTooltip] = useState(false);\n    const [divRef, setDivRef] = useState<HTMLDivElement | null>(null)\n\n\n    return <>\n        <div ref={setDivRef} className=\"px-5 py-1 flex flex-col bg-gray-50 rounded-xl relative \">\n            <h3 className=\"text-lg\">{name}</h3>\n            <p className=\"text-xs\" >{AddressReducer(address)}</p>\n            <div className=\"bg-primary p-2 rounded-xl cursor-pointer absolute translate-x-1/2 -translate-y-1/2  right-0 top-1/2\" onClick={() => {\n                navigator.clipboard.writeText(address.trim())\n                setTooltip(true)\n                setTimeout(() => {\n                    setTooltip(false)\n                }, 300)\n            }}>\n                <img src={'/icons/copy.svg'} alt=\"copy\" className=\"w-[12px] h-[12px]\" />\n            </div>\n        </div>\n        <Copied tooltip={tooltip} triggerRef={divRef} />\n    </>\n}\n\nexport default Visitcard;","import { ClipLoader } from 'react-spinners';\n\nexport default function Button({ children, version = \"main\", type = \"button\", onClick, className, isLoading = false }: { children: JSX.Element | JSX.Element[] | string, version?: \"main\" | \"second\", type?: \"button\" | \"submit\", onClick?: () => void, className?: string, isLoading?: boolean}) {\n    return <button type={type} onClick={onClick} className={`${className} ${version === \"main\" ? \" bg-primary text-white hover:bg-white hover:text-primary\" : 'bg-white text-primary hover:bg-primary hover:text-white'} transition-colors border-2 border-primary shadow-xl px-8 py-3 rounded-xl`} disabled={isLoading}>{isLoading ? <ClipLoader size=\"18px\"/> : children} </button>\n}\n","import { IoIosArrowDown, IoMdNotificationsOutline } from 'react-icons/io';\nimport { BsSearch } from 'react-icons/bs'\nimport { useState, useEffect, useCallback, useRef, useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { Squash as Hamburger } from 'hamburger-react'\nimport { selectToggle, setMenu } from '../../redux/reducers/toggles';\nimport NotificationCointainer from '../../components/notification'\nimport useRefetchData from '../../hooks/useRefetchData';\nimport { useModalSideExit } from '../../hooks';\nimport { SelectSelectedAccount } from '../../redux/reducers/selectedAccount';\nimport { deleteBalance } from '../../redux/reducers/currencies';\nimport { removeTransactions } from '../../redux/reducers/transactions';\nimport { AddressReducer } from '../../utility'\nimport Visitcard from '../../components/dashboard/visitcard';\nimport Button from '../../components/button';\n\nconst Navbar = () => {\n    const storage = useAppSelector(selectStorage)\n    const menuBar = useAppSelector(selectToggle)\n    const dispatch = useAppDispatch()\n    const [refetch] = useRefetchData()\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n    useEffect(() => {\n        dispatch(removeTransactions())\n        dispatch(deleteBalance())\n        refetch()\n    }, [selectedAccount])\n\n    return <div className=\"grid grid-cols-3 md:grid-cols-5 gap-12\">\n        <div className=\"md:hidden pl-4\">\n            <div className=\"inline-block\" onClick={() => dispatch(setMenu(!menuBar.mobileMenu))}>\n                <Hamburger toggled={menuBar.mobileMenu} hideOutline={true} />\n            </div>\n        </div>\n        <div className=\"h-[50px] flex justify-center md:justify-start items-center md:pl-4 lg:pl-14\">\n            <img src=\"/logo.png\" alt=\"\" width=\"150\" />\n        </div>\n        <div className=\"search col-span-2 hidden md:block\">\n            <div className=\"w-full h-12 shadow backdrop-blur bg-gray-50 rounded-lg flex items-center pl-3 gap-3\">\n                <BsSearch />\n                <input type=\"text\" placeholder={'Search'} className=\"flex-grow bg-transparent outline-none\" />\n            </div>\n        </div>\n        <div className=\"actions hidden md:flex items-center justify-evenly md:col-span-2\">\n            {storage ? <Visitcard name={selectedAccount !== storage.accountAddress ? 'MultiSig' : \"Wallet\"} address={selectedAccount} /> : <ClipLoader />}\n            <NavbarDropdown />\n            <div className=\"relative\">\n                <NotificationCointainer />\n            </div>\n        </div>\n    </div>\n}\n\n\n\nconst Li = ({ children, link }: { children: any, link: string }) => <li className=\"text-left border px-3 py-2 bg-white hover:text-primary hover:border-b-primary cursor-pointer first:rounded-t-xl last:rounded-b-xl\"><Link to={link} className='flex gap-2'>{children}</Link></li>\n\nexport const NavbarDropdown = () => {\n    const [isOpen, setOpen] = useState(false)\n    const divRef = useModalSideExit(isOpen, setOpen)\n\n\n    return <div className=\"relative\">\n        <Button onClick={() => setOpen(!isOpen)} className=\"bg-primary text-white px-6 py-3 rounded-xl flex items-center gap-x-2\">\n            <>\n                Move Crypto\n                <div>\n                    <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n                </div>\n            </>\n        </Button>\n        {isOpen && <div ref={divRef} className=\"absolute w-[150%] rounded-2xl sm:-left-1/4  -bottom-1 translate-y-full shadow-xl z-50\">\n            <ul>\n                <Li link={'/pay'}><PaySVG /> Pay Someone</Li>\n                <Li link=\"/masspayout\"><MassPayoutSVG />Mass Payout</Li>\n                <Li link=''><RequestMoneySVG /> Request Money</Li>\n                <Li link=''><FundSVG /> Add Funds</Li>\n            </ul>\n        </div>\n        }\n    </div>\n}\n\nconst PaySVG = () => <img src='/icons/senticon.svg' alt=\"\" />\n\nconst MassPayoutSVG = () => <img src='/icons/masspayouticon.svg' alt=\"\" />\n\nconst RequestMoneySVG = () => <img src='/icons/moneyrequesticon.svg' alt=\"\" />\n\nconst FundSVG = () => <img src='/icons/addfundds.svg' alt=\"\" />\n\nexport default Navbar;","import { useState, useEffect } from 'react'\nimport Copied from './copied';\n\nconst PhraseBar = ({ address, mnemonic = false, scanIcon = true }: { address: string, mnemonic?: boolean, scanIcon?: boolean }) => {\n    const [data, setData] = useState('');\n    const [see, setSee] = useState(false);\n    const [tooltip, setTooltip] = useState(false);\n    const [divRef, setDivRef] = useState<HTMLDivElement | null>(null)\n\n    useEffect(() => {\n        if (mnemonic && !see) {\n            const value = address.split(\" \").reduce((a, c) => {\n                return a += ` ${c.replace(/[A-Z]/gi, \"*\")}`\n            })\n            return setData(value)\n        } else if (mnemonic) return setData(address);\n\n        let value = address.startsWith(\"0x\") ? address.slice(2) : address.replace(' ', '');\n        value = value.split('').reduce((a, c, i) => {\n            if (i > 0 && i % 4 === 0) a += ' ';\n            return a + c;\n        }, '')\n        return setData(value)\n    }, [see])\n\n    return <div>\n        <div className=\"bg-greylish bg-opacity-10 py-5 pl-2 pr-12 rounded-lg break-words relative\" style={!mnemonic ? { inlineSize: `${window.outerWidth > 640 ? \"300px\" : \"240px\"}` } : { inlineSize: `${window.outerWidth > 640 ? \"420px\" : \"240px\"}` }}>\n            <div className=\"font-light\">{mnemonic ? data : data.toUpperCase()}</div>\n            <div className=\"absolute -right-5 top-1/2 -translate-y-1/2 flex flex-col gap-3\">\n                {mnemonic ?\n                    <div className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => setSee(!see)}>\n                        <img src={'/icons/see.svg'} width=\"15\" height={15} alt=\"see\" />\n                    </div>\n                    :\n                    scanIcon ? <div className=\"bg-primary p-2 rounded-xl cursor-pointer\">\n                        <img src={'/icons/scanning.svg'} alt=\"scanning\" />\n                    </div> : null}\n\n                <div ref={setDivRef} className=\"bg-primary p-2 rounded-xl cursor-pointer\" onClick={() => {\n                    navigator.clipboard.writeText(address.trim())\n                    setTooltip(true)\n                    setTimeout(() => {\n                        setTooltip(false)\n                    }, 300)\n                }}>\n                    <img src={'/icons/copy.svg'} alt=\"copy\" />\n                </div>\n                <Copied tooltip={tooltip} triggerRef={divRef} />\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default PhraseBar;","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface IUnlock {\n    unlock: boolean;\n}\n\nconst initialState: IUnlock = {\n    unlock: false\n}\n\n\nexport const unlockSlide = createSlice({\n    name: \"unlock\",\n    initialState: initialState,\n    reducers: {\n        setUnlock: (state, action) => {\n            state.unlock =  action.payload;\n        }\n    }\n})\n\nexport const { setUnlock } = unlockSlide.actions\n\nexport const selectUnlock = (state: RootState) => state.unlock.unlock\n\nexport default unlockSlide.reducer","import { useNavigate } from 'react-router-dom'\nimport PhraseBar from '../phraseBar'\nimport { PassDataFromSetToPhrase } from '../../types/create'\nimport { useDispatch } from 'react-redux'\nimport { setStorage } from '../../redux/reducers/storage'\nimport { setUnlock } from '../../redux/reducers/unlock'\nimport { changeAccount } from '../../redux/reducers/selectedAccount'\nimport Button from '../button'\n\n// KeyPhrase Component\nconst KeyPhrase = ({ data }: { data: PassDataFromSetToPhrase }) => {\n    const router = useNavigate();\n    const dispatch = useDispatch()\n    return <section className=\"w-full pt-[100px] sm:pt-0 sm:h-screen flex flex-col items-center justify-center\">\n        <div className=\"text-primary text-3xl tracking-wide text-center\">\n            Your New Remox Account\n        </div>\n        <div className=\"flex flex-col\">\n            <div className='grid sm:grid-cols-2 py-14 border-b'>\n                <div>\n                    <h2 className=\"text-center sm:text-left\">Public Address</h2>\n                    <span className=\"text-greylish text-center sm:text-left pb-3\">It’s like your username on Remox.<br />You can share this with friends.</span>\n                </div>\n                <div>\n                    <PhraseBar address={data?.accountAddress} />\n                </div>\n            </div>\n            <div className='grid sm:grid-cols-2 py-14'>\n                <div>\n                    <h2 className=\"text-center sm:text-left\"> Address</h2>\n                    <span className=\"text-greylish text-left pb-3\">It’s like your main password on Remox.<br />Do <strong>Not</strong> Share it with someone.</span>\n                </div>\n                <div>\n                    <PhraseBar mnemonic={true} address={data?.mnemonic} />\n                </div>\n            </div>\n        </div>\n        <div className=\"flex sm:flex-row flex-col-reverse pb-3 justify-center items-center gap-10 pt-8\">\n            <Button version=\"second\" className=\"w-[150px] h-[50px]\" onClick={() => router(-1)}>Back</Button>\n            <Button className=\"w-[150px] h-[50px]\" onClick={() => { dispatch(setUnlock(true)); dispatch(changeAccount(data!.accountAddress)); dispatch(setStorage(JSON.stringify(data.localSave))); router(\"/dashboard\") }}>Continue</Button>\n        </div>\n    </section>\n}\n\nexport default KeyPhrase;","import { MdDone } from 'react-icons/md'\nimport { VscError } from 'react-icons/vsc'\nimport { Dispatch, useEffect, useState } from 'react'\n\n// Input in SET\nconst Input = ({ title, name, type = \"text\", validation, limit = 0, required = false, className = \"\"}: { title: string, name: string, type?: string, validation?: Dispatch<boolean>, limit?: number, required?: boolean, className?: string}) => {\n    const [password, setPassword] = useState<string>();\n    const [repeatPassword, setRepeatPassword] = useState<string>();\n\n    useEffect(() => {\n        if (validation) {\n            if (repeatPassword && password && repeatPassword === password) {\n                validation(true);\n            } else {\n                validation(false);\n            }\n        }\n    }, [repeatPassword, password])\n    return <>\n        <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{title}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={name} autoComplete='new-password' minLength={limit} className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setPassword(e.target.value);\n                }} required={required} />\n            </div>\n        </div>\n        {type === \"password\" ? <div className=\"flex flex-col\">\n            <div className=\"text-left text-greylish\">{'Repeat Password'}</div>\n            <div className={`${className} flex items-center gap-3 w-[200px]`}>\n                <input type={type} name={'repeatPassword'} autoComplete='new-password' className=\"bg-greylish bg-opacity-10 h-[40px] rounded-lg px-2\" onChange={(e) => {\n                    setRepeatPassword(e.target.value);\n                }} required />\n                {repeatPassword && password && <div>\n                    {repeatPassword === password ? <MdDone className=\"text-green-600\" /> : <VscError className=\"text-red-600\" />}\n                </div>}\n            </div>\n        </div> : null}\n    </>\n}\n\nexport default Input;","import { useMemo, Dispatch } from 'react';\nimport Input from '../input'\nimport { useNavigate } from 'react-router-dom'\nimport { generate } from 'shortid'\nimport { AccountCreate } from '../../types/sdk';\nimport { SyntheticEvent } from 'react';\nimport { PassDataFromSetToPhrase } from '../../types/create'\nimport { useAccountCreateMutation } from '../../redux/api/account';\nimport { ClipLoader } from 'react-spinners';\nimport Button from '../button';\n\n// SET Component\nconst Set = ({ setData }: { setData: Dispatch<PassDataFromSetToPhrase> }) => {\n\n    const [createAccount, { isLoading }] = useAccountCreateMutation()\n\n\n    const router = useNavigate()\n\n    const list = useMemo<Array<{ title: string, type?: string, name: string }>>(() => [\n        { title: \"First Name\", name: \"userName\" }, { title: \"Last Name\", name: \"surname\" },\n        { title: \"Organization Name\", name: \"companyName\" }, { title: \"Password\", name: \"password\", type: \"password\", limit: 6 },\n    ], [])\n\n    const create = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLFormElement\n\n        if (target[\"password\"].value !== target[\"repeatPassword\"].value) return\n\n        const inputData: AccountCreate = {\n            userName: target[\"userName\"].value,\n            surname: target[\"surname\"].value,\n            companyName: target[\"companyName\"].value,\n            password: target[\"password\"].value,\n        }\n\n        try {\n            const data = await createAccount(inputData).unwrap()\n\n            const obj = {\n                accountAddress: data.accountAddress,\n                encryptedPhrase: data.encryptedPhrase,\n                token: data.token,\n                userName: inputData.userName,\n                surname: inputData.surname,\n                companyName: inputData.companyName,\n            };\n\n            // dispatch(setStorage(JSON.stringify(obj)))\n\n            const pass: PassDataFromSetToPhrase = {\n                accountAddress: data.accountAddress,\n                mnemonic: data.mnemonic,\n                localSave: obj,\n            }\n\n            setData(pass)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return <>{!isLoading ? <form onSubmit={create} className=\"py-[100px] sm:py-0 sm:h-full\">\n        <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\n            <div className=\"flex flex-col gap-4\">\n                <div className=\"text-xl sm:text-3xl text-primary text-center\">Set Account Details</div>\n                <div className=\"text-greylish tracking-wide font-light text-lg text-center\">This password encrypts your accounts on this device.</div>\n            </div>\n            <div className=\"grid sm:grid-cols-3 gap-x-24 gap-y-8 px-3\">\n                {list.map(w => <Input key={generate()} {...w} />)}\n            </div>\n            <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\n                <Button version=\"second\" className=\"w-[150px] h-[50px]\" onClick={() => router('/')}>Back</Button>\n                <Button className=\"w-[150px] h-[50px] px-2\">Set Account</Button>\n            </div>\n        </section>\n    </form> : <div className=\" h-screen flex items-center justify-center\"><ClipLoader /></div>}</>\n}\n\n\nexport default Set;","import { useNavigate, NavLink } from 'react-router-dom'\nimport { BiLogOut } from 'react-icons/bi'\nimport { useDispatch } from 'react-redux'\nimport { removeStorage } from '../../redux/reducers/storage'\nimport { setMenu } from '../../redux/reducers/toggles'\nimport { removeTransactions } from '../../redux/reducers/transactions'\n\nconst Li = ({ children, onClick, className }: { children?: Array<any>, onClick?: () => void, className?: string }) => <li onClick={onClick} className={`py-2 mb-4 pl-4 text-left font-light text-lg cursor-pointer ${className}`}>\n    <div className=\"flex gap-3\">{children}</div>\n</li>\n\nconst Sidebarlist = () => {\n    const dispatch = useDispatch()\n    const navigator = useNavigate()\n    return <>\n        <ul>\n            <NavLink to=\"/dashboard\" end={true} className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li className=\"bg-greylish bg-opacity-10\"><DashboardSVG active={isActive} />Dashboard</Li>}</NavLink>\n            <NavLink to=\"/dashboard/payroll\" className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li><PayrollSVG active={isActive} />Payroll</Li>}</NavLink>\n            <NavLink to=\"/dashboard/transactions\" className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li><TransactionsSVG active={isActive} />Transactions</Li>}</NavLink>\n            <NavLink to=\"/dashboard/swap\" className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li><SwapSVG active={isActive} />Swap</Li>}</NavLink>\n            <NavLink to=\"/dashboard/assets\" className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li><AssetsSVG active={isActive} />Assets</Li>}</NavLink>\n            <NavLink to=\"/dashboard/teams\" className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li><TeamsSVG active={isActive} />Contributors</Li>}</NavLink>\n            <NavLink to=\"/dashboard/settings\" className={({ isActive }) => isActive ? 'text-primary' : ''}>{({ isActive }) => <Li><SettingSVG active={isActive} />Settings</Li>}</NavLink>\n            <Li onClick={() => {\n                dispatch(setMenu(false))\n                dispatch(removeTransactions())\n                dispatch(removeStorage())\n                navigator('/')\n            }}><LogoutSVG />Log Out</Li>\n        </ul>\n    </>\n}\n\nconst DashboardSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? '/icons/sidebar/dashboard_active.png' : '/icons/sidebar/dashboard.png'} alt='Dashboard' />\n\nconst PayrollSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? '/icons/sidebar/payroll_active.png' : '/icons/sidebar/payroll.png'} alt=\"Payroll\" />\n\nconst TransactionsSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? \"/icons/sidebar/transaction_active.png\" : '/icons/sidebar/transaction.png'} alt=\"Transaction\" />\n\nconst SwapSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? '/icons/sidebar/swap_active.png' : '/icons/sidebar/swap.png'} alt=\"Swap\" />\n\nconst AssetsSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? '/icons/sidebar/managment_active.png' : '/icons/sidebar/managment.png'} alt=\"Asset\" />\n\nconst TeamsSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? '/icons/sidebar/team_active.png' : '/icons/sidebar/team.png'} alt=\"Teams\" />\n\nconst SettingSVG = ({ active = false }) => <img className=\"w-[28px] h-[28px]\" src={active ? '/icons/sidebar/settings_active.png' : '/icons/sidebar/settings.png'} alt=\"\" />\n\nconst LogoutSVG = ({ active = false }) => <BiLogOut className=\"w-[28px] h-[28px]\" />\n\nexport default Sidebarlist;\n\n","\n\nconst CoinItem = ({ title, coin, usd, percent, rate, img }: { title: string, coin: string, usd: string, percent: string, rate?: number, img: string }) => {\n\n    return <div className=\"py-2 pl-2 gap-2 pr-5 flex bg-greylish bg-opacity-5 rounded-xl h-[60px]\">\n        <div className=\"w-[25px] flex items-center justify-center\">\n            <img width=\"25\" height=\"25\" src={img} alt=\"\" className=\"rounded-xl\" />\n        </div>\n        <div className=\"flex-grow grid grid-cols-2 gap\">\n            <div className=\"flex flex-col justify-between items-start\">\n                <div className=\"font-semibold text-black text-sm\">{title}</div>\n                <div className=\"text-greylish text-sm font-normal\">{`${coin}`}</div> \n                {/* <div className=\"text-greylish opacity-70 text-xs font-light\">{percent}%</div> */}\n            </div>\n            <div className=\"flex flex-col justify-center items-end\">\n                <div className=\"font-semibold text-black text-base\">${usd}</div>\n                {/* <div className=\"text-greylish opacity-70 text-xs font-light\">{`${title} ${coin}`}</div> */}\n            </div>\n            {/* <div className=\"flex flex-col justify-between items-end\">\n                <div className=\"font-semibold text-gray-500 text-sm\">{rate?.toFixed(2)}%</div>\n                <div className=\"text-greylish opacity-70 text-xs font-light\">24h</div>\n            </div> */}\n        </div>\n    </div>\n}\n\nexport default CoinItem;","import { useEffect, useMemo, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { IBalanceItem, ICurrencyInternal, SelectBalances, SelectCurrencies } from '../../../redux/reducers/currencies';\nimport { AltCoins, Coins, TransactionFeeTokenName } from '../../../types/coins';\nimport { generate } from 'shortid';\nimport Web3 from 'web3'\nimport { useAppSelector } from '../../../redux/hooks';\nimport { selectStorage } from \"../../../redux/reducers/storage\";\nimport { SelectTransactions } from \"../../../redux/reducers/transactions\";\nimport CoinItem from '../../../components/dashboard/main/coinitem';\nimport { SelectSelectedAccount } from \"../../../redux/reducers/selectedAccount\";\n\ninterface Balance {\n    amount: number,\n    per_24?: number,\n    percent: number,\n    coins: AltCoins,\n    tokenPrice: number | undefined\n}\n\nconst Statistic = () => {\n    const storage = useAppSelector(selectStorage)\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n    const transactions = useAppSelector(SelectTransactions)\n\n    const [percent, setPercent] = useState<number>()\n    const [balance, setBalance] = useState<string>()\n\n\n    const [lastIn, setIn] = useState<number>()\n    const [lastOut, setOut] = useState<number>();\n\n    const [allInOne, setAllInOne] = useState<Balance[]>()\n\n\n    const currencies = useAppSelector(SelectCurrencies)\n    const celo = (useAppSelector(SelectCurrencies)).CELO\n    const cusd = (useAppSelector(SelectCurrencies)).cUSD\n    const ceur = (useAppSelector(SelectCurrencies)).cEUR\n    const ube = (useAppSelector(SelectCurrencies)).UBE\n    const moo = (useAppSelector(SelectCurrencies)).MOO\n    const mobi = (useAppSelector(SelectCurrencies)).MOBI\n    const poof = (useAppSelector(SelectCurrencies)).POOF\n    const creal = (useAppSelector(SelectCurrencies)).cREAL\n\n    const balanceRedux = useAppSelector(SelectBalances)\n    const celoBalance = (useAppSelector(SelectBalances)).CELO\n    const cusdBalance = (useAppSelector(SelectBalances)).cUSD\n    const ceurBalance = (useAppSelector(SelectBalances)).cEUR\n    const ubeBalance = (useAppSelector(SelectBalances)).UBE\n    const mooBalance = (useAppSelector(SelectBalances)).MOO\n    const mobiBalance = (useAppSelector(SelectBalances)).MOBI\n    const poofBalance = (useAppSelector(SelectBalances)).POOF\n    const crealBalance = (useAppSelector(SelectBalances)).cREAL\n\n\n\n    const all = useMemo(() => {\n        if (celoBalance !== undefined && crealBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            return {\n                celo: celoBalance,\n                cUSD: cusdBalance,\n                cEUR: ceurBalance,\n                UBE: ubeBalance,\n                MOO: mooBalance,\n                MOBI: mobiBalance,\n                POOF: poofBalance,\n                cREAL: crealBalance\n            }\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n    const chart = useMemo(() => {\n        if (celoBalance !== undefined && crealBalance !== undefined && cusdBalance !== undefined && ceurBalance !== undefined && ubeBalance !== undefined && mooBalance !== undefined && mobiBalance !== undefined && poofBalance !== undefined) {\n            const celoDeg = Math.ceil(celoBalance.percent * 3.6) \n            const cusdDeg = Math.ceil(cusdBalance.percent * 3.6) + celoDeg;\n            const ceurDeg = Math.ceil(ceurBalance.percent * 3.6) + cusdDeg;\n            const ubeDeg = Math.ceil(ubeBalance.percent * 3.6) + ceurDeg;\n            const mooDeg = Math.ceil(mooBalance.percent * 3.6) + ubeDeg;\n            const mobiDeg = Math.ceil(mooBalance.percent * 3.6) + mooDeg;\n            const poofDeg = Math.ceil(poofBalance.percent * 3.6) + mobiDeg;\n            const crealDeg = Math.ceil(crealBalance.percent * 3.6) + poofDeg;\n\n            if (!celoDeg && !cusdDeg && !ceurDeg && !ubeDeg && !mooDeg && !mobiDeg && !poofDeg && !crealDeg) return `conic-gradient(#FF774E 0deg 360deg)`\n\n            return `conic-gradient(#fbce5c 0deg ${celoDeg}deg, #46cd85 ${celoDeg}deg ${cusdDeg}deg, #040404 ${cusdDeg}deg ${ceurDeg}deg, #6D619A ${ceurDeg}deg ${ubeDeg}deg, #3288ec ${ubeDeg}deg ${mooDeg}deg, #e984a0 ${mooDeg}deg ${mobiDeg}deg, #7D72FC ${mobiDeg}deg ${poofDeg}deg, #e904a3 ${poofDeg}deg ${crealDeg}deg)`\n        }\n        return `conic-gradient(#FF774E 0deg 360deg)`\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance, celo, cusd, ceur, ube, moo, mobi, poof, creal])\n\n\n\n\n    useEffect(() => {\n        if (celoBalance && cusdBalance && ceurBalance && ubeBalance && mooBalance && mobiBalance && poofBalance && crealBalance) {\n\n            //const total = celoBalance.amount + cusdBalance.amount + ceurBalance.amount + ubeBalance.amount + mooBalance.amount + poofBalance.amount + mobiBalance.amount;\n            const currencObj = Object.values(currencies)\n            const currencObj2: IBalanceItem[] = Object.values(balanceRedux)\n\n            let indexable = 0;\n            const per = currencObj.reduce((a, c: ICurrencyInternal, index) => {\n                if (currencObj2[index].amount > 0) {\n                    a += c.percent_24\n                    indexable++\n                }\n                return a;\n            }, 0)\n\n            const result: number =\n                (celoBalance.amount * celoBalance.tokenPrice) + (cusdBalance.amount * cusdBalance.tokenPrice) +\n                (ceurBalance.amount * ceurBalance.tokenPrice) + (ubeBalance.amount * ubeBalance.tokenPrice) +\n                (mooBalance.amount * mooBalance.tokenPrice) + (mobiBalance.amount * mobiBalance.tokenPrice) +\n                (poofBalance.amount * poofBalance.tokenPrice) + (crealBalance.amount * crealBalance.tokenPrice)\n\n            setBalance(result.toFixed(2))\n            setPercent(per / indexable)\n\n        }else if(celoBalance === undefined){\n            setBalance(undefined)\n        }\n    }, [celoBalance, cusdBalance, ceurBalance, ubeBalance, mooBalance, mobiBalance, poofBalance])\n\n\n\n    useEffect(() => {\n        if (all) {\n            setAllInOne(Object.values(all).sort((a, b) => (b.amount * b.tokenPrice).toLocaleString().localeCompare((a.amount * a.tokenPrice).toLocaleString())).slice(0, 4))\n        }\n    }, [all])\n\n    useEffect(() => {\n        if (transactions) {\n            let myin = 0;\n            let myout = 0;\n            transactions.result.forEach(t => {\n                let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === t.tokenSymbol)?.[1]\n                const coin = feeToken ? Coins[feeToken] : Coins.cUSD;\n                const tTime = new Date(parseInt(t.timeStamp) * 1e3)\n                if (tTime.getMonth() === new Date().getMonth()) {\n                    const calc = (parseFloat(Web3.utils.fromWei(t.value, 'ether')) * (feeToken ? (currencies[coin.name]?.price ?? 0) : 0))\n                    if (t.from.toLowerCase() === selectedAccount.toLowerCase()) {\n                        myout += calc\n                    } else {\n                        myin += calc\n                    }\n                }\n            })\n            setIn(myin)\n            setOut(myout)\n        }\n    }, [transactions])\n\n    return <>\n        <div className=\"col-span-2 flex flex-col\">\n            <div className=\"flex justify-between pl-4 h-[30px]\">\n                <div className=\"text-base text-greylish\">Total Balance</div>\n                <div className=\"text-base text-greylish opacity-70\">24h</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-8\">\n                <div className=\"text-4xl\">\n                    {balance || (balance !== undefined && parseFloat(balance) === 0) ? `$${balance}` : <ClipLoader />}\n                </div>\n                <div className=\"flex items-center text-3xl text-greylish opacity-70\" style={\n                    balance !== undefined && parseFloat(balance) !== 0 ? percent && percent > 0 ? { color: 'green' } : { color: 'red' } : { color: 'black' }\n                }>\n                    {balance !== undefined && parseFloat(balance) !== 0 ? percent ? `${percent.toFixed(2)}%` : <ClipLoader /> : '0%'}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money in (c.m.)</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-xl sm:text-2xl opacity-80\">\n                    {lastIn !== undefined && transactions !== undefined && balance !== undefined ? `+ $${lastIn?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <div className=\"flex justify-between sm:pl-4\">\n                <div className=\"text-greylish text-sm sm:text-base\">Money out (c.m.)</div>\n            </div>\n            <div className=\"flex justify-between shadow-custom rounded-xl px-8 py-4\">\n                <div className=\"text-greylish opacity-80 text-xl sm:text-2xl\">\n                    {lastOut !== undefined && transactions !== undefined && balance !== undefined ? `- $${lastOut?.toFixed(2)}` : <ClipLoader />}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"sm:flex flex-col hidden\">\n            <div>Asset</div>\n            <div>\n                {celoBalance !== undefined && cusdBalance !== undefined ? <div className=\"w-[200px] h-[200px] rounded-full relative\" style={{\n                    background: chart\n                }}>\n                    <div className=\"w-[120px] h-[120px] bg-white left-1/2 top-1/2 absolute -translate-x-1/2 -translate-y-1/2 rounded-full\"></div>\n                </div> : null}\n            </div>\n        </div>\n        {\n            balance && allInOne !== undefined ?\n                <div className=\"flex flex-col gap-5 overflow-hidden col-span-2 sm:col-span-1\">\n                    {allInOne.map((item, index) => {\n                        return <CoinItem key={generate()} title={item.coins.name} coin={item.amount.toFixed(2)} usd={((item.tokenPrice ?? 0) * item.amount).toFixed(2)} percent={(item.percent || 0).toFixed(1)} rate={item.per_24} img={item.coins.coinUrl} />\n                    })}\n                </div> : <ClipLoader />\n        }</>\n\n}\n\n\nexport default Statistic;","import { useEffect, useRef, useState } from \"react\";\nimport { IoIosSwap } from \"react-icons/io\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport { AltCoins, AltcoinsList, Coins } from \"../types/coins\";\nimport { TransactionType, TransactionStatus, TransactionDirection } from \"../types/dashboard/transaction\"\nimport { AddressReducer } from \"../utility\";\n\nconst TransactionItem = ({ type, direction, date, amountUSD, status, amountCoin, coinName, blockNumber, address, coin, swap }: { blockNumber: string, type?: TransactionType, direction?: TransactionDirection, date?: string, amountUSD?: string, amountCoin: string[], status: TransactionStatus, address?: string, coin: AltCoins[], coinName: string[], swap?: { outputCoin: AltCoins, outputCoinName: string, outputAmount: string, inputCoin: AltCoins, inputCoinName: string, inputAmount: string } }) => {\n\n    const [detect, setDetect] = useState(true);\n    const divRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (divRef.current && window.outerWidth / divRef.current.clientWidth > 3) {\n            setDetect(false)\n        }\n    }, [])\n\n    const isSwap = direction !== TransactionDirection.Swap;\n\n    return <div ref={divRef} className={`grid ${detect ? 'grid-cols-[25%,45%,30%] sm:grid-cols-[25%,35%,20%,20%] pl-5' : 'grid-cols-[35%,40%,25%]'} min-h-[75px] py-4 `}>\n        <div className=\"flex space-x-3\">\n            <div className={`hidden sm:flex ${detect ? \"items-center\" : \"items-start\"} pt-3 justify-center`}>\n                <div className={`bg-greylish bg-opacity-10 ${detect ? \"w-[45px] h-[45px] text-lg\" : \"w-[25px] h-[25px] text-xs\"} flex items-center justify-center rounded-full font-bold `}>\n                    {isSwap ? <span> Un </span> : <span> S </span>}\n                </div>\n            </div>\n            <div className={`sm:flex flex-col ${detect ? \"justify-center\" : \"justify-start\"} items-start `}>\n                <div className=\"text-greylish\">\n                    {isSwap ? <span> Unknown </span> : <span> Swap </span>}\n                </div>\n                {address && isSwap && <div className=\"text-sm text-greylish\">\n                    {AddressReducer(address)}\n                </div>}\n            </div>\n        </div>\n        <div className=\"text-base\">\n            <div>\n                {isSwap && amountCoin.map((s, i) => <div key={generate()} className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                    <div className={`flex ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                        <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                        </div>\n                        <span>\n                            {s}\n                        </span>\n                    </div>\n                    <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-2 items-center`}>\n                        <div>\n                            <img src={coin[i].coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                        </div>\n                        <div>\n                            {coinName[i]}\n                        </div>\n                    </div>\n                </div>\n                )}\n                {direction === TransactionDirection.Swap && swap && <div className=\"flex flex-col\">\n                    <div className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                        <div className={`flex ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                            <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                            </div>\n                            <span>\n                                {swap.inputAmount}\n                            </span>\n                        </div>\n                        <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-1 items-center`}>\n                            <div>\n                                <img src={swap.inputCoin.coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                            </div>\n                            <div>\n                                {swap.inputCoinName}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mx-7\">\n                        <div className=\"py-1 rounded-lg -translate-x-[4px]\">\n                            <img src=\"/icons/arrowdown.svg\" alt=\"\" className=\"w-[18px] h-[18px]\" />\n                        </div>\n                    </div>\n                    <div className={`flex ${detect ? \"grid-cols-[20%,80%]\" : \"grid-cols-[45%,55%]\"} items-center mx-7 space-x-4`}>\n                        <div className={`grid ${detect ? \"grid-cols-[15%,85%]\" : \"grid-cols-[25%,75%]\"} gap-x-2 items-center`}>\n                            <div className=\"w-[10px] h-[10px] rounded-full bg-primary self-center\">\n                            </div>\n                            <span>\n                                {swap.outputAmount}\n                            </span>\n                        </div>\n                        <div className={`flex ${detect ? \"grid-cols-[10%,90%]\" : \"grid-cols-[30%,70%]\"} gap-x-1 items-center`}>\n                            <div>\n                                <img src={swap.outputCoin.coinUrl} className=\"rounded-full w-[18px] h-[18x]\" />\n                            </div>\n                            <div>\n                                {swap.outputCoinName}\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        </div>\n        {detect && <div></div>}\n        <div className=\"flex justify-end cursor-pointer items-start md:pr-0 \">\n            <Link to={`/dashboard/transactions/${blockNumber}/${address}`}><div className={`text-primary  ${detect ? \"px-6 max-h-[80px] border-2 border-primary hover:bg-primary hover:text-white\" : \"text-sm\"} rounded-xl py-2`}>View Details</div></Link>\n        </div>\n    </div>\n}\n\nexport default TransactionItem;","import { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { TransactionDirection, TransactionStatus } from \"../../types\";\n\nconst variants = {\n    close: {\n        height: 0\n    }, \n    open: {\n        height: \"auto\"\n    }\n}\n\nconst Accordion = ({ children, date, dataCount, status, direction, grid = \"grid-cols-[37%,33%,30%]\", method }: { method?: string, children: JSX.Element, date?: string, dataCount: number, status: TransactionStatus, direction?: TransactionDirection, grid?: string }) => {\n\n    const [isOpen, setOpen] = useState(false)\n\n    const click = () => {\n        setOpen(!isOpen)\n    }\n\n    return <div>\n        <div className=\"flex space-x-1 items-center bg-greylish bg-opacity-10 rounded-xl px-3 my-3\">\n            <div className=\"cursor-pointer\" onClick={click}>\n                <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n            </div>\n            <div className={`py-3 grid  px-2 ${grid} items-center w-full`}>\n                <div>\n                    {dataCount === 1 ? \"1 Payment\" : `${dataCount} Payments`}\n                </div>\n                <div className=\"text-sm text-greylish\">\n                    {method}\n                    {direction !== undefined && <>{TransactionDirection.Swap === direction ? \"Swapped\" : \"\"} {TransactionDirection.In === direction ? \"Received\" : \"\"} {TransactionDirection.Out === direction ? \"Executed\" : \"\"} on {date}</>}\n                </div>\n                <div className={`flex ${grid !== \"grid-cols-[37%,33%,30%]\" ? \"justify-start\" : \"justify-end\"} gap-x-2 items-center`}>\n                    {status === TransactionStatus.Completed && <div className=\"bg-green-400 w-2 h-2 rounded-full\"></div>}\n                    {status === TransactionStatus.Pending && <div className=\"bg-primary w-2 h-2 rounded-full\"></div>}\n                    {status}\n                </div>\n                <div></div>\n            </div>\n        </div>\n        <motion.div className=\"overflow-hidden\" variants={variants} initial={\"close\"} animate={isOpen ? \"open\" : \"close\"}>\n            {children}\n        </motion.div>\n    </div>\n}\n\nexport default Accordion;","import TransactionItem from \"../../transactionItem\";\nimport { Link } from \"react-router-dom\";\nimport { generate } from \"shortid\";\nimport _ from \"lodash\";\nimport { TransactionHook, TransactionHookByDate, TransactionHookByDateInOut } from '../../../hooks/useTransactionProcess'\nimport { Fragment, useEffect } from \"react\";\nimport Accordion from \"../accordion\";\nimport { TransactionDirection, TransactionStatus } from \"../../../types\";\nimport { Coins } from \"../../../types/coins\";\n\n\nconst TransactionHistory = ({ transactions }: { transactions: TransactionHook[] | TransactionHookByDateInOut }) => {\n\n    let index = 0;\n\n    return <div className=\"flex flex-col shadow-custom max-h-full px-5 pt-5 pb-4 rounded-xl\">\n        <div className=\"flex justify-between\">\n            <div className=\"font-semibold text-lg text-black tracking-wide\">Recent Transactions</div>\n            <div><Link to=\"/dashboard/transactions\" className=\"text-primary border border-primary px-10 py-2 rounded-xl\">View All</Link></div>\n        </div>\n        <div className=\"grid grid-cols-1 pt-5\">\n            {transactions && !Array.isArray(transactions) && Object.entries(transactions).map(([block, transactionObj]) => {\n                const recievedTransactions = transactionObj.recieved;\n                const sentTransactions = transactionObj.sent;\n                const swaps = transactionObj.swaps;\n                return <Fragment key={block}>\n                    {index < 6 && recievedTransactions.length > 0 && ++index && <Accordion direction={TransactionDirection.In} date={transactionObj.date} dataCount={recievedTransactions.length} status={TransactionStatus.Completed}>\n                        <div>\n                            {recievedTransactions.map(({ amount, address, coinName, blockNumber, date, coin, hashs}) => {\n                                return <TransactionItem key={blockNumber+hashs.join(',')} blockNumber={blockNumber} address={address} amountCoin={amount} date={date} coinName={coinName} coin={coin}  status={TransactionStatus.Completed} />\n                            })}\n                        </div>\n                    </Accordion>}\n                    {index < 6 && sentTransactions.length > 0 && ++index && <Accordion direction={TransactionDirection.Out} date={transactionObj.date} dataCount={sentTransactions.length} status={TransactionStatus.Completed}>\n                        <div>\n                            {sentTransactions.map(({ amount, coinName, blockNumber, address, date, coin, hashs }) => {\n                                return <TransactionItem key={blockNumber+hashs.join(',')} blockNumber={blockNumber} address={address} date={date} amountCoin={amount} coinName={coinName} coin={coin} status={TransactionStatus.Completed} />\n                            })}\n                        </div>\n                    </Accordion>}\n                    {index < 6 && swaps.length > 0 && ++index && <Accordion direction={TransactionDirection.Swap} date={transactionObj.date} dataCount={swaps.length} status={TransactionStatus.Completed}>\n                        <div>\n                            {swaps.map(({ amount, coinName, blockNum, from, date, coin, hash, direction, swap  }) => {\n                                return <TransactionItem key={blockNum+hash} swap={swap} address={from} blockNumber={blockNum}  direction={direction} date={date} amountCoin={[amount.toFixed(2)]} coinName={[coinName]} coin={[coin]} status={TransactionStatus.Completed} />\n                            })}\n                        </div>\n                    </Accordion>}\n                </Fragment>\n            })}\n        </div>\n    </div>\n\n}\n\n\n\nexport default TransactionHistory;","import Input from \"../input\"\nimport { useNavigate } from 'react-router-dom'\nimport { useState } from 'react'\nimport { ClipLoader } from \"react-spinners\";\nimport { SyntheticEvent } from \"react\";\nimport { useCreatePasswordMutation } from \"../../redux/api/account\";\nimport { IStorage, setStorage } from \"../../redux/reducers/storage\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { setUnlock } from \"../../redux/reducers/unlock\";\nimport { changeAccount } from \"../../redux/reducers/selectedAccount\";\nimport Button from \"../button\";\n\nconst CreatePassword = ({ phrase }: { phrase: string }) => {\n    const [createPassword, { isLoading }] = useCreatePasswordMutation();\n\n    const dispatch = useAppDispatch()\n    const router = useNavigate();\n\n    const [isValid, setValid] = useState(false)\n\n\n    const Submitted = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLFormElement;\n        if (!isValid) return;\n\n        try {\n            const data = await createPassword({ phrase: phrase.trim(), password: target[\"password\"]?.value?.trim() }).unwrap()\n\n            const obj: IStorage = {\n                accountAddress: data!.accountAddress,\n                encryptedPhrase: data!.encryptedPhrase,\n                token: data!.token,\n            };\n\n            dispatch(changeAccount(data!.accountAddress));\n            dispatch(setUnlock(true))\n            dispatch(setStorage(JSON.stringify(obj)))\n\n            router('/dashboard')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    return <div className=\"h-screen\">\n        <form onSubmit={Submitted} className=\"h-full\">\n            <section className=\"flex flex-col items-center  h-full justify-center gap-10\">\n                <div className=\"flex flex-col gap-4\">\n                    <div className=\"text-center text-3xl text-primary\">Set Account Details</div>\n                    <div className=\"text-center text-greylish tracking-wide font-light text-lg\">This password encrypts your accounts on this device.</div>\n                </div>\n                <div className=\"grid sm:grid-cols-2 gap-x-24 gap-y-8\">\n                    <Input title=\"Password\" name=\"password\" type=\"password\" validation={setValid} className=\"w-[100%] sm:w-[200px]\" limit={6} required={true} />\n                </div>\n                <div className=\"flex sm:flex-row flex-col-reverse justify-center items-center gap-10 pt-8\">\n                    <Button version=\"second\" className=\"w-[150px] h-[50px] px-2\" onClick={() => router('/')}>Back</Button>\n                    <Button type=\"submit\" className=\"w-[150px] h-[50px] px-2\" isLoading={isLoading}>Set Password</Button>\n                </div>\n            </section>\n        </form>\n    </div>\n}\n\nexport default CreatePassword;","const Header = ()=> <header className=\"flex md:px-40 h-[75px] justify-center md:justify-start items-center absolute top-0 w-full\">\n    <div>\n        <img src=\"/logo.png\" alt=\"\" className=\"w-[150px]\" />\n    </div>\n</header>\n\n\nexport default Header;","import { useState } from 'react'\nimport { ClipLoader } from 'react-spinners';\nimport Header from '../../layouts/home/header';\nimport { useSignInMutation } from '../../redux/api/account';\nimport { IStorage, setStorage } from '../../redux/reducers/storage';\nimport { useDispatch } from 'react-redux';\nimport { setUnlock } from '../../redux/reducers/unlock';\nimport { changeAccount } from '../../redux/reducers/selectedAccount';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../button';\n\nconst Login = ({ phrase }: { phrase: string }) => {\n    const [signin, { isLoading }] = useSignInMutation()\n\n    const dispatch = useDispatch()\n\n    const [input, setInput] = useState<string>()\n    const [incorrrect, setIncorrect] = useState(false)\n\n    const router = useNavigate()\n\n    const Submitted = async () => {\n        if (input && phrase) {\n            setIncorrect(false)\n\n            try {\n                const data = await signin({ phrase: phrase.trim(), password: input.trim() }).unwrap()\n\n                const obj: IStorage = {\n                    accountAddress: data!.accountAddress,\n                    encryptedPhrase: data!.encryptedPhrase,\n                    token: data!.token,\n                };\n\n                dispatch(changeAccount(data!.accountAddress));\n                dispatch(setUnlock(true))\n                dispatch(setStorage(JSON.stringify(obj)))\n                router('/dashboard')\n\n            } catch (error) {\n                console.error(error);\n                setIncorrect(true);\n            }\n\n        }\n    }\n\n    return <>\n        <Header />\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary text-center\">Open Your Wallet</h2>\n            <div className=\"flex flex-col gap-4 items-center\">\n                <div className=\"text-center\">Enter your password to open your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submitted()\n                    }\n                }} onChange={(e) => setInput(e.target.value)} type=\"password\" autoComplete='new-password' className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <Button onClick={Submitted} className=\"px-5 py-2\" isLoading={isLoading}>Unlock</Button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\nexport default Login;","import { IoIosArrowDown } from 'react-icons/io'\nimport { Dispatch, forwardRef, useEffect, useRef, useState } from 'react'\nimport { generate } from 'shortid'\nimport { DropDownItem } from '../types/dropdown'\nimport { MouseEventHandler } from 'react'\nimport { CoinsURL } from '../types/coins'\nimport { ClipLoader } from 'react-spinners'\nimport { useModalSideExit } from '../hooks'\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n    close: {\n        height: 0,\n        transition: {\n            staggerChildren: 0,\n            duration: 0\n        }\n    }, \n    open: {\n        height: \"auto\",\n        transition: {\n            staggerChildren: 0.2,\n            type: 'tween'\n        }\n    }\n}\n\nconst Li = forwardRef<HTMLLIElement, { children: Array<any> | any, onClick: MouseEventHandler, className: string }>(({ children, onClick, className }, ref) => <li ref={ref} onClick={onClick} className={`${className} text-left border px-3 py-2 bg-white hover:bg-gray-200 cursor-pointer`}>{children}</li>)\n\nconst Viewer = ({ displayName, name, address, coinUrl, className, disableAddressDisplay }: { displayName?: string, name: string, address?: string, coinUrl?: CoinsURL, className?: string, disableAddressDisplay?: boolean }) => <div className=\"flex flex-col\">\n    <div className=\"flex flex-col\">\n        {displayName && <div className=\"items-center text-sm text-greylish opacity-80\">\n            {displayName}\n        </div>}\n        <div className=\"text-left flex space-x-2 items-center\">\n            {coinUrl && <div><img src={coinUrl} className={coinUrl ? `w-[20px] h-[20px]` : ''} alt=\"\" /></div>}\n            <div className={`${className ?? ''} font-normal truncate`} title={name}>{name}</div>\n        </div>\n    </div>\n    {!disableAddressDisplay && <div className={`text-left text-[10px] text-gray-500`}>{!address?.startsWith('0x') ? address : address.split('').reduce((a, c, i, arr) => {\n        return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n    }, '')}</div>}\n</div>\n\nconst Dropdown = ({ selected, list, nameActivation = false, onSelect, className, loader = false, disableAddressDisplay = false, parentClass = '', childClass = '', displayName, onChange }: { disableAddressDisplay?: boolean, parentClass?: string, className?: string, selected: DropDownItem, list: Array<DropDownItem>, nameActivation?: boolean, onSelect?: Dispatch<DropDownItem>, onChange?: Function, loader?: boolean, childClass?: string, displayName?: string }) => {\n    const [isOpen, setOpen] = useState(false)\n    const liRef = useRef<HTMLLIElement>()\n    const [liHeight, setLiHeight] = useState(0)\n    const customRef = useModalSideExit(isOpen, setOpen)\n\n    useEffect(() => {\n        if (liRef.current && liHeight === 0) {\n            setLiHeight(liRef.current.offsetHeight)\n        }\n    })\n\n    return (\n        <div className={`relative ${parentClass} `}>\n            <div onClick={() => list?.length > 0 ? setOpen(!isOpen) : null} className={`flex ${className || ''} ${loader ? 'justify-center' : 'justify-between'} items-center border rounded-xl ${isOpen && 'rounded-b-none'} py-2 px-3 cursor-pointer`}>\n                {!loader ? <div className=\"truncate\">\n                    {Viewer({ name: selected.name, address: selected?.address ?? selected?.amount, coinUrl: selected?.coinUrl, className: selected?.className, disableAddressDisplay: disableAddressDisplay, displayName })}\n                </div> : <ClipLoader />}\n                {list && list.length > 0 && <div>\n                    <IoIosArrowDown className='transition' style={isOpen ? { transform: \"rotate(180deg)\" } : undefined} />\n                </div>}\n            </div>\n            {<motion.div variants={variants} initial={\"close\"} animate={isOpen ? \"open\" : \"close\"} ref={customRef} className=\"absolute left-0 bottom-0 translate-y-full z-10 w-full overflow-hidden\">\n                <ul id=\"ala\" className=\"flex flex-col overflow-y-auto \" style={list.length > 5 ?\n                    { height: window.outerWidth > 768 ? `${liHeight * 5}px` : `${liHeight * 3}px` }\n                    :\n                    { height: 'auto' }\n                }>\n                    {list?.filter((w) => {\n                        if (!nameActivation) {\n                            return w?.address !== selected?.address\n                        } else if (w.name) {\n                            return w?.name !== selected?.name\n                        } else if (w.id) {\n                            return w?.id !== selected?.id\n                        }\n\n                    })?.map((w: DropDownItem, i) => {\n                        const obj: { ref?: any } = {}\n                        if (i === 0) {\n                            obj.ref = liRef\n                        }\n                        return <Li {...obj} key={w.name} className={childClass} onClick={() => {\n                            if (w.onClick) {\n                                w.onClick()\n                                setOpen(false)\n                                return\n                            }\n                            onSelect!(w);\n                            setOpen(false);\n                            onChange?.(w, selected);\n                        }}>\n                            {Viewer({ name: w?.name, address: w?.address ?? w?.amount, coinUrl: w?.coinUrl, className: w?.className, disableAddressDisplay })}\n                        </Li>\n                    }\n                    )}\n                </ul>\n            </motion.div>}\n        </div>\n    )\n}\n\nexport default Dropdown;","import { Dispatch, useEffect, useState } from \"react\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { ClipLoader } from \"react-spinners\";\nimport { generate } from \"shortid\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport Dropdown from \"../dropdown\";\n\n\nconst Input = ({ index, name, address, selectedWallet, setWallet, setIndex, overallIndex, amount, uniqueArr, setRefreshPage, isBasedOnDollar, setAmount, amountState }: { index: number, name: Array<string>, address: Array<string>, selectedWallet: DropDownItem[], setWallet: Dispatch<DropDownItem[]>, setIndex: Dispatch<number>, overallIndex: number, amount: Array<string>, uniqueArr: string[], setRefreshPage: Dispatch<string>, isBasedOnDollar: boolean, setAmount: Dispatch<number[]>, amountState: number[] }) => {\n\n    const [anotherToken, setAnotherToken] = useState(false)\n\n    useEffect(() => {\n        if (!selectedWallet[index] && !selectedWallet[index + 1]) {\n            const v = Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0];\n            setWallet([...selectedWallet, v, v])\n        }\n\n    }, [])\n\n    return <>\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Name\" defaultValue={name[index]} type=\"text\" name={`name__${index}`} onChange={(e) => { name[index] = e.target.value; name[index + 1] = e.target.value }} /> {/* onBlur={(e) => setRefreshPage(generate())}*/}\n        <input className=\"col-span-2 sm:col-span-1 border text-black px-3 py-1 rounded-md\" placeholder=\"Address\" defaultValue={address[index]} type=\"text\" name={`address__${index}`} onChange={(e) => { address[index] = e.target.value; address[index + 1] = e.target.value }} required /> {/* onBlur={(e) => setRefreshPage(generate())}*/}\n        <div className={`col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid ${isBasedOnDollar ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={amount[index]} type=\"number\" name={`amount__${index}`} onChange={(e) => {\n                amount[index] = e.target.value; \n                const arr = [...amountState]\n                arr[index] = Number(e.target.value)\n                setAmount(arr)\n            }} required step={'any'} min={0} />\n            {isBasedOnDollar && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n        </div>\n        <div className=\"flex items-center\">\n            {overallIndex > 1 && <BsFillTrashFill className=\"text-red-500 cursor-pointer\" onClick={() => {\n                name.splice(index, 2);\n                address.splice(index, 2);\n                amount.splice(index, 2);\n                uniqueArr.splice(index, 2);\n                setWallet([...selectedWallet.filter((s, t) => t !== index && t !== index + 1)]);\n                setIndex(overallIndex - 1)\n                //setRefreshPage(generate())\n            }} />}\n        </div>\n        <div></div>\n        <div></div>\n        {anotherToken ? <div className={`col-span-3 sm:col-span-1 border text-black py-1 rounded-md grid ${isBasedOnDollar ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={amount[index + 1]} type=\"number\" name={`amount__${index + 1}`} onChange={(e) => {\n                amount[index + 1] = e.target.value\n                const arr = [...amountState]\n                arr[index + 1] = Number(e.target.value)\n                setAmount(arr)\n\n            }} step={'any'} min={0} />\n            {isBasedOnDollar && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={val => {\n                const wallet = [...selectedWallet];\n                wallet[index + 1] = val;\n                setWallet(wallet)\n            }} nameActivation={true} selected={selectedWallet[index + 1] ?? Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))[0]} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n\n        </div>\n            :\n            <div className=\"text-primary text-sm cursor-pointer\" onClick={() => setAnotherToken(true)}>\n                + Add another token\n            </div>\n        }\n        <div></div>\n\n        <div></div>\n        <div></div>\n        <div></div>\n        <div className=\"mt-5\"></div>\n    </>\n}\nexport default Input;","import { Dispatch, MutableRefObject, useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member } from \"../../types/sdk\";\nimport Dropdown from \"../dropdown\";\nimport { CoinsName } from \"../../types\";\n\n\nconst TeamInput = (props: Member & { index: number, selectedId: string[], generalWallet: DropDownItem, setGeneralWallet: Dispatch<DropDownItem>, setSelectedId: Dispatch<string[]>, members: Array<Member & { selected: boolean }>, setMembers: Dispatch<Array<Member & { selected: boolean }>> }) => {\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: Coins[props.currency].name, type: Coins[props.currency].value, value: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl })\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>()\n\n    useEffect(() => {\n        if (props.secondaryCurrency) {\n            setSelectedWallet2({ name: Coins[props.secondaryCurrency].name, type: Coins[props.secondaryCurrency].value, value: Coins[props.secondaryCurrency].value, coinUrl: Coins[props.secondaryCurrency].coinUrl })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (selectedWallet && selectedWallet.value) {\n            updateValue({ val: '', wallet: true })\n        }\n    }, [selectedWallet])\n\n    useEffect(() => {\n        if (selectedWallet2 && selectedWallet2.value) {\n            updateValue({ val: '', wallet: true, is2: true })\n        }\n    }, [selectedWallet2])\n\n    const updateValue = ({ val, wallet = false, is2 = false, customWallet }: { val: string, wallet?: boolean, is2?: boolean, customWallet?: CoinsName }) => {\n        const arr = [...props.members]\n        const newArr = arr.reduce<Array<Member & { selected: boolean }>>((a, e) => {\n            if (e.id !== props.id) a.push(e)\n            else {\n                let newItem;\n                if (wallet && is2) {\n                    if (customWallet) {\n                        newItem = { ...e, secondaryCurrency: customWallet }\n                    } else {\n                        newItem = { ...e, secondaryCurrency: selectedWallet2!.value! }\n                    }\n                }\n                else if (!wallet && is2) {\n                    newItem = { ...e, secondaryAmount: val }\n                }\n                else if (wallet) {\n                    if (customWallet) {\n                        newItem = { ...e, currency: customWallet }\n                    } else {\n                        newItem = { ...e, currency: selectedWallet.value! }\n                    }\n                } else {\n                    newItem = { ...e, amount: val }\n                }\n                a.push(newItem)\n            }\n            return a;\n        }, [])\n        props.setMembers(newArr)\n    }\n\n    const updateTick = ({ tick }: { tick: boolean }) => {\n        if (!tick) {\n            props.setSelectedId(props.selectedId.filter(w => w !== props.id))\n        } else {\n            props.setSelectedId([...props.selectedId, props.id])\n        }\n    }\n\n    return <>\n        <div className=\"flex items-center\">\n            <input checked={props.selectedId.some(w => w === props.id)} className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" type=\"checkbox\" onChange={(e) => {\n                updateTick({ tick: e.target.checked })\n            }} />\n            <h2 className={`text-black px-3 py-1 name__${props.index} text-sm`}>{props.name}</h2>\n        </div>\n        <div className=\"flex items-center\">\n            <h2 className={`text-black py-1 rounded-md address__${props.index} text-sm truncate`}>{props.address}</h2>\n        </div>\n        {/* <div className=\"col-span-2 sm:col-span-1 flex border border-greylish rounded-md border-opacity-60\">\n            <input className=\"text-black py-1 outline-none ml-2 rounded-md w-full font-bold unvisibleArrow\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} min=\"0\" required step={'any'} onBlur={d => props.setSelectedId([...props.selectedId])} onChange={e => updateValue({ val: e.target.value })} />\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div> */}\n        <div className={`col-span-2 sm:col-span-1 border text-black py-1 rounded-md grid ${props.usdBase ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={props.amount} type=\"number\" name={`amount__${props.index}`} onChange={(e) => {\n                updateValue({ val: e.target.value })\n            }} required step={'any'} min={0} />\n            {props.usdBase && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div>\n        <div className=\"hidden sm:block\"></div>\n        <div></div>\n        <div></div>\n        {props.secondaryCurrency && selectedWallet2 ? <div className={`col-span-2 sm:col-span-1 border text-black py-1 rounded-md grid ${props.usdBase ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n            <input className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" defaultValue={props?.secondaryAmount} type=\"number\" name={`amount__${props.index}`} onChange={(e) => {\n                updateValue({ val: e.target.value, wallet: false, is2: true })\n            }}  step={'any'} min={0} />\n            {props.usdBase && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, coinUrl: w.coinUrl, value: w.value }))} />}\n        </div> : <div className=\"text-primary cursor-pointer text-sm\" onClick={() => {\n            setSelectedWallet2({ name: Coins[CoinsName.CELO].name, type: Coins[CoinsName.CELO].value, value: Coins[CoinsName.CELO].value, coinUrl: Coins[CoinsName.CELO].coinUrl })\n            updateValue({ val: '', wallet: true, is2: true, customWallet: CoinsName.CELO })\n        }}>+ Add another token</div>}\n        <div></div>\n    </>\n}\nexport default TeamInput;","import React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport { AltCoins, Coins, CoinsName, CoinsURL } from \"../../../types/coins\";\nimport { DropDownItem } from \"../../../types/dropdown\";\nimport Dropdown from \"../../dropdown\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\"\nimport { changeSuccess, changeError, selectError } from '../../../redux/reducers/notificationSlice'\nimport { useLazyGetTeamsQuery } from \"../../../redux/api/team\";\nimport { useAddMemberMutation } from \"../../../redux/api/teamMember\";\nimport Error from \"../../error\";\nimport { AddMember, Interval } from \"../../../types/sdk\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from \"../../button\";\n\nconst AddMemberModal = ({ onDisable }: { onDisable: React.Dispatch<boolean> }) => {\n\n    const isError = useAppSelector(selectError)\n\n    const [triggerTeams, { data, isLoading }] = useLazyGetTeamsQuery()\n    const [addMember, { isLoading: addMemberLoading }] = useAddMemberMutation();\n\n    const [secondActive, setSecondActive] = useState(false)\n\n    const [startDate, setStartDate] = useState<Date>(new Date());\n\n    const [selected, setSelected] = useState<DropDownItem>({ name: \"No Team\", coinUrl: CoinsURL.None })\n    const [selectedFrequency, setSelectedFrequency] = useState<DropDownItem>({ name: \"Monthly\", type: Interval.monthly })\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>(Coins[CoinsName.CELO]);\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>(Coins[CoinsName.CELO]);\n\n    const [selectedType, setSelectedType] = useState(false)\n\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        triggerTeams({ take: Number.MAX_SAFE_INTEGER })\n    }, [])\n\n    useEffect(() => {\n        if (!data || (data && data.teams.length === 0)) {\n            setSelected({ name: \"No Team\", coinUrl: CoinsURL.None })\n        }\n    })\n\n    useEffect(() => {\n        if (data && data.teams && data.teams.length > 0) {\n            setSelected({ name: \"Select Team\", coinUrl: CoinsURL.None })\n        }\n    }, [data])\n\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const target = e.target as HTMLFormElement;\n\n        const { firstName, lastName, teamName, walletAddress, amount, amount2 } = target;\n        const firstNameValue = (firstName as HTMLInputElement).value\n        const lastNameValue = (lastName as HTMLInputElement).value\n        // const teamNameValue = (teamName as HTMLInputElement)?.value\n        const walletAddressValue = (walletAddress as HTMLInputElement).value\n        const amountValue = (amount as HTMLInputElement).value\n        const amountValue2 = (amount2 as HTMLInputElement)?.value\n        console.log(amountValue2, amount2)\n\n        if (firstNameValue && lastNameValue && walletAddressValue && amountValue) {\n            if (!Object.values(Coins).includes(selectedWallet as AltCoins)) {\n                alert(\"Please, choose a wallet\")\n                return\n            }\n            if (selected === { name: \"Select Team\", coinUrl: CoinsURL.None }) {\n                alert(\"Please, choose a team\")\n                return\n            }\n\n            if (selectedWallet.value && selected.id) {\n\n                try {\n\n                    let sent: AddMember = {\n                        name: `${firstNameValue} ${lastNameValue}`,\n                        address: walletAddressValue.trim(),\n                        currency: selectedWallet.value,\n                        amount: amountValue.trim(),\n                        teamId: selected.id,\n                        usdBase: selectedType,\n\n                        interval: selectedFrequency!.type as Interval,\n                        paymantDate: startDate!.toISOString(),\n                    }\n\n                    if (amountValue2 && selectedWallet2.value) {\n                        sent = {\n                            ...sent,\n                            secondaryAmount: amountValue2.trim(),\n                            secondaryCurrency: selectedWallet2.value,\n                            secondaryUsdBase: selectedType,\n                        }\n                    }\n\n                    await addMember(sent).unwrap()\n\n                    dispatch(changeSuccess({activate: true, text: \"Member added successfully\"}))\n                    onDisable(false)\n                } catch (error: any) {\n                    console.error(error)\n                    dispatch(changeError({ activate: true, text: error?.data?.message }))\n                }\n            }\n        }\n    }\n\n    return <>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col space-y-8\">\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Personal Details</div>\n                    <div className=\"grid grid-cols-2 gap-x-10\">\n                        <div>\n                            <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" className=\"border-2 pl-2 rounded-md outline-none h-[42px] w-full\" required />\n                        </div>\n                        <div>\n                            <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" className=\"border-2 pl-2 rounded-md outline-none h-[42px] w-full\" required />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Choose Team</div>\n                    <div className=\"grid grid-cols-2 w-[85%] gap-x-10\">\n                        <div>\n                            <Dropdown onSelect={setSelected} loader={isLoading} selected={selected} list={data?.teams && data.teams.length > 0 ? [...data.teams.map(w => { return { name: w.title, coinUrl: CoinsURL.None, id: w.id } })] : []} nameActivation={true} className=\"border-2 rounded-md\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"font-bold\">Wallet Address</div>\n                    <div>\n                        <input type=\"text\" name=\"walletAddress\" className=\"h-[42px] w-full rounded-lg border-2 pl-2 outline-none\" placeholder=\"Wallet Address\" required />\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4\">\n                    <div className=\"flex space-x-24\">\n                        <div className=\"flex space-x-2 items-center\">\n                            <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                            <label className=\"font-semibold text-sm\">\n                                Token Amounts\n                            </label>\n                        </div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                            <label className=\"font-semibold text-sm\">\n                                USD-based Amounts\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4 w-2/3\">\n                    <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                        <input type=\"number\" name=\"amount\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                        {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                        {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins)} />}\n\n                    </div>\n                </div>\n                {secondActive ?\n                    <div className=\"flex flex-col space-y-4 w-2/3\">\n                        <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                            <input type=\"number\" name=\"amount2\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                            {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins)} />}\n\n                        </div>\n                    </div> : <div className=\"text-primary cursor-pointer\" onClick={() => setSecondActive(true)}>+ Add another token</div>}\n                <div className=\"flex flex-col space-y-4 w-1/2\">\n                    <div className=\"font-bold\">Payment Frequency</div>\n                    <div>\n                        <Dropdown onSelect={setSelectedFrequency} loader={isLoading} selected={selectedFrequency} list={[{ name: \"Monthly\", type: Interval.monthly }, { name: \"Weekly\", type: Interval.weakly }]} nameActivation={true} className=\"border-2 rounded-md\" />\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-4 w-1/2\">\n                    <div className=\"font-bold\">Payment Date</div>\n                    <div className=\"border-2 p-2 rounded-md\">\n                        <DatePicker selected={startDate} minDate={new Date()} onChange={(date) => date ? setStartDate(date) : null} />\n                    </div>\n                </div>\n                {/* {isError && <Error onClose={(val)=>dispatch(changeError({activate: val, text: ''}))} />} */}\n                <div className=\"flex justify-center\">\n                    <Button className=\"px-8 py-3\" isLoading={addMemberLoading}>\n                        Add Person\n                    </Button>\n                </div>\n            </div>\n        </form>\n    </>\n}\n\nexport default AddMemberModal;","import { useRef } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport { useAppDispatch } from \"../../../redux/hooks\"\nimport { changeSuccess } from '../../../redux/reducers/notificationSlice'\nimport { useCreateTeamMutation } from \"../../../redux/api\";\nimport Button from \"../../button\";\n\nconst AddTeams = ({ onDisable }: { onDisable: React.Dispatch<boolean>}) => {\n\n    const [createTeam, { error, isLoading }] = useCreateTeamMutation()\n\n    const teamName = useRef<HTMLInputElement>(null)\n    const dispatch = useAppDispatch()\n\n    const create = async () => {\n        if (teamName.current && teamName.current.value.trim()) {\n            try {\n                await createTeam({ title: teamName.current.value.trim() }).unwrap();\n\n                dispatch(changeSuccess({activate: true, text: \"Successfully created\"}))\n                onDisable(false)\n            } catch (error) {\n                console.error(error)\n            }\n        }\n    }\n\n    return <div className=\"flex flex-col justify-center space-y-10\">\n        <div className=\"grid grid-cols-2 items-center\">\n            <div>Team Name</div>\n            <div>\n                <input ref={teamName} type=\"text\" className=\"border pl-3 w-full rounded-xl h-10 outline-none\" />\n            </div>\n            {error && <div className=\"text-red-600\"> Something went wrong</div>}\n        </div>\n        {/* <div className=\"grid grid-cols-2 items-center\">\n            <div>Currency to be used</div>\n            <div>\n                <Dropdown onSelect={setSelectedCoin} price={true} selected={selectedCoin} list={[{ name: \"Celo\", coinUrl: CoinsURL.CELO }, { name: \"cUSD\", coinUrl: CoinsURL.cUSD }]} />\n            </div>\n        </div> */}\n        <div className=\"flex justify-center\">\n            <Button onClick={create} isLoading={isLoading} className=\"px-14 py-2 font-light\">\n                Add Team\n            </Button>\n        </div>\n\n    </div>\n}\n\nexport default AddTeams;","import { Dispatch, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport { changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\nimport Button from \"../../button\";\n\nconst Delete = ({ name, onCurrentModal, onDelete, onSuccess }: { name: string, onCurrentModal: Dispatch<boolean>, onDelete: () => Promise<void>, onSuccess?: Dispatch<boolean> }) => {\n    const [loading, setLoading] = useState(false)\n    const dispatch = useAppDispatch()\n    return <div className=\"flex flex-col space-y-6\">\n        <div className=\"flex items-center justify-center text-xl\">\n            Delete {name}?\n        </div>\n        <div className=\"flex justify-center items-center space-x-4\">\n            <Button version=\"second\" className=\"border-2 border-red-500 hover:bg-red-500 text-red-500 w-[80px] h-[27px] px-1 py-0\" onClick={() => onCurrentModal(false)}>Close</Button>\n            <Button className=\"bg-red-500 hover:bg-red-500 hover:text-white border-red-500 text-white w-[80px] h-[27px] px-1 py-0\" onClick={async () => {\n                setLoading(true);\n                try {\n                    await onDelete()\n                    //onSuccess(true)\n                    dispatch(changeSuccess({activate: true, text: \"Successfully\"}))\n                    onCurrentModal(false)\n                } catch (error) {\n                    console.error(error)\n                }\n                setLoading(false)\n            }}>{loading ? <ClipLoader size={20} /> : 'Delete'}</Button>\n        </div>\n    </div>\n}\n\nexport default Delete;","import { Dispatch, SyntheticEvent, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useLazyGetMemberQuery, useLazyGetTeamsQuery, useUpdateMemberMutation } from \"../../../redux/api\";\nimport { changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { Coins, CoinsURL } from \"../../../types/coins\";\nimport { DropDownItem } from \"../../../types/dropdown\";\nimport { Interval, Member } from \"../../../types/sdk\";\nimport Dropdown from \"../../dropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from \"../../button\";\n\n\nconst EditMember = (props: Member & { onCurrentModal: Dispatch<boolean> }) => {\n    const dispatch = useDispatch()\n\n    const [triggerTeam, { data, isLoading }] = useLazyGetTeamsQuery()\n\n    const [getMembers, { data: member, isLoading: memberLoading, isFetching }] = useLazyGetMemberQuery()\n\n    const [updateMember, { isLoading: updateLoading }] = useUpdateMemberMutation()\n\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem>({ name: \"No Team\", coinUrl: CoinsURL.None })\n    const [secondActive, setSecondActive] = useState(false)\n\n    const [startDate, setStartDate] = useState<Date>(new Date());\n\n\n    const [selectedFrequency, setSelectedFrequency] = useState<DropDownItem>({ name: \"Monthly\", type: Interval.monthly })\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>({ name: Coins[props.currency].name, type: Coins[props.currency].value, value: Coins[props.currency].value, id: Coins[props.currency].value, coinUrl: Coins[props.currency].coinUrl });\n    const [selectedWallet2, setSelectedWallet2] = useState<DropDownItem>();\n\n    const [selectedType, setSelectedType] = useState(props.usdBase)\n    useEffect(() => {\n        triggerTeam({ take: Number.MAX_SAFE_INTEGER })\n        getMembers(props.id)\n        setSecondActive(!(!props.secondaryAmount))\n        if (props.interval) {\n            setSelectedFrequency(props.interval === Interval.monthly ? { name: \"Monthly\", type: Interval.monthly } : { name: \"Weekly\", type: Interval.weakly })\n        }\n        if (props.paymantDate) {\n            setStartDate(new Date(props.paymantDate))\n        }\n        if (props.secondaryCurrency) {\n            setSelectedWallet2({ name: Coins[props.secondaryCurrency].name, type: Coins[props.secondaryCurrency].value, value: Coins[props.secondaryCurrency].value, id: Coins[props.secondaryCurrency].value, coinUrl: Coins[props.secondaryCurrency].coinUrl })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (member && data) {\n            setSelectedTeam({ name: data.teams.find(w => w.id === member.member.teamId)!.title, coinUrl: CoinsURL.None, id: member.member.teamId })\n        }\n    }, [member, data])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const { memberName, amount, address, amount2 } = e.target as HTMLFormElement;\n\n        if (memberName && amount && address && selectedWallet && selectedTeam) {\n            if (!selectedWallet.value) {\n                alert(\"Please, choose a Celo wallet\")\n                return\n            }\n            if (!selectedTeam.id) {\n                alert(\"Please, choose a team\")\n                return\n            }\n            const memberNameValue = (memberName as HTMLInputElement).value\n            const amountValue = (amount as HTMLInputElement).value\n            const addressValue = (address as HTMLInputElement).value\n            const amountValue2 = (amount2 as HTMLInputElement)?.value\n\n            let member: Member = {\n                id: props.id,\n                name: memberNameValue,\n                address: addressValue,\n                amount: amountValue,\n                currency: selectedWallet.value,\n                teamId: selectedTeam.id,\n                usdBase: selectedType,\n\n                interval: selectedFrequency!.type as Interval,\n                paymantDate: startDate!.toISOString(),\n            }\n\n            if (amountValue2 && selectedWallet2 && selectedWallet2.value) {\n                member = {\n                    ...member,\n                    secondaryAmount: amountValue2.trim(),\n                    secondaryCurrency: selectedWallet2.value,\n                    secondaryUsdBase: selectedType,\n                }\n            }\n\n            try {\n                await updateMember(member).unwrap()\n                dispatch(changeSuccess({ activate: true, text: \"Member updated successfully\" }))\n            } catch (error) {\n                console.error(error)\n            }\n\n        }\n    }\n\n    return <>\n        <div>\n            {!memberLoading && !isFetching && member ? <form onSubmit={Submit}>\n                <div className=\"text-xl font-bold pb-3\">\n                    Personal Details\n                </div>\n                <div className=\"grid grid-cols-2 gap-y-10\">\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Name</div>\n                        <div className=\"flex space-x-2 items-center w-3/4\">\n                            <input name=\"memberName\" type=\"text\" defaultValue={member.member!.name} className=\"w-full border-2 border-black border-opacity-50 outline-none rounded-md px-3 py-2\" required />\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"font-bold\">Team</div>\n                        <div>\n                            <div className=\"flex space-x-2 items-center w-3/4\">\n                                <Dropdown onSelect={setSelectedTeam} parentClass=\"w-full\" loader={isLoading} selected={selectedTeam} list={data?.teams && data.teams.length > 0 ? [...data.teams.map(w => { return { name: w.title, coinUrl: CoinsURL.None, id: w.id } })] : []} nameActivation={true} className=\"border-2 rounded-md w-full\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-3 col-span-2\">\n                        <div className=\"font-bold\">Wallet Address</div>\n                        <div className=\"flex space-x-2 items-center w-full\">\n                            <input name=\"address\" type=\"text\" defaultValue={member.member!.address} className=\"w-full  border border-black border-opacity-50 outline-none rounded-md px-3 py-2\" required />\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 flex flex-col space-y-4\">\n                        <div className=\"flex space-x-24\">\n                            <div className=\"flex space-x-2 items-center\">\n                                <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                                <label className=\"font-semibold text-sm\">\n                                    Token Amounts\n                                </label>\n                            </div>\n                            <div className=\"flex space-x-2 items-center\">\n                                <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                                <label className=\"font-semibold text-sm\">\n                                    USD-based Amounts\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 flex flex-col space-y-4 w-2/3\">\n                        <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                            <input type=\"number\" defaultValue={member.member!.amount} name=\"amount\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                            {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                            {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={Object.values(Coins)} />}\n\n                        </div>\n                    </div>\n                    {secondActive && selectedWallet2 ?\n                        <div className=\"col-span-2 flex flex-col space-y-4 w-2/3\">\n                            <div className={`border text-black py-1 rounded-md grid ${selectedType ? \"grid-cols-[40%,15%,45%]\" : \"grid-cols-[50%,50%]\"}`}>\n                                <input type=\"number\" defaultValue={member.member!.secondaryAmount} name=\"amount2\" className=\"outline-none unvisibleArrow pl-2\" placeholder=\"Amount\" required step={'any'} min={0} />\n                                {selectedType && <span className=\"text-xs self-center opacity-70\">USD as</span>}\n                                {!selectedWallet ? <ClipLoader /> : <Dropdown className=\"border-transparent text-sm\" onSelect={setSelectedWallet2} nameActivation={true} selected={selectedWallet2} list={Object.values(Coins)} />}\n\n                            </div>\n                        </div> : <div className=\"text-primary cursor-pointer\" onClick={() => setSecondActive(true)}>+ Add another token</div>}\n                    <div className=\"col-span-2 flex flex-col space-y-4 w-1/2\">\n                        <div className=\"font-bold\">Payment Frequency</div>\n                        <div>\n                            <Dropdown onSelect={setSelectedFrequency} loader={isLoading} selected={selectedFrequency} list={[{ name: \"Monthly\", type: Interval.monthly }, { name: \"Weekly\", type: Interval.weakly }]} nameActivation={true} className=\"border-2 rounded-md\" />\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 flex flex-col space-y-4 w-1/2\">\n                        <div className=\"font-bold\">Payment Date</div>\n                        <div className=\"border-2 p-2 rounded-md\">\n                            <DatePicker selected={startDate} minDate={new Date()} onChange={(date) => date ? setStartDate(date) : null} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex justify-center items-center pt-10\">\n                    <div className=\"flex justify-center\">\n                        <div>\n                            <Button isLoading={updateLoading} className=\"w-full px-6 py-3\">\n                                Save\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n                : <div className=\"flex justify-center\"> <ClipLoader /></div>}\n        </div>\n    </>\n}\n\nexport default EditMember;","import { Dispatch, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useUpdateTeamMutation } from \"../../../redux/api\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { TeamInfoWithMembers } from \"../../../types/sdk\";\nimport Button from \"../../button\";\n\n\nconst EditTeam = (props: TeamInfoWithMembers & { onCurrentModal: Dispatch<boolean> }) => {\n\n    const [updateTeam, { isLoading }] = useUpdateTeamMutation()\n    const [input, setInput] = useState<string>('')\n    const dispatch = useAppDispatch()\n\n\n    return <div className=\"grid grid-rows-[25%,25%,50%] grid-cols-[80%] items-center justify-center h-[200px]\">\n        <div className=\"text-center self-end font-light\">\n            Team Name\n        </div>\n        <div className=\"place-self-center\">\n            <input type=\"text\" defaultValue={props.title} onChange={(e) => setInput(e.target.value)} className=\"text-center px-3 rounded-md py-2 outline-none border-2 border-black border-opacity-50\" required />\n        </div>\n        <div className=\"grid grid-cols-2 self-end gap-x-5\">\n            <Button version=\"second\" className=\"w-full py-3\" onClick={() => {\n                props.onCurrentModal(false)\n            }}>\n                Close\n            </Button>\n            <Button className=\"w-full px-4 py-3\" isLoading={isLoading} onClick={async () => {\n                try {\n                    await updateTeam({ id: props.id, body: { title: input } }).unwrap()\n                    dispatch(changeSuccess({ activate: true, text: \"Successfully\" }))\n                    props.onCurrentModal(false)\n                } catch (error: any) {\n                    console.error(error)\n                    dispatch(changeError({ activate: true, text: error?.data?.message }))\n                }\n            }}>\n                Save\n            </Button>\n        </div>\n    </div>\n}\n\nexport default EditTeam;","\nconst Avatar = ({ name, className }: { name: string, className?: string}) => {\n\n    return <div className={`${className} w-[28px] h-[28px] font-[18px] flex items-center justify-center rounded-full bg-greylish bg-opacity-20`}>\n        {name.slice(0, 2)}\n    </div>\n}\n\nexport default Avatar;","import { Dispatch } from \"react\";\nimport { Coins } from \"../../../types/coins\";\nimport { Member } from \"../../../types/sdk\";\nimport Avatar from '../../avatar'\nimport Button from \"../../button\";\n\nconst Profile = (props: Member & { teamName: string, onDeleteModal: Dispatch<boolean>, onCurrentModal: Dispatch<boolean>, onEditModal: Dispatch<boolean> }) => {\n\n    return <>\n        <div>\n            <div className=\"text-xl font-bold pb-3\">\n                Personal Details\n            </div>\n            <div className=\"grid grid-cols-2 gap-y-10\">\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Name</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <Avatar name={props.name} />\n                            <div>\n                                {props.name}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Team</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.teamName}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Pay Amount</div>\n                    <div className=\"flex flex-col space-y-3\">\n                        <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.amount}\n                            </div>\n                            <div>\n                                <img width=\"20\" height=\"20\" src={Coins[props.currency].coinUrl} alt=\"\" className=\"rounded-full\" />\n                            </div>\n                        </div>\n                        {props.secondaryCurrency && <div className=\"flex space-x-2 items-center\">\n                            <div>\n                                {props.secondaryAmount}\n                            </div>\n                            <div>\n                                <img width=\"20\" height=\"20\" src={Coins[props.secondaryCurrency].coinUrl} alt=\"\" className=\"rounded-full\" />\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <div className=\"font-bold\">Wallet Address</div>\n                    <div>\n                        <div className=\"flex space-x-2 items-center\">\n                            <div className=\"text-xs\">\n                                {props.address}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-center items-center pt-10\">\n                <div className=\"grid grid-cols-2 gap-y-3 gap-x-5 justify-center\">\n                    <div className=\"col-span-2\">\n                        <Button className=\"px-6 py-3 w-full\">\n                            Pay Now\n                        </Button>\n                    </div>\n                    <div>\n                        <Button className=\"w-full px-6 py-3\" onClick={() => {\n                            props.onEditModal(true)\n                            props.onCurrentModal(false)\n                        }}>\n                            Edit\n                        </Button>\n                    </div>\n                    <div>\n                        <Button version=\"second\" className=\"w-full px-6 py-3\" onClick={() => {\n                            props.onDeleteModal(true)\n                            props.onCurrentModal(false)\n                        }}>\n                            Delete\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Profile;","import React, { useEffect } from \"react\";\n\n\nconst Modal = ({ children, onDisable, title, className, disableX = false }: { children?: JSX.Element | JSX.Element[], onDisable: React.Dispatch<React.SetStateAction<boolean>>, title?: string, className?: string, disableX?: boolean }) => {\n    useEffect(() => {\n        document.querySelector('body')!.style.overflowY = \"hidden\"\n        return () => {\n            document.querySelector('body')!.style.overflowY = \"\"\n        }\n    }, [])\n    return <>\n        <div className=\"w-full h-full !my-0 bg-white bg-opacity-60 absolute left-0 top-0 z-40\" onClick={() => onDisable(false)} style={{\n            top: `${window.scrollY}px`,\n        }}>\n        </div>\n        <div className={`absolute ${className} overflow-scroll max-h-[75vh]  left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white w-[90%] sm:w-[60%] lg:w-auto lg:min-w-[33%] shadow-custom rounded-xl z-50`} style={{ top: `${window.scrollY + (window.innerHeight / 2)}px` }}>\n            <div className=\"relative px-5 py-10\">\n                {children}\n                {!(!title) && <div className=\"absolute right-full top-2 font-bold translate-x-[105%] w-1/2\">\n                    {title}\n                </div>}\n                {!disableX && <button onClick={() => onDisable(false)} className=\"absolute left-full top-0 translate-x-[-200%] translate-y-[25%] text-greylish opacity-45\">\n                    X\n                </button>}\n            </div>\n        </div>\n    </>\n}\n\nexport default Modal;","import { useState } from \"react\";\nimport { Coins } from \"../../types/coins\";\nimport Modal from \"../modal\";\nimport Profile from '../../components/teams/buttons/profile'\nimport EditMember from '../../components/teams/buttons/editMember'\nimport Avatar from \"../avatar\";\nimport Delete from './buttons/delete'\nimport { useDeleteMemberMutation } from \"../../redux/api/teamMember\";\nimport { Member } from \"../../types/sdk\";\n\nconst TeamItem = (props: Member & { teamName: string }) => {\n    const [deleteMember] = useDeleteMemberMutation()\n    const [modalVisible, setModalVisible] = useState(false)\n    const [modalEditVisible, setModalEditVisible] = useState(false)\n    const [deleteModal, setDeleteModal] = useState(false)\n\n    const onDelete = async () => {\n        try {\n            await deleteMember(props.id).unwrap()\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return <>\n        <div className=\"pl-[2px] items-start\">\n            <div className=\"hover:cursor-pointer flex items-center space-x-1\" onClick={() => setModalVisible(true)}>\n                <Avatar name={props.name} />\n                <div>\n                    {props.name}\n                </div>\n            </div>\n        </div>\n        <div className=\"pl-[2px] hidden sm:flex items-start\">\n            {props.teamName}\n        </div>\n        <div className=\"flex flex-col space-y-4\">\n            <div className=\" pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.amount}</div>\n                {props.usdBase ? <div>USD as {Coins[props.currency].name}</div> :\n                    <div>\n                        {Coins[props.currency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.currency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>\n            {props.secondaryCurrency && <div className=\"pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.secondaryAmount}</div>\n                {props.secondaryUsdBase ? <div>USD as {Coins[props.secondaryCurrency].name}</div> :\n                    <div>\n                        {Coins[props.secondaryCurrency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.secondaryCurrency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>}\n        </div>\n        <div className=\"col-span-2 sm:col-span-1 pt-3 sm:pt-0 pl-[2px] self-start truncate\">\n            {props.address}\n        </div>\n        {modalVisible && <Modal onDisable={setModalVisible}>\n            <Profile {...props} onDeleteModal={setDeleteModal} onCurrentModal={setModalVisible} onEditModal={setModalEditVisible} />\n        </Modal>}\n        {modalEditVisible && <Modal onDisable={setModalEditVisible}>\n            <EditMember {...props} onCurrentModal={setModalVisible} />\n        </Modal>}\n        {deleteModal && <Modal onDisable={setDeleteModal}>\n            <Delete name={props.name} onCurrentModal={setDeleteModal} onDelete={onDelete} />\n        </Modal>}\n\n    </>\n}\n\nexport default TeamItem;","import { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport { useDeleteTeamMutation, useUpdateTeamMutation } from \"../../redux/api\";\nimport { TeamInfoWithMembers } from \"../../types/sdk\";\nimport Modal from \"../modal\";\nimport Delete from \"./buttons/delete\";\nimport EditTeam from './buttons/editTeam'\nimport TeamItem from \"./teamItem\";\n\n\nconst TeamContainer = (props: TeamInfoWithMembers) => {\n    const [deleteModal, setDeleteModal] = useState(false)\n    const [deleteTeam] = useDeleteTeamMutation()\n\n    const [editModal, setEditModal] = useState(false)\n\n    const [num, setNum] = useState(3)\n\n    const DeleteTeam = async () => {\n        try {\n            await deleteTeam(props.id).unwrap()\n            setDeleteModal(false)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return <>\n        <div className=\"col-span-4 flex space-x-3 py-4 pt-4 sm:pt-14 pb-1 px-5 items-center justify-between\">\n            <div className=\"font-semibold text-[1.5rem] overflow-hidden whitespace-nowrap\">\n                <div>{props.title}</div>\n            </div>\n            <div className=\"flex space-x-3\">\n                <div className=\"cursor-pointer\" onClick={() => setEditModal(true)}>\n                    <img src=\"/icons/editicon.svg\" alt=\"\" />\n                </div>\n                <div className=\"cursor-pointer\" onClick={() => setDeleteModal(true)}>\n                    <img src=\"/icons/trashicon.svg\" alt=\"\" />\n                </div>\n            </div>\n        </div>\n        {props.members && props.members.slice(0, num).map(w =>\n            <div key={generate()} className=\"grid grid-cols-2 sm:grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] py-6 border-b border-black pb-5 px-5 text-sm\">\n                <TeamItem teamName={props.title} {...w} />\n            </div>\n        )}\n        {props.members && props.members.length > 3 && num !== 100 ? <button className=\"py-3 pb-5 px-5 font-bold text-primary\" onClick={() => setNum(100)}>\n            Show More\n        </button> : null}\n        {!props.members ? <div className=\"b-5 px-5 border-b border-black pb-5\">No Team Member Yet</div> : undefined}\n        {deleteModal && <Modal onDisable={setDeleteModal}>\n            <Delete name={props.title} onCurrentModal={setDeleteModal} onDelete={DeleteTeam} />\n        </Modal>}\n        {editModal && <Modal onDisable={setEditModal}>\n            <EditTeam {...props} onCurrentModal={setEditModal} />\n        </Modal>}\n    </>\n}\n\nexport default TeamContainer;","import { createSlice } from '@reduxjs/toolkit';\nimport { NonExecTransactionItem } from '../../types/sdk';\nimport { RootState } from '../store';\n\ninterface State {\n    transactions: NonExecTransactionItem[] | undefined;\n}\n\nconst initialState: State = {\n    transactions: []\n};\n\nexport const multisigSlice = createSlice({\n    name: 'multisig',\n    initialState: initialState,\n    reducers: {\n        setTransactions: (state, action) => {\n            if(action.payload !== undefined && action.payload?.length !== 0){\n                if(state.transactions) state.transactions = [...state.transactions, ...action.payload];\n                else state.transactions = [...action.payload];\n            }else state.transactions = action.payload\n        }\n    }\n});\n\nexport const { setTransactions } = multisigSlice.actions;\n\nexport const selectMultisigTransactions = (state: RootState) => state.multisig.transactions;\n\nexport default multisigSlice.reducer;\n","import { useCallback, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport removeOwner from \"../components/settings/owner/removeOwner\"\nimport { useAddOwnerMutation, useReplaceOwnerMutation, useLazyGetOwnersQuery, useLazyGetRequiredSignaturesQuery, useChangeRequiredSignaturesMutation, useChnageInternalRequiredSignaturesMutation, useRemoveOwnerMutation, useLazyGetNotExecutedTransactionsQuery, useLazyGetAllTransactionsQuery, useLazyGetTransactionsByPaginationQuery } from \"../redux/api\"\nimport { selectMultisigTransactions, setTransactions } from \"../redux/reducers/multisig\"\nimport { SelectSelectedAccount } from '../redux/reducers/selectedAccount'\nimport { selectStorage } from \"../redux/reducers/storage\"\n\nconst useMultisig = () => {\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const storage = useSelector(selectStorage)\n    const multiSlice = useSelector(selectMultisigTransactions)\n    const [addingOwner, { isLoading: isAddOwnerLoading }] = useAddOwnerMutation()\n    const [replacingOwner, { isLoading: isReplaceOwnerLoading }] = useReplaceOwnerMutation()\n    const [changeSign, { isLoading: isChangeSignLoading }] = useChangeRequiredSignaturesMutation()\n    const [changeInternalSign, { isLoading: isChangeInternalLoading }] = useChnageInternalRequiredSignaturesMutation()\n    const [removingOwner, { isLoading: isRemoveLoading }] = useRemoveOwnerMutation()\n\n    const [fetch, { data, isFetching, isLoading }] = useLazyGetOwnersQuery()\n    const [signFethch, { data: signData,  }] = useLazyGetRequiredSignaturesQuery()\n\n    const [isMultisig, setIsMultisig] = useState(false)\n\n    //const [multiNonExecutedFetch, { data: multiData }] = useLazyGetNotExecutedTransactionsQuery();\n    //const [multiNonExecutedFetch, { data: multiData }] = useLazyGetAllTransactionsQuery();\n    const [multiNonExecutedFetch, { data: multiData, isLoading: transactionLoading, isFetching: transactionFetching }] = useLazyGetTransactionsByPaginationQuery();\n    const dispatch = useDispatch()\n\n    const fetchTxs = useCallback((disabledTransactionDispatch = false, skip = 0, take = 10) => {\n        if (!disabledTransactionDispatch) dispatch(setTransactions([]))\n        multiNonExecutedFetch({ address: selectedAccount, skip, take })\n    }, [isMultisig, selectedAccount])\n\n    useEffect(() => {\n        if (multiData && multiData.transactionArray) {\n            if(multiData.transactionArray.length === 0){\n                dispatch(setTransactions(undefined))\n            }else if(!multiSlice?.some(s=>s.id === multiData.transactionArray[multiData.transactionArray.length-1]?.id)){\n                dispatch(setTransactions(multiData.transactionArray))\n            }\n        }\n    }, [multiData])\n\n    useEffect(() => {\n        let interval: any;\n        if (selectedAccount.toLowerCase() !== storage!.accountAddress.toLowerCase()) {\n            fetchTxs()\n            setIsMultisig(true)\n            fetch({ address: selectedAccount })\n            signFethch({ address: selectedAccount })\n\n        } else {\n            setIsMultisig(false)\n        }\n\n        if (interval) {\n            return () => clearInterval(interval)\n        }\n\n    }, [selectedAccount])\n\n    const refetch = (disabledTransactionDispatch = false, skip = 0, take = 10) => {\n        fetchTxs(disabledTransactionDispatch, skip, take)\n        fetch({ address: selectedAccount })\n        signFethch({ address: selectedAccount })\n    }\n\n    const removeOwner = useCallback(async (ownerAddress) => {\n        if (isMultisig) {\n            await removingOwner({\n                multisigAddress: selectedAccount.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                ownerAddress: ownerAddress.toString()\n            }).unwrap()\n        }\n    }, [isMultisig])\n\n    const changeSigns = useCallback(async (sign: number, internalSign: number) => {\n        if (isMultisig) {\n            await changeSign({\n                multisigAddress: selectedAccount.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                requirement: sign.toString()\n            }).unwrap()\n\n            await changeInternalSign({\n                multisigAddress: selectedAccount.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                requirement: internalSign.toString()\n            }).unwrap()\n\n        }\n    }, [isMultisig])\n\n    const addOwner = useCallback(async (newOwner) => {\n        if (isMultisig) {\n            const res = await addingOwner({\n                multisigAddress: selectedAccount.toLowerCase(),\n                ownerAddress: newOwner.toLowerCase(),\n                phrase: storage!.encryptedPhrase\n            }).unwrap()\n\n            return res;\n        }\n    }, [isMultisig])\n\n    const replaceOwner = useCallback(async (oldOwner, newOwner) => {\n        if (isMultisig) {\n            const res = await replacingOwner({\n                multisigAddress: selectedAccount.toLowerCase(),\n                ownerAddress: oldOwner.toLowerCase(),\n                phrase: storage!.encryptedPhrase,\n                newOwnerAddress: newOwner.toLowerCase()\n            }).unwrap()\n\n            return res\n        }\n    }, [isMultisig])\n\n\n    if (isMultisig) {\n        return { data, isMultisig, signData, fetchTxs, addOwner, replaceOwner, changeSigns, removeOwner, storage, isLoading: isLoading || isFetching, isTransactionLoading: transactionLoading || transactionFetching, isAddOwnerLoading, isReplaceOwnerLoading, isChangeSignLoading: isChangeSignLoading || isChangeInternalLoading, refetch, isRemoveLoading }\n    } else {\n        return { data: undefined, addOwner, fetchTxs, replaceOwner, changeSigns, removeOwner, storage, signData: undefined, refetch, isMultisig, isTransactionLoading: transactionLoading || transactionFetching, }\n    }\n\n}\n\nexport default useMultisig;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport Avatar from \"../../avatar\";\nimport Button from \"../../button\";\n\n\nconst AddOwner = ({ onDisable }: { onDisable: React.Dispatch<boolean> }) => {\n\n    const { signData, data, addOwner, isAddOwnerLoading, refetch } = useMultisig()\n\n    const [pageIndex, setPageIndex] = useState(0);\n\n    const dispatch = useDispatch()\n\n\n    const [address, setAddress] = useState(\"\");\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Add Owner</div>\n        {pageIndex === 0 && <>\n            {/* <div className=\"flex flex-col space-y-3\">\n                <span>New Owner</span>\n                <div>\n                    <input type=\"text\" placeholder=\"Owner Name\" className=\"w-[75%] px-3 py-2 border border-black rounded-lg\" />\n                </div>\n            </div> */}\n            <div className=\"flex flex-col space-y-3\">\n                <span>Wallet Address</span>\n                <div>\n                    <input onChange={(e) => setAddress(e.target.value)} type=\"text\" placeholder=\"0xabc...\" className=\"w-full px-3 py-2 border border-black rounded-lg\" />\n                </div>\n            </div>\n            <div className=\"flex justify-center\">\n                <div className=\"grid grid-cols-2 gap-5 w-[50%] \">\n                    <Button version=\"second\" className={'!px-3 !py-2'} onClick={() => onDisable(false)}>Close</Button>\n                    <Button className=\"!px-3 !py-2\" onClick={() => {\n                        if (address) {\n                            setPageIndex(1)\n                        }\n                    }}>\n                        Next\n                    </Button>\n                </div>\n            </div></>}\n        {pageIndex === 1 && <>\n            <div className=\"flex border border-primary px-3 py-2 items-center rounded-xl space-x-3\">\n                <div>\n                    <Avatar name=\"Ow\" className=\"bg-primary text-black bg-opacity-100 font-bold text-xs\" />\n                </div>\n                <div className=\"flex flex-col\">\n                    <div>\n                        New Owner\n                    </div>\n                    <div className=\"text-sm text-greylish\">\n                        Address: {address}\n                    </div>\n                    <div className=\"text-sm text-greylish\">\n                        Treshold: <span className=\"font-bold\">{signData?.changingMultiSigProperties} out of {data?.length} owners</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-center\">\n                <div className=\"grid grid-cols-2 gap-5 w-[50%] \">\n                    <Button version=\"second\" className=\"!px-3 !py-2\" onClick={() => setPageIndex(0)}>\n                        Back\n                    </Button>\n                    <Button className=\"!px-3 !py-2\" isLoading={isAddOwnerLoading} onClick={async () => {\n                        try {\n                            await addOwner(address)\n                            refetch()\n                            dispatch(changeSuccess({ activate: true, text: \"Owner added successfully\" }))\n                            onDisable(false)\n                        } catch (error: any) {\n                            console.error(error)\n                            dispatch(changeError({ activate: true, text: error?.data?.message }))\n                            onDisable(false)\n                        }\n                    }}>\n                        Confirm\n                    </Button>\n                </div>\n            </div></>}\n    </div>\n}\n\nexport default AddOwner;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport Button from \"../../button\";\n\n\nconst ReplaceOwner = ({ onDisable, ownerAddress }: { onDisable: React.Dispatch<boolean>, ownerAddress: string }) => {\n\n    const { replaceOwner, isReplaceOwnerLoading, refetch } = useMultisig()\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(ownerAddress);\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Replace Owner</div>\n        {/* <div className=\"flex flex-col space-y-3\">\n                <span>New Owner</span>\n                <div>\n                    <input type=\"text\" placeholder=\"Owner Name\" className=\"w-[75%] px-3 py-2 border border-black rounded-lg\" />\n                </div>\n            </div> */}\n        <div className=\"flex flex-col space-y-3\">\n            <span>Wallet Address</span>\n            <div>\n                <input defaultValue={ownerAddress} onChange={(e) => setAddress(e.target.value)} type=\"text\" placeholder=\"0xabc...\" className=\"w-full px-3 py-2 border border-black rounded-lg\" />\n            </div>\n        </div>\n        <div className=\"flex justify-center\">\n            <div className=\"grid grid-cols-1 gap-5 w-[30%] \">\n                <Button className=\"px-3 py-2\" isLoading={isReplaceOwnerLoading} onClick={async () => {\n                    if (address) {\n                        try {\n                            await replaceOwner(ownerAddress, address)\n                            dispatch(changeSuccess({activate: true, text: \"Successfully\"}))\n                            refetch()\n                            onDisable(false)\n                        } catch (error : any) {\n                            console.error(error)\n                            dispatch(changeError({ activate: true, text: error?.data?.message }))\n                            onDisable(false)\n                        }\n                    }\n                }}>\n                   Save\n                </Button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default ReplaceOwner;","import { useDispatch } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport Avatar from \"../../avatar\";\nimport Button from \"../../button\";\n\n\nconst RemoveOwner = ({ name, address, onDisable }: { name: string, address: string, onDisable: React.Dispatch<boolean> }) => {\n\n    const { signData, data, refetch, isRemoveLoading, removeOwner } = useMultisig();\n\n    const dispatch = useDispatch()\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Delete Owner</div>\n        <div className=\"flex flex-col space-y-3\">\n            <div>\n                Review the owner\n            </div>\n            <div className=\"flex items-center space-x-2\">\n                <div>\n                    <Avatar className=\"bg-opacity-10 font-bold text-xs\" name=\"Ow\" />\n                </div>\n                <div className=\"flex flex-col\">\n                    <div>{name}</div>\n                    <div className=\"font-thin text-sm\">Address: {address.toLowerCase()}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"flex justify-center\">\n            <div className=\"grid grid-cols-1 gap-5 w-[35%] \">\n                <Button className=\"px-3 py-2 bg-red-500 hover:text-red-500 hover:bg-white hover:border-red-500\" isLoading={isRemoveLoading} onClick={async () => {\n                    try {\n                        await removeOwner(address)\n                        refetch()\n                        dispatch(changeSuccess({activate: true, text: \"Successfully\"}))\n                        onDisable(false)\n                    } catch (error: any) {\n                        console.error(error)\n                        dispatch(changeError({ activate: true, text: error?.data?.message }))\n                        onDisable(false)\n                    }\n                }}>\n                    Delete\n                </Button>\n            </div>\n        </div>\n    </div>\n\n\n\n}\n\nexport default RemoveOwner;","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Dropdown } from \"../..\";\nimport useMultisig from \"../../../hooks/useMultisig\";\nimport { changeError, changeSuccess } from \"../../../redux/reducers/notificationSlice\";\nimport { DropDownItem } from \"../../../types\";\nimport Button from \"../../button\";\n\n\nconst ChangeTreshold = ({ onDisable }: { onDisable: React.Dispatch<boolean> }) => {\n\n    const { signData, data, isChangeSignLoading, changeSigns, refetch } = useMultisig()\n\n    const [sign, setSign] = useState<DropDownItem>({ name: (signData?.executinTransactions.toString() ?? \"1\"), address: '' })\n    const [internalSign, setInternalSign] = useState<DropDownItem>({ name: (signData?.changingMultiSigProperties.toString() ?? \"1\"), address: '' })\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (signData?.executinTransactions) {\n            setSign({ name: (signData?.executinTransactions.toString() ?? \"1\"), address: '' })\n        }\n        if (signData?.changingMultiSigProperties) {\n            setInternalSign({ name: (signData?.changingMultiSigProperties.toString() ?? \"1\"), address: '' })\n        }\n    }, [signData])\n\n    if (!data) return <div className=\"text-center\">Select a MultiSig account</div>\n\n    return <div className=\"-my-5 flex flex-col space-y-7\">\n        <div className=\"font-bold text-xl\">Replace Owner</div>\n        <div className=\"flex flex-col space-y-3\">\n            <span>Any transaction requires the confirmation of: </span>\n            <div className=\"flex items-center gap-x-3\">\n                <Dropdown onSelect={setSign} className=\"px-3 space-x-2\" nameActivation={true} list={Array(data.length).fill('').map((s, i) => ({ name: (i + 1).toString(), address: '' }))} selected={sign} /> out of {data.length} owners\n            </div>\n        </div>\n        <div className=\"flex flex-col space-y-3\">\n            <span>Signatures required to change MultiSig properties: </span>\n            <div className=\"flex items-center gap-x-3\">\n                <Dropdown onSelect={setInternalSign} className=\"px-3 space-x-2\" nameActivation={true} list={Array(data.length).fill('').map((s, i) => ({ name: (i + 1).toString(), address: '' }))} selected={internalSign} /> out of {data.length} owners\n            </div>\n        </div>\n        <div className=\"flex justify-center\">\n            <div className=\"grid grid-cols-1 gap-5 w-[30%] \">\n                <Button className=\"px-3 py-2\" isLoading={isChangeSignLoading} onClick={async () => {\n                    if (sign.name && internalSign.name) {\n                        try {\n                            await changeSigns(\n                                parseInt(sign.name),\n                                parseInt(internalSign.name)\n                            )\n                            refetch()\n                            dispatch(changeSuccess({ activate: true, text: \"Successfully\" }))\n                            onDisable(false)\n                        } catch (error: any) {\n                            console.error(error)\n                            dispatch(changeError({ activate: true, text: error?.data?.message }))\n                            onDisable(false)\n                        }\n                    }\n                }}>\n                    Save\n                </Button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default ChangeTreshold;","import { Dispatch } from \"react\";\nimport { useAppSelector } from \"../redux/hooks\";\nimport { selectErrorText } from \"../redux/reducers/notificationSlice\";\nimport Button from \"./button\";\n\n\nconst Error = ({ onClose }: { onClose: Dispatch<boolean> }) => {\n    const title = useAppSelector(selectErrorText)\n\n    return <div className=\"absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 z-[100]\">\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/icons/error.svg\" width=\"200\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{title}</div>\n        <Button className=\"px-16 py-4 font-bold\" onClick={() => onClose(false)}>\n            Close\n        </Button>\n    </div>\n}\n\n\nexport default Error;","import { Dispatch } from \"react\";\nimport { useAppSelector } from \"../redux/hooks\";\nimport { selectSuccessText } from \"../redux/reducers/notificationSlice\";\nimport Button from \"./button\";\n\nconst Success = ({ onClose, className, onAction }: { onClose: Dispatch<boolean>, className?: string, onAction?: () => void }) => {\n    const title = useAppSelector(selectSuccessText)\n\n    return <div className={`absolute flex flex-col top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-10 py-5 shadow-xl gap-8 z-[100] ${className}`}>\n        <div className=\"flex justify-center relative\">\n            <div className=\"absolute -right-7 top-1 cursor-pointer text-gray-400\" onClick={() => onClose(false)}>X</div>\n            <img src=\"/success.svg\" alt=\"\" />\n        </div>\n        <div className=\"flex justify-center\">{title}</div>\n        <Button className=\"px-16 py-4 font-bold\" onClick={() => { if (onAction) onAction(); onClose(false); }}>\n            Close\n        </Button>\n    </div>\n}\n\n\nexport default Success;","import React, { Dispatch, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { generate } from 'shortid';\nimport { useCreateAddressMutation, useGetMultisigAddressesQuery } from '../../redux/api';\nimport { changeError, changeSuccess } from '../../redux/reducers/notificationSlice';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport Button from '../button';\n\nexport default function Create({setCreateModal}:{setCreateModal: Dispatch<boolean>}) {\n\n    const [createMultisig, { isLoading: createLoading }] = useCreateAddressMutation()\n    const { data, refetch, isFetching } = useGetMultisigAddressesQuery()\n\n\n    const [ownerAmount, setOwnerAmount] = useState(1)\n    const storage = useSelector(selectStorage)\n    const owners = useRef<string[]>([])\n\n    const [sign, setSign] = useState<number | undefined>(1)\n    const [internalSign, setInternalSign] = useState<number | undefined>(1)\n    const dispatch = useDispatch()\n\n\n    const createClick = async () => {\n        if (sign && internalSign && owners.current.length+1 >= sign && owners.current.length+1 >= internalSign ) {\n            try {\n                const res = await createMultisig({\n                    phrase: storage!.encryptedPhrase,\n                    owners: owners.current,\n                    required: sign,\n                    internalRequired: internalSign\n                }).unwrap()\n                refetch()\n                dispatch(changeSuccess({activate: true, text: \"Successfully\"}))\n                // dispatch(changeAccount(res.multiSigAddress.address))\n                setCreateModal(false)\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: (error?.data?.message || \"Something went wrong\") }))\n                setCreateModal(false)\n            }\n        }\n    }\n\n    return <div className=\"flex flex-col gap-4 mt-[-2rem]\">\n        <div className=\"text-center font-semibold\">Create MultiSig Account</div>\n        <div className=\"flex flex-col overflow-y-auto max-h-[75vh] space-y-5\">\n            <span className=\"text-black opacity-35 pl-3\">Owners</span>\n            <div className=\"w-full\">\n                <input type=\"text\" className=\"border p-3 rounded-md border-black outline-none w-full text-greylish\" value={storage!.accountAddress} disabled />\n            </div>\n            {\n                Array(ownerAmount).fill(' ').map((e, i) => {\n                    return <div className=\"w-full\" key={generate()}>\n                        <input type=\"text\" onChange={(e) => { owners.current[i] = e.target.value }} className=\"border p-3 rounded-md border-black outline-none w-full\" placeholder=\"0xabc...\" />\n                    </div>\n                })\n            }\n            <div className=\"cursor-pointer text-center text-greylish opacity-80 px-3\" onClick={() => { setOwnerAmount(ownerAmount + 1) }}>+ Add Owner</div>\n            <div className=\"flex flex-col space-y-8\">\n                <div>\n                    <span className=\"text-greylish opacity-35 pl-3\">Signatures required to execute TXs</span>\n                    <input type=\"text\" className=\"border p-3 rounded-md border-black outline-none w-full\" value={sign} onChange={(e) => { if (!isNaN(+e.target.value)) setSign(+e.target.value || undefined) }} />\n                </div>\n                <div>\n                    <span className=\"text-greylish opacity-35 pl-3\">Signatures required to change MultiSig properties</span>\n                    <input type=\"text\" className=\"border p-3 rounded-md border-black outline-none w-full\" value={internalSign} onChange={(e) => { if (!isNaN(+e.target.value)) setInternalSign(+e.target.value || undefined) }} />\n\n                </div>\n            </div>\n            <div className=\"text-center\">\n                <Button className=\"px-10 py-2\" onClick={createClick} isLoading={createLoading}>\n                    Create\n                </Button>\n            </div>\n        </div>\n    </div>\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { Dropdown } from '../../components';\nimport Siderbarlist from '../../components/dashboard/sidebarlist'\nimport Error from '../../components/error';\nimport Modal from '../../components/modal';\nimport Success from '../../components/success';\nimport { useCreateAddressMutation, useGetMultisigAddressesQuery, useImportAddressMutation } from '../../redux/api';\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice';\nimport { changeAccount, SelectSelectedAccount } from '../../redux/reducers/selectedAccount';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { DropDownItem } from '../../types';\nimport { generate } from 'shortid'\nimport Create from '../../components/multisig/create';\nimport Button from '../../components/button';\n\nconst Sidebar = () => {\n\n    const { data, refetch, isFetching } = useGetMultisigAddressesQuery()\n    const [importMultisig, { isLoading }] = useImportAddressMutation()\n\n\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n\n    const dispatch = useDispatch()\n    const isSuccess = useSelector(selectSuccess)\n    const isError = useSelector(selectError)\n\n    const [isAccountModal, setAccountModal] = useState(false)\n    const [isImportModal, setImportModal] = useState(false)\n    const [isCreateModal, setCreateModal] = useState(false)\n\n\n\n    const importInputRef = useRef<HTMLInputElement>(null)\n\n    const [selectedItem, setItem] = useState<DropDownItem>({ name: storage!.accountAddress === selectedAccount ? \"Wallet\" : \"Multisig\", address: selectedAccount })\n\n    const importClick = async () => {\n        if (importInputRef.current && importInputRef.current.value) {\n            try {\n                const res = await importMultisig({\n                    multisigAddress: importInputRef.current.value\n                }).unwrap()\n                refetch()\n                dispatch(changeSuccess({ activate: true, text: \"Successfully imported\" }))\n                // dispatch(changeAccount(res.result.address))\n                setImportModal(false)\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: (error?.data?.message || \"Something went wrong\") }))\n                setImportModal(false)\n            }\n        }\n    }\n\n\n\n    const [list, setList] = useState<DropDownItem[]>([\n        { name: \"Remox\", address: storage!.accountAddress },\n        { name: \"+ Multisig Account\", address: \"\", onClick: () => { setAccountModal(true) } },\n    ])\n\n    useEffect(() => {\n        if (data) {\n            setList([list[0], ...data.addresses.map((e, i) => ({ name: `MultiSig ${i + 1}`, address: e.address })), { name: \"+ Multisig Account\", address: \"\", onClick: () => { setAccountModal(true) } }])\n        }\n    }, [data])\n\n\n\n    return <div className=\"flex flex-col gap-14 pl-4 lg:pl-10\">\n        <div>\n            <Dropdown list={list} selected={selectedItem} onSelect={(w) => {\n                if (w.address) {\n                    setItem(w)\n                    dispatch(changeAccount(w.address))\n                }\n            }} />\n        </div>\n        <div>\n            <Siderbarlist />\n        </div>\n        {isAccountModal && <Modal onDisable={setAccountModal}>\n            <div className=\"flex flex-col gap-4 mt-[-2rem]\">\n                <div className=\"text-center font-semibold\">Multi-Signature Account</div>\n                <div className=\"flex space-x-3 border border-black px-5 py-2 rounded-md cursor-pointer items-center\" onClick={() => {\n                    setCreateModal(true)\n                    setAccountModal(false)\n                }}>\n                    <img src=\"/icons/teamicon.svg\" alt=\"\" />\n                    <span>Create Multisig Account</span>\n                </div>\n                <div className=\"flex space-x-3 border border-black px-5 py-2 rounded-md cursor-pointer items-center\" onClick={() => {\n                    setImportModal(true)\n                    setAccountModal(false)\n                }}>\n                    <img src=\"/icons/teamicon.svg\" alt=\"\" />\n                    <span>Import Multisig Account</span>\n                </div>\n            </div>\n        </Modal>}\n        {isImportModal && <Modal onDisable={setImportModal}>\n            <div className=\"flex flex-col gap-4 mt-[-2rem]\">\n                <div className=\"text-center font-semibold\">Import MultiSig Account</div>\n                <div className=\"flex flex-col\">\n                    <span className=\"text-greylish opacity-35 pl-3\">MultiSig Address</span>\n                    <input ref={importInputRef} type=\"text\" className=\"border p-3 rounded-md border-black\" placeholder=\"0xabc...\" />\n                </div>\n                <div className=\"flex justify-center\">\n                    <Button className=\"px-10 py-2\" onClick={importClick} isLoading={isLoading}>\n                        Import\n                    </Button>\n                </div>\n            </div>\n        </Modal>}\n        {\n            isCreateModal && <Modal onDisable={setCreateModal}>\n                <Create setCreateModal={setCreateModal} />\n            </Modal>\n        }\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess({ activate: val }))} />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n\n}\n\nexport default Sidebar;","import { useAppDispatch } from \"../../redux/hooks\"\nimport { setMenu } from \"../../redux/reducers/toggles\"\nimport {motion} from 'framer-motion'\nimport { useEffect } from \"react\"\n\n\nconst MobileMenu = ({ children }: { children: JSX.Element | JSX.Element[] | string }) => {\n    const dispatch = useAppDispatch()\n    useEffect(() => {\n        document.querySelector('body')!.style.overflowY = \"hidden\"\n        document.querySelector('body')!.style.height = \"100vh\"\n        return () => {\n            document.querySelector('body')!.style.overflowY = \"\"\n            document.querySelector('body')!.style.height = \"auto\"\n        }\n    }, [])\n    return <>\n        <div className=\"absolute w-screen h-screen z-50 bg-white bg-opacity-60\" onClick={()=>{\n            dispatch(setMenu(false))\n        }}></div>\n        <motion.div initial={{x: -500}} animate={{x: 0}} transition={{type: 'tween'}} exit={{x: -500}} className=\"w-[50vw] fixed -translate-x-50 h-full bg-white z-[100] border-r-2\">\n            <div className=\"h-full flex flex-col items-center justify-center\">\n                {children}\n            </div>\n        </motion.div>\n    </>\n}\n\nexport default MobileMenu","import Navbar, { NavbarDropdown } from '../../layouts/dashboard/navbar'\nimport Sidebar from '../../layouts/dashboard/sidebar';\nimport MobileMenu from '../../layouts/dashboard/mobileMenu'\nimport Siderbarlist from '../../components/dashboard/sidebarlist'\nimport { useAppSelector } from '../../redux/hooks';\nimport { selectToggle } from '../../redux/reducers/toggles';\nimport { AnimatePresence } from 'framer-motion';\nimport { IoMdNotificationsOutline } from 'react-icons/io';\nimport { selectStorage } from '../../redux/reducers/storage';\nimport { ClipLoader } from 'react-spinners';\nimport NotificationCointainer from '../../components/notification';\nimport Visitcard from '../../components/dashboard/visitcard';\nimport { Outlet } from 'react-router-dom'\n\nconst Dashboard = ({ children }: { children?: JSX.Element | JSX.Element[] }) => {\n    const toggle = useAppSelector(selectToggle)\n    const storage = useAppSelector(selectStorage)\n\n    return <>\n        <AnimatePresence>\n            {toggle.mobileMenu &&\n                <MobileMenu>\n                    <div className=\"flex flex-col space-y-10 px-10\">\n                        <div className=\"actions flex flex-col items-center justify-evenly space-y-5\">\n                            {storage ? <Visitcard name=\"Remox\" address={storage.accountAddress} /> : <ClipLoader />}\n                            <NavbarDropdown />\n                            <div className=\"relative\">\n                                <NotificationCointainer />\n                            </div>\n                        </div>\n                        <Siderbarlist />\n                    </div>\n                </MobileMenu>\n            }\n        </AnimatePresence>\n        <div className=\"flex flex-col pt-6 gap-16\">\n            <Navbar></Navbar>\n            <div className=\"grid grid-cols-2 md:grid-cols-11 md:gap-12\">\n                <div className=\"hidden md:block md:col-span-2\"><Sidebar /></div>\n                <div className=\"col-span-11 md:col-span-8 pl-2 md:pl-7 pr-2\">\n                    <Outlet />\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Dashboard;","import { csv } from 'd3-fetch'\n\nclass CSV {\n    static async Import(file: File): Promise<string[][]> {\n        return new Promise(async (resolve, reject) => {\n\n            const url = URL.createObjectURL(file)\n\n            const res = await csv(url)\n            if (res) {\n                if (res.columns[0].toLowerCase().includes(\"name;address;amount;coin;amount2;coin2\")) {\n                    const result: string[][] = []\n                    for (let index = 0; index < res.length; index++) {\n                        const data = Object.values(res[index])[0]?.split(';')\n                        if (data && data.length > 0) {\n                            result.push(data)\n                        }else{\n                            reject(new Error(`Row is null`))\n                        }\n                    }\n                    resolve(result)\n                } else {\n                    reject(new Error(\"Columns are invalid. Please, set the column order like that: Name Address Amount Coin\"))\n                }\n            } else {\n                reject(new Error(`Cannot import an empty file`))\n            }\n        })\n    }\n}\n\nexport default CSV;","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"../../components/dropdown\";\nimport { generate } from 'shortid'\nimport { useNavigate } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { MultipleTransactionData } from \"../../types/sdk\";\nimport CSV from '../../utility/CSV'\nimport { useGetBalanceQuery, useSendCeloMutation, useSendStableTokenMutation, useSendMultipleTransactionsMutation, useSendAltTokenMutation, useSubmitTransactionsMutation, useGetConvertableTokenAmountMutation } from \"../../redux/api\";\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport Input from \"../../components/pay/payinput\";\nimport { AltCoins, AltcoinsList, Coins, CoinsNameVisual, StableTokens, TransactionFeeTokenName } from \"../../types/coins\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\nimport { useRefetchData } from \"../../hooks\";\nimport Button from \"../../components/button\";\n\n\nconst Pay = () => {\n\n    const storage = useSelector(selectStorage)\n    const selectedAccount = useSelector(SelectSelectedAccount)\n    const isError = useSelector(selectError)\n    const dispatch = useAppDispatch()\n    const router = useNavigate();\n\n    //const [tokenAmount] = useGetConvertableTokenAmountMutation()\n\n    const balance = useSelector(SelectBalances)\n\n    const [fetching] = useRefetchData(true)\n\n    // const { data, refetch } = useGetBalanceQuery()\n\n\n    const [sendCelo] = useSendCeloMutation()\n    const [sendStableToken] = useSendStableTokenMutation()\n    const [sendMultiple] = useSendMultipleTransactionsMutation()\n    const [sendAltcoin] = useSendAltTokenMutation()\n\n    const [sendMultisig] = useSubmitTransactionsMutation()\n\n\n    const [index, setIndex] = useState(1)\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n    const [selectedType, setSelectedType] = useState(false)\n\n\n    const [amountState, setAmountState] = useState<number[]>([])\n    const uniqueRef = useRef<string[]>([generate(), generate()])\n    const nameRef = useRef<Array<string>>([])\n    const addressRef = useRef<Array<string>>([])\n    const [wallets, setWallets] = useState<DropDownItem[]>([])\n    const amountRef = useRef<Array<string>>([])\n\n    const [refreshPage, setRefreshPage] = useState<string>(\"\")\n\n    const [csvImport, setCsvImport] = useState<string[][]>([]);\n\n    const fileInput = useRef<HTMLInputElement>(null);\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n    const reset = () => {\n        nameRef.current = []\n        addressRef.current = []\n        amountRef.current = []\n        uniqueRef.current = []\n        //setAmountState([])\n        //setWallets([]);\n    }\n\n    useEffect(() => {\n        fetching()\n    }, [])\n\n\n    useEffect(() => {\n        if (csvImport.length > 0) {\n            const list = csvImport.filter(w => w[1] && w[2] && w[3] && w[4] && w[5])\n            reset()\n            let ind = 0;\n            const wllt: any[] = []\n            const amm: number[] = []\n            for (let index = 0; index < list.length; index++) {\n                const [name, address, amount, coin, amount2, coin2] = list[index].slice(0, 6)\n\n                uniqueRef.current.push(generate())\n                uniqueRef.current.push(generate())\n                nameRef.current.push((name || \"\"));\n                addressRef.current.push((address || \"\"));\n                amountRef.current.push((amount || \"\"));\n                amm.push(parseFloat(amount || \"0\"))\n                nameRef.current.push((name || \"\"));\n                addressRef.current.push((address || \"\"));\n                amountRef.current.push((amount2 || \"\"));\n                amm.push(parseFloat(amount2 || \"0\"))\n\n                const a = { ...Coins[coin as TransactionFeeTokenName], type: Coins[coin as TransactionFeeTokenName].value };\n                const b = { ...Coins[coin2 as TransactionFeeTokenName], type: Coins[coin2 as TransactionFeeTokenName].value };\n                const wallet = [a, b];\n                wllt.push(...wallet)\n                setAmountState(amm)\n\n            }\n            setIndex((index === 1 ? 0 : index) + list.length)\n            setWallets(wllt)\n            // setRefreshPage(generate())\n            fileInput.current!.files = new DataTransfer().files;\n        }\n    }, [csvImport])\n\n\n    useEffect(() => {\n        if (balance && balance.CELO) {\n            const coins = Object.values(balance).map((coin: IBalanceItem) => ({\n                name: `${coin.amount.toFixed(3)} ${coin.coins.name}`,\n                type: coin.coins.value.toString(),\n                amount: coin.amount.toString(),\n                coinUrl: coin.coins.coinUrl,\n            }))\n            const v = { name: coins[0].name.split(' ')[1], coinUrl: coins[0].coinUrl, type: coins[0].type }\n            setWallets([{ ...v }, { ...v }])\n            setSelectedWallet(coins[0])\n            setList(coins)\n        }\n    }, [balance])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        setIsPaying(true)\n\n        try {\n            const result: Array<MultipleTransactionData> = []\n\n            const [nameList, addressList, amountList] = [nameRef.current, addressRef.current, amountRef.current]\n\n\n            for (let index = 0; index < addressList.length; index++) {\n                if (addressList[index] && amountList[index] && wallets[index].type) {\n                    let amount = amountList[index];\n                    if (selectedType) {\n                        let value = (balance[wallets[index].name as keyof typeof balance]?.tokenPrice ?? 1)\n                        amount = (parseFloat(amount) / value).toFixed(4)\n                    }\n                    result.push({\n                        toAddress: addressList[index],\n                        amount: amount,\n                        tokenType: wallets[index].type!,\n                    })\n                }\n            }\n\n            if (storage!.accountAddress.toLowerCase() === selectedAccount.toLowerCase()) {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    if (result[0]!.tokenType === Coins.celo.value) {\n                        await sendCelo({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            comment: \"\",\n                            phrase: storage!.encryptedPhrase\n                        }).unwrap()\n\n                    } else if (result[0]!.tokenType === CoinsNameVisual.cUSD || result[0]!.tokenType === CoinsNameVisual.cEUR) {\n                        await sendStableToken({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            stableTokenType: result[0].tokenType === CoinsNameVisual.cUSD ? 'cUSD' as StableTokens : 'cEUR' as StableTokens\n                        }).unwrap()\n                    } else {\n                        await sendAltcoin({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            altTokenType: AltcoinsList[(result[0].tokenType as AltcoinsList)]\n                        }).unwrap()\n                    }\n                }\n                else if (result.length > 1) {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    await sendMultiple({\n                        multipleAddresses: arr,\n                        phrase: storage!.encryptedPhrase\n                    }).unwrap()\n                }\n            } else {\n                if (result.length === 1 && selectedWallet && selectedWallet.name) {\n                    await sendMultisig({\n                        toAddress: result[0].toAddress,\n                        multisigAddress: selectedAccount,\n                        phrase: storage!.encryptedPhrase,\n                        tokenType: result[0].tokenType,\n                        value: result[0].amount,\n                    }).unwrap()\n\n                }\n                else if (result.length > 1) {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    for (let i = 0; i < arr.length; i++) {\n                        await sendMultisig({\n                            toAddress: arr[i].toAddress,\n                            multisigAddress: selectedAccount,\n                            phrase: storage!.encryptedPhrase,\n                            tokenType: arr[i].tokenType,\n                            value: arr[i].amount,\n                        }).unwrap()\n                    }\n                }\n            }\n            setSuccess(true);\n            //refetch()\n            fetching()\n\n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n        setIsPaying(false);\n    }\n\n    return <div className=\"sm:px-32\">\n        <form onSubmit={Submit}>\n            <div className=\"sm:flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"sm:min-w-[85vw] min-h-[75vh] h-auto \">\n                    <div className=\"pl-14 py-2 text-left w-full\">\n                        <div className=\"text-xl font-semibold\">Pay Someone</div>\n                    </div>\n                    <div className=\"shadow-xl border sm:flex flex-col gap-3 gap-y-10 sm:gap-10 py-10\">\n                        <div className=\"sm:flex flex-col pl-3 sm:pl-12 sm:pr-[20%] gap-3 gap-y-10  sm:gap-10\">\n                            <div className=\"flex flex-col space-y-5\">\n                                <span className=\"text-left text-sm font-semibold\">Payment Type</span>\n                                <div className=\"flex space-x-24\">\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"token\" onChange={(e) => setSelectedType(false)} checked={!selectedType} />\n                                        <label className=\"font-semibold text-sm\">\n                                            Pay with Token Amounts\n                                        </label>\n                                    </div>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"radio\" className=\"w-4 h-4 accent-[#ff501a] cursor-pointer\" name=\"paymentType\" value=\"fiat\" onChange={(e) => setSelectedType(true)} checked={selectedType} />\n                                        <label className=\"font-semibold text-sm\">\n                                            Pay with USD-based Amounts\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex space-x-5 sm:space-x-0 sm:justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold text-sm\">Paying To</span>\n\n                                    <input ref={fileInput} type=\"file\" className=\"hidden\" onChange={(e) => e.target.files!.length > 0 ? CSV.Import(e.target.files![0]).then(e => setCsvImport(e)).catch(e => console.error(e)) : null} />\n                                </div>\n                                <div className=\"grid grid-cols-4 sm:grid-cols-[25%,35%,35%,5%] gap-5\">\n                                    {wallets.length > 0 && index ? Array(index).fill(\" \").map((e, i) => {\n                                        if (!uniqueRef.current[i * 2]) {\n                                            uniqueRef.current[i * 2] = generate()\n                                            uniqueRef.current[i * 2 + 1] = generate()\n                                        }\n\n                                        return <Input key={uniqueRef.current[i * 2]} amountState={amountState} setAmount={setAmountState} setIndex={setIndex} overallIndex={index} uniqueArr={uniqueRef.current} index={i * 2} name={nameRef.current} address={addressRef.current} amount={amountRef.current} selectedWallet={wallets} setWallet={setWallets} setRefreshPage={setRefreshPage} isBasedOnDollar={selectedType} />\n                                    }) : <div><ClipLoader /></div>}\n                                </div>\n                            </div>\n                            <div className=\"py-5 sm:py-0 grid grid-cols-[65%,35%] gap-16\">\n                                <div className=\"grid grid-cols-2 gap-x-5 sm:grid-cols-3\">\n                                    <Button version=\"second\" className=\"min-w-[200px]\" onClick={() => {\n                                        setIndex(index + 1)\n                                    }}>\n                                        + Add More\n                                    </Button>\n                                    <Button version=\"second\" onClick={() => {\n                                        fileInput.current?.click()\n                                    }} className=\"min-w-[200px]\">\n                                        Import CSV\n                                    </Button>\n                                </div>\n                                <span className=\"self-center text-lg opacity-60\">Total: ${amountState.reduce((a, e, i) => {\n                                    if (!wallets[i].type) return a;\n                                    if (selectedType) return a + e;\n                                    return a + e * (balance[wallets[i].name as keyof typeof balance]?.tokenPrice ?? 1);\n                                }, 0).toFixed(2)}</span>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center pt-5 sm:pt-0\">\n                            <div className=\"flex flex-col-reverse sm:grid grid-cols-2 w-[200px] sm:w-[400px] justify-center gap-5\">\n                                <Button version=\"second\" onClick={() => router(-1)}>Close</Button>\n                                <Button type=\"submit\" className=\"bg-primary px-3 py-2 text-white flex items-center justify-center rounded-lg\" isLoading={isPaying}>Pay</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} onAction={() => { router(-1) }} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: val, text: '' }))} />}\n    </div>\n}\n\n\n\nexport default Pay;","import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectStorage } from \"../redux/reducers/storage\";\nimport Modal from \"../components/modal\";\nimport { useState } from \"react\";\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport Eth from '@ledgerhq/hw-app-eth'\nimport { CELO_BASE_DERIVATION_PATH } from '@celo/wallet-ledger'\nimport Button from \"../components/button\";\n\n\nconst Home = () => {\n    const storage = useSelector(selectStorage)\n\n    const [isModal, setModal] = useState(false)\n\n    return <>\n        <section className=\"flex justify-center items-center w-full h-screen\">\n            <div className=\"w-[800px] h-[600px] bg-[#eeeeee] bg-opacity-40 flex flex-col justify-center items-center gap-14\">\n                <div className=\"w-[200px] sm:w-[400px] flex flex-col items-center justify-center gap-10\">\n                    <img src=\"/logo.png\" alt=\"\" className=\"w-full\" />\n                    <span className=\"font-light text-greylish text-center\">All-in-One Tool For Crypto Treasury Management</span>\n                </div>\n                <div className=\"flex flex-col gap-5\">\n                    {/*  <button onClick={async () => { //67926\n\n                        const transport = await TransportWebUSB.create()\n                        const result = new Eth(transport)\n                  \n                        console.log(await result.getAddress(`44'/52752'/0'/0/0`))\n                        \n                        \n\n                    }}>\n                        Ledger\n                    </button> */}\n                    <Link to={storage ? { pathname: '/dashboard' } : { pathname: '/import' }} className=\"text-center\">\n                        <Button version=\"second\">Enter App</Button>\n                    </Link>\n                    <Link to=\"/create\" className=\"text-center\">\n                        <Button>Create Account</Button>\n                    </Link>\n                </div>\n            </div>\n        </section>\n        {isModal &&\n            <Modal onDisable={() => setModal(false)} >\n\n            </Modal>}\n    </>\n\n};\n\nexport default Home;","import { useState} from 'react'\nimport Header from '../layouts/home/header'\nimport Set from '../components/create/set'\nimport KeyPhrase from '../components/create/phrase'\nimport { PassDataFromSetToPhrase } from '../types/create'\n\nconst Create = () => {\n    const [data, setData] = useState<PassDataFromSetToPhrase>();\n\n    return <div className=\"h-screen w-full\">\n        <Header />\n        {!data ? <Set setData={setData} /> : <KeyPhrase data={data!} />}\n    </div>\n}\n\n\n\n\nexport default Create;","import PhraseBar from '../components/phraseBar';\nimport Header from '../layouts/home/header'\nimport { useRef, useState, useEffect } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { ClipLoader } from 'react-spinners';\nimport { selectStorage, setStorage } from '../redux/reducers/storage';\nimport { useUnlockMutation } from '../redux/api';\nimport { selectUnlock, setUnlock } from '../redux/reducers/unlock';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport Button from '../components/button';\n\nconst Unlock = () => {\n    const unlockState = useAppSelector(selectUnlock)\n    const storage = useAppSelector(selectStorage)\n\n    const [unlockApp, { isLoading }] = useUnlockMutation()\n\n    const dispatch = useAppDispatch();\n    const inputRef = useRef<HTMLInputElement>(null)\n    const location = useLocation()\n    const router = useNavigate()\n    const [incorrrect, setIncorrect] = useState(false)\n\n    useEffect(() => {\n        if (!storage) router('/')\n    }, [unlockState, location, storage])\n\n    const Submit = async () => {\n        if (inputRef.current && storage?.accountAddress) {\n            setIncorrect(false);\n\n            try {\n                const data = await unlockApp({\n                    password: inputRef.current.value.trim(),\n                    address: storage.accountAddress\n                }).unwrap()\n\n                dispatch(setStorage(JSON.stringify({ ...storage, token: data!.token })))\n\n                dispatch(setUnlock(true))\n                router('/dashboard');\n            } catch (error) {\n                setIncorrect(true);\n                console.error(error)\n            }\n        }\n    }\n\n    return <>\n        <Header />\n        <section className=\"flex flex-col justify-center items-center h-screen gap-8\">\n            <h2 className=\"text-3xl text-primary\">Unlock Your Wallet</h2>\n            <div className=\"flex flex-col gap-3\">\n                <div>Public Address</div>\n                {storage && <PhraseBar address={storage.accountAddress} scanIcon={false} />}\n            </div>\n            <div className=\"flex flex-col gap-4\">\n                <div>Enter your password to unlock your wallet</div>\n                <div className=\"flex justify-center\"><input onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                        Submit()\n                    }\n                }} ref={inputRef} type=\"password\" autoComplete='new-password' autoFocus className=\"bg-greylish bg-opacity-10 px-3 py-2 rounded-lg outline-none\" /></div>\n                {incorrrect && <div className=\"text-red-600 text-center\">Password is Incorrect</div>}\n                <div className=\"flex justify-center\">\n                    <Button onClick={Submit} className=\"px-5 py-2\" isLoading={isLoading}>Unlock</Button>\n                </div>\n            </div>\n        </section>\n    </>\n}\n\n\nexport default Unlock;","import { Dropdown } from \"../../components\";\nimport { Coins } from \"../../types/coins\";\nimport { DropDownItem } from '../../types'\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useGetConvertableTokenAmountMutation, useSwapCoinsMutation } from \"../../redux/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SelectBalances } from \"../../redux/reducers/currencies\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { changeError, changeSuccess, selectError, selectSuccess } from \"../../redux/reducers/notificationSlice\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { ClipLoader } from \"react-spinners\";\nimport Modal from \"../../components/modal\";\nimport { useRefetchData, useModalSideExit } from '../../hooks';\nimport useMultisig from \"../../hooks/useMultisig\";\nimport Button from \"../../components/button\";\n\nconst Swap = () => {\n    const [token1, setToken1] = useState<DropDownItem>(Coins.cUSD)\n    const [token1Amount, setToken1Amount] = useState<number>()\n    const [token2, setToken2] = useState<DropDownItem>(Coins.celo)\n\n    const { isMultisig } = useMultisig()\n\n    const [refetch] = useRefetchData()\n\n    const token1Input = useRef<HTMLInputElement>(null)\n\n    const [appAmount, setAppAmount] = useState<string>(\"0\")\n    const [fee, setFee] = useState<string>(\"\")\n    const [oneCoinPrice, setOneCoinPrice] = useState<string>(\"\")\n\n    const [isOpen, setOpen] = useState<boolean>(false)\n    const [isSetting, setSetting] = useState<boolean>(false)\n\n    const [slippageArr, setSlippageArr] = useState([\n        { value: 1, label: '0,1%', selected: false },\n        { value: 5, label: '0,5%', selected: true },\n        { value: 10, label: '1%', selected: false },\n        { value: 0, label: '0%', selected: false, invisible: true }\n    ])\n\n    const [deadline, setDeadline] = useState<number>(1.5)\n\n    const balances = useSelector(SelectBalances)\n    const storage = useSelector(selectStorage)\n    const isSuccess = useSelector(selectSuccess)\n    const isError = useSelector(selectError)\n\n    const dispatch = useDispatch()\n\n    const [fetchCoin, { isLoading: coinLoading }] = useGetConvertableTokenAmountMutation()\n    const [swap, { isLoading }] = useSwapCoinsMutation()\n\n    const change = async (value?: number) => {\n        if (token1.value && token2.value) {\n            try {\n                const data = await fetchCoin({\n                    input: token1.value,\n                    output: token2.value,\n                    amount: (value || (token1Amount ?? 0)).toString(),\n                    slippage: slippageArr.find(item => item.selected)!.value.toString(),\n                    deadline: Math.floor(deadline * 60)\n                }).unwrap()\n                setAppAmount(data.minimumAmountOut)\n                setFee(data.feeAmount)\n                setOneCoinPrice(data.oneTokenValue)\n            } catch (error) {\n                console.error(error)\n            }\n\n        }\n    }\n\n    const startSwap = async () => {\n        if (token1.value && token2.value && token1Amount && token1Amount > 0) {\n            try {\n                const data = await swap({\n                    input: token1.value,\n                    output: token2.value,\n                    amount: token1Amount.toString(),\n                    phrase: storage!.encryptedPhrase,\n                    slippage: slippageArr.find(item => item.selected)!.value.toString(),\n                    deadline: Math.floor(deadline * 60)\n                }).unwrap()\n                dispatch(changeSuccess({\n                    activate: true, text: <div className=\"flex flex-col items-center\">\n                        <div className=\"font-semobold text-xl\">Successfully Swapped</div>\n                        <div className=\"text-primary text-sm font-semibold\" onClick={() => window.open(`https://explorer.celo.org/tx/${data.hash}/token-transfers`, '_blank')} > View on Celo Explorer</div>\n                    </div>\n                }))\n                setOpen(false)\n                refetch()\n            } catch (error) {\n                console.error(error)\n                dispatch(changeError({ activate: true }))\n            }\n\n        }\n    }\n\n    useEffect(() => {\n        if (token1 && token2) {\n            change()\n        }\n    }, [token1, token2, token1Amount])\n\n    const settingRef = useModalSideExit(isSetting, setSetting)\n\n\n    const changeSwap = () => {\n        const token1_copy = { ...token1 }\n        const token2_copy = { ...token2 }\n        const token2_amount = parseFloat(appAmount)\n        setToken1(token2_copy)\n        setToken2(token1_copy)\n\n        setToken1Amount(parseFloat(token2_amount.toFixed(2)))\n    }\n\n    if (isMultisig) return <div className=\"text-center py-2\">We are working on bringing Swap into MultiSig account. Please, select a wallet account until we finish it</div>\n\n    return <div className=\"flex items-center justify-center\">\n        <div className=\"flex flex-col w-[50%]\">\n            <div className=\"shadow-custom rounded-xl bg-white pt-3 pb-10 px-3 flex flex-col space-y-1\">\n                <div className=\"flex justify-between\">\n                    <div className=\"font-bold font-xl pb-2\">Swap</div>\n                    <div className=\"relative\">\n                        <img src=\"/icons/settings.svg\" className=\"cursor-pointer\" onClick={() => setSetting(!isSetting)} />\n                        {isSetting && <div ref={settingRef} className=\"absolute z-[300] shadow-custom bg-white rounded-xl min-w-[250px] left-0 translate-x-[-90%] bottom-0 translate-y-full p-3 text-sm\">\n                            <div className=\"flex flex-col space-y-4\">\n                                <div className=\"font-bold\">Transaction Settings</div>\n                                <div className=\"flex flex-col space-y-3\">\n                                    <div>Slippage tolerance</div>\n                                    <div className=\"flex space-x-1 px-2\">\n                                        {slippageArr.filter(s => !s.invisible).map((item, index) => <div key={index} onClick={() => {\n                                            const arr = [...slippageArr]\n                                            arr.forEach(i => i.selected = false)\n                                            arr[index].selected = true\n                                            setSlippageArr(arr)\n                                        }} className={`${item.selected ? \"bg-primary bg-opacity-100 text-white\" : \"\"} px-2 py-1 bg-greylish bg-opacity-10 cursor-pointer rounded-xl`}>{item.label}</div>)}\n                                        <div className=\"bg-greylish bg-opacity-10 rounded-xl flex items-center pl-3 pr-5 space-x-1\">\n                                            <input placeholder=\"0.5\" type=\"number\" value={((slippageArr.at(-1)!.value / 10) || undefined)} className=\"outline-none text-right bg-transparent max-w-[50px] unvisibleArrow\" min={0} step={\"any\"} max={100} onChange={(event) => {\n                                                const value = (event.target as HTMLInputElement).value\n                                                if (parseFloat(value) >= 0) {\n                                                    setSlippageArr(slippageArr.map((item, index) => {\n                                                        if (index === slippageArr.length - 1) {\n                                                            item.selected = true\n                                                            item.value = Math.max(0, Math.min(100, parseFloat(value))) * 10\n                                                        } else item.selected = false\n                                                        return item\n                                                    }))\n                                                } else if (!value || value === \"0\") {\n                                                    setSlippageArr(slippageArr.map((item, index) => {\n                                                        if (index === slippageArr.length - 1) {\n                                                            item.selected = false\n                                                            item.value = 0\n                                                        } else if (index == 1) { item.selected = true } else item.selected = false\n                                                        return item\n                                                    }))\n                                                }\n                                            }} />\n                                            <span>%</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"flex flex-col space-y-3\">\n                                    <div>Transaction deadline</div>\n                                    <div className=\"flex space-x-1 px-2 items-center\">\n                                        <input type=\"number\" value={deadline === 1.5 ? undefined : deadline} onChange={(event) => {\n                                            const value = (event.target as HTMLInputElement).value\n                                            if (value) {\n                                                setDeadline(parseFloat(value))\n                                            } else setDeadline(1.5)\n                                        }} className=\"bg-greylish bg-opacity-10 rounded-xl py-1 w-[100px] outline-none px-2 text-right unvisibleArrow\" placeholder=\"1.5\" />\n                                        <div>minutes</div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n                <div className=\"bg-greylish bg-opacity-10 items-center flex justify-between rounded-md py-3 px-3\">\n                    <div className=\"flex flex-col space-y-2 w-[130px]\">\n                        <div>\n                            <Dropdown onChange={(w: DropDownItem, selected: DropDownItem) => {\n                                if (w.value === token2.value) {\n                                    setToken2(selected)\n                                }\n                            }} parentClass=\"shadow-custom bg-white rounded-md\" onSelect={setToken1} className=\"border-none py-1 space-x-4 text-sm\" nameActivation={true} selected={token1} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, value: w.value, coinUrl: w.coinUrl, feeName: w.feeName, id: w.value, className: \"text-sm\" }))} />\n                        </div>\n                        <div>\n                            <input ref={token1Input} value={token1Amount} onChange={async (e) => { setToken1Amount(parseFloat((e.target.value))); await change(parseFloat((e.target.value))); }} type=\"number\" className=\"bg-transparent text-center outline-none unvisibleArrow max-w-[130px]\" placeholder=\"0\" min=\"0\" step=\"any\" />\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col space-y-2 items-end\">\n                        <div>\n                            Balance: {token1 && token1.name && balances[token1.name as keyof typeof balances] ? (balances[token1.name as keyof typeof balances]?.amount.toFixed(2) ?? 0) : 0}\n                        </div>\n                        <div className=\"flex space-x-2\">\n                            <button className=\"shadow-custom bg-white px-2 py-1 rounded-xl text-xs\" onClick={\n                                () => {\n                                    if (balances && token1 && balances[token1.name as keyof typeof balances] && balances[token1.name as keyof typeof balances]!.amount > 0) {\n                                        const amount = balances[token1.name as keyof typeof balances]!.amount * 0.5\n                                        token1Input.current!.value = amount.toFixed(2)\n                                        setToken1Amount(amount)\n                                    }\n                                }\n                            }>\n                                50%\n                            </button>\n                            <button className=\"shadow-custom bg-white px-2 py-1 rounded-xl text-xs\" onClick={() => {\n                                if (balances && token1 && balances[token1.name as keyof typeof balances] && balances[token1.name as keyof typeof balances]!.amount > 0) {\n                                    const amount = balances[token1.name as keyof typeof balances]!.amount\n                                    token1Input.current!.value = amount.toFixed(2)\n                                    setToken1Amount(amount)\n                                }\n                            }}>\n                                MAX\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex items-center justify-center\">\n                    <div className=\"bg-greylish bg-opacity-10 px-3 py-1 rounded-lg cursor-pointer\" onClick={changeSwap}>\n                        <img src=\"/icons/arrowdown.svg\" alt=\"\" />\n                    </div>\n                </div>\n                <div className=\"flex bg-greylish bg-opacity-10 justify-between rounded-md py-3 px-3\">\n                    <div className=\"flex flex-col space-y-2 w-[130px]\">\n                        <div>\n                            <Dropdown onChange={(w: DropDownItem, selected: DropDownItem) => {\n                                if (w.value === token1.value) {\n                                    setToken1(selected)\n                                }\n                            }} parentClass=\"shadow-custom bg-white rounded-md\" onSelect={setToken2} className=\"border-none py-1 space-x-4 text-sm\" nameActivation={true} selected={token2} list={Object.values(Coins).map(w => ({ name: w.name, type: w.value, value: w.value, feeName: w.feeName, coinUrl: w.coinUrl, id: w.value, className: \"text-sm\" }))} />\n                        </div>\n                        <div>\n                            {!(!token1Amount) && (!coinLoading ?\n                                <>\n                                    <div className=\"text-center outline-none unvisibleArrow\">\n                                        {parseFloat(appAmount).toFixed(2)}\n                                    </div>\n                                </> : <div className=\"text-center\"><ClipLoader size=\"24px\" /></div>)\n                            }\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col items-end h-full\">\n                        <div className=\"text-right outline-none unvisibleArrow\">\n                            Balance: {token2 && token2.name && balances[token2.name as keyof typeof balances] ? (balances[token2.name as keyof typeof balances]?.amount.toFixed(2) ?? 0) : 0}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"px-8 py-3 font-extralight text-sm\">\n                <div className=\"flex justify-between\">\n                    <div>Rate:</div>\n                    <div className=\"flex\">1 {token1.name} = {!coinLoading ? parseFloat(oneCoinPrice).toFixed(2) : <div className=\"px-3\"><ClipLoader size={18} /></div>} {token2.name}</div>\n                </div>\n                <div className=\"flex justify-between\">\n                    <div>Fee:</div>\n                    <div className=\"flex\">{!coinLoading ? fee : <div className=\"px-3\"><ClipLoader size={18} /> </div>} {token1.name}</div>\n                </div>\n            </div>\n            <div className=\"text-center mx-8\">\n                <Button className=\"w-full\" onClick={() => setOpen(true)} isLoading={isLoading}>\n                    Swap\n                </Button>\n            </div>\n        </div>\n        {isOpen && <Modal onDisable={setOpen} title=\"Confirm Swap\" className=\"lg:left-[55.5%]\">\n            <div className=\"flex flex-col -mx-5 space-y-5\">\n                <div className=\"flex flex-col py-2 pb-10 space-y-7 border-b-2 px-5\">\n                    <div className=\"grid grid-cols-[7%,73%,20%] items-center\">\n                        <div>\n                            <img src={`${token1.coinUrl}`} alt=\"\" className=\"w-[20px[ h-[20px]\" />\n                        </div>\n                        <div className=\"font-bold\">\n                            {token1Amount}\n                        </div>\n                        <div className=\"text-right\">\n                            {token1.name}\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-[7%,73%,20%] items-center\">\n                        <div>\n                            <img src={`/icons/longdown.svg`} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-[7%,73%,20%] items-center\">\n                        <div>\n                            <img src={`${token2.coinUrl}`} className=\"w-[20px[ h-[20px]\" alt=\"\" />\n                        </div>\n                        <div className=\"font-bold\">\n                            {parseFloat(appAmount).toFixed(2)}\n                        </div>\n                        <div className=\"text-right\">\n                            {token2.name}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex flex-col px-5 text-xs space-y-1\">\n                    <div className=\"flex justify-between\">\n                        <div>Rate:</div>\n                        <div className=\"flex\">1 {token1.name} = {!coinLoading ? parseFloat(oneCoinPrice).toFixed(2) : <div className=\"px-3\"><ClipLoader size={18} /></div>} {token2.name}</div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <div>Fee:</div>\n                        <div className=\"flex\">{!coinLoading ? fee : <div className=\"px-3\"><ClipLoader size={18} /> </div>} {token1.name}</div>\n                    </div>\n                </div>\n                <div className=\"flex justify-center\">\n                    <Button className=\"w-3/5\" onClick={startSwap} isLoading={isLoading}>Confirm Swap</Button>\n                </div>\n            </div>\n        </Modal>}\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess({ activate: val }))} />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n}\n\nexport default Swap;","import { useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport Button from \"../../components/button\";\nimport CreatePassword from \"../../components/import/createPassword\";\nimport Login from \"../../components/import/login\";\nimport { useAccountExistMutation } from \"../../redux/api\";\n\nconst Import = () => {\n    const [accountExist, { error: reqError, isLoading }] = useAccountExistMutation()\n    const [input, setInput] = useState<string>(\"\")\n    const [index, setIndex] = useState(0)\n    const [isError, setError] = useState('')\n\n    const Submitted = async () => {\n        if (input) {\n            try {\n                setError('')\n                const data = await accountExist({ phrase: input.trim() }).unwrap()\n                if (!data!.result) setIndex(1)\n                else setIndex(2)\n            } catch (error: any) {\n                console.error(error)\n                setError(error?.data?.message)\n            }\n        }\n    }\n\n    return <>\n        {index === 0 && <section className=\"h-screen flex flex-col items-center justify-center gap-8\">\n            <div className=\"text-2xl sm:text-3xl text-primary text-center\">Import Your Recovery Phrase</div>\n            <div className=\"text-greylish\">\n                Enter your recovery (seed) phrase.\n                <br />\n                Only import on devices you trust.\n            </div>\n            <div className=\"flex flex-col gap-5 justify-center items-center\">\n                <div>\n                    <textarea onChange={(e) => setInput(e.target.value)} className=\"border-2 p-3 outline-none w-[300px] sm:w-[470px]\" placeholder=\"fish boot hand foot\" rows={7}></textarea>\n                </div>\n                {isError && <div className=\"text-red-500\">{isError}</div>}\n                <Button onClick={Submitted} className=\"w-[200px]\" isLoading={isLoading}>Import Account</Button>\n            </div>\n        </section>\n        }\n        {index === 1 && <CreatePassword phrase={input} />}\n        {index === 2 && <Login phrase={input} />}\n    </>\n}\n\nexport default Import;","import { useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport shortid, { generate } from 'shortid'\nimport { AddOwner, RemoveOwner, ReplaceOwner } from '../../components'\nimport Avatar from '../../components/avatar'\nimport Button from '../../components/button'\nimport Modal from '../../components/modal'\nimport ChangeTreshold from '../../components/settings/owner/changeThreshold'\nimport useMultisig from '../../hooks/useMultisig'\n\nconst OwnerSetting = () => {\n    const { data, storage, signData } = useMultisig()\n\n    const [addOwnerModal, setAddOwnerModal] = useState(false)\n    const [replaceOwnerModal, setReplaceOwnerModal] = useState(false)\n    const [changeTresholdModal, setChangeTresholdModal] = useState(false)\n    const [removeModal, setRemoveModal] = useState(false)\n\n    const [selectedOwner, setSelectedOwner] = useState(\"\")\n    const [removable, setRemovable] = useState({ name: \"\", address: \"\" })\n\n    if (!data) return <div className=\"text-center\">Please, select a MultiSig account</div>\n\n    return <div className=\"flex flex-col space-y-7\">\n        <div className=\"flex flex-col space-y-2\">\n            <div className=\"text-xl\">\n                Manage Owners\n            </div>\n            <div className=\"grid grid-cols-[55%,45%]\">\n                <div>\n                    Add, remove, replace, invite or rename owners\n                </div>\n                <div className=\"grid grid-cols-[45%,45%,10%]\">\n                    <div>\n                        <Button className=\"py-2 font-extralight w-[150px] flex items-center justify-center gap-x-1\" onClick={() => { setChangeTresholdModal(true) }}>\n                            <>\n                                <MdEdit />\n                                Treshold\n                            </>\n                        </Button>\n                    </div>\n                    <div>\n                        <Button className=\"py-2 px-5 font-extralight w-[150px]\" onClick={() => setAddOwnerModal(true)}>\n                            + Add owner\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            <div>\n                Every transaction requires the confirmation of <span className=\"font-semibold\">{signData?.executinTransactions} out of {data?.length}</span> owners\n            </div>\n        </div>\n        <div className=\"shadow-custom px-12 py-4 -mx-10 rounded-xl\">\n            <div className=\"flex flex-col space-y-5\">\n                {data?.map((e, i) => <div key={shortid()} className=\"grid grid-cols-[55%,10%,5%,30%] items-center\">\n                    <div key={generate()} className=\"flex items-center space-x-2\">\n                        <div>\n                            <Avatar className=\"bg-opacity-10 font-bold text-xs\" name=\"Ow\" />\n                        </div>\n                        <div className=\"flex flex-col\">\n                            <div>Owner {i + 1}</div>\n                            <div className=\"font-thin text-sm\">Address: {e.toLowerCase()}</div>\n                        </div>\n                    </div>\n                    <div>\n                        {storage!.accountAddress.toLowerCase() === e.toLowerCase() ? <div className=\"font-thin text-sm bg-primary text-white inline rounded-xl px-4 py-1\">You</div> : \"\"}\n                    </div>\n                    <div className=\"cursor-pointer\" onClick={() => {\n                        setSelectedOwner(e)\n                        setReplaceOwnerModal(true)\n                    }}>\n                        <img src=\"/icons/editSetting.svg\" alt=\"\" />\n                    </div>\n                    <div className=\"cursor-pointer\" onClick={() => {\n                        setRemovable({ name: `Owner ${i + 1}`, address: e })\n                        setRemoveModal(true)\n                    }}>\n                        <img src=\"/icons/trashSetting.svg\" alt=\"\" />\n                    </div>\n                </div>)}\n            </div>\n        </div>\n        {addOwnerModal && <Modal onDisable={setAddOwnerModal} disableX={true}>\n            <AddOwner onDisable={setAddOwnerModal} />\n        </Modal>}\n        {replaceOwnerModal && <Modal onDisable={setReplaceOwnerModal} disableX={true}>\n            <ReplaceOwner ownerAddress={selectedOwner} onDisable={setReplaceOwnerModal} />\n        </Modal>}\n        {changeTresholdModal && <Modal onDisable={setChangeTresholdModal} disableX={true}>\n            <ChangeTreshold onDisable={setChangeTresholdModal} />\n        </Modal>}\n        {removeModal && <Modal onDisable={setRemoveModal} disableX={true}>\n            <RemoveOwner address={removable.address} name={removable.name} onDisable={setRemoveModal} />\n        </Modal>}\n    </div>\n}\n\nexport default OwnerSetting","import { useSelector } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { generate } from \"shortid\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\n\n\nconst Assets = () => {\n    const selectBalance = useSelector(SelectBalances)\n    return <>\n        <div>\n            {/* <div className=\"font-semibold text-xl\">Assets</div> */}\n            <div className=\"w-full sm:px-5 /pt-4 pb-6 \">\n                <div id=\"header\" className=\"grid grid-cols-[35%,25%,20%,20%] sm:grid-cols-[25%,15%,15%,20%,12.5%,12.5%] sm:px-8 pb-5 /py-5\" >\n                    <div className=\"text-sm sm:text-base\">Assets</div>\n                    <div className=\"text-sm sm:text-base\">Balance</div>\n                    <div className=\"text-sm sm:text-base\">Amount</div>\n                    <div className=\"hidden sm:block\">USD Price</div>\n                    <div className=\"hidden sm:block\">24h</div>\n                    <div className=\"text-sm sm:text-base\">% Assets</div>\n                </div>\n                <div className=\"pb-5 px-2 sm:px-8 shadow-custom rounded-xl\">\n                    {Object.values(selectBalance).map((item: IBalanceItem, index) => {\n                        if (!item && index == 0) return <div className=\"flex justify-center py-1\"> <ClipLoader /></div>\n                        if (!item) return <></>\n                        return <div key={generate()} className=\"grid grid-cols-[35%,25%,20%,20%] sm:grid-cols-[25%,15%,15%,20%,12.5%,12.5%] border-b border-black py-5\" >\n                            <div className=\"flex space-x-3 items-center\">\n                                <div><img src={item?.coins?.coinUrl} width={30} height={30} alt=\"\" /></div>\n                                <div>{item?.coins?.name} </div>\n                            </div>\n                            <div>\n                                $ {(item.amount * item.tokenPrice).toFixed(2)}\n                            </div>\n                            <div>\n                                {(item.amount || 0).toFixed(2)}\n                            </div>\n                            <div className=\"hidden sm:block\">\n                                $ {(item.tokenPrice || 0).toFixed(2)}\n                            </div>\n                            <div className=\"hidden sm:block\">\n                                % {(item.per_24 || 0).toFixed(2)}\n                            </div>\n                            <div>\n                                % {(item.percent || 0).toFixed(2)}\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Assets;","import { Fragment, useEffect, useState, useRef } from 'react';\nimport TeamContainer from '../../components/teams/teamContainer'\nimport Modal from '../../components/modal'\nimport AddTeams from '../../components/teams/buttons/addTeam'\nimport AddMemberModal from '../../components/teams/buttons/addMember'\nimport { ClipLoader } from 'react-spinners';\nimport { TeamInfoWithMembers } from '../../types/sdk/Team/GetTeamsWithMembers';\nimport { generate } from 'shortid';\nimport Success from '../../components/success';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks'\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice'\nimport Error from '../../components/error';\nimport { useLazyGetTeamsWithMembersQuery } from '../../redux/api';\nimport { result } from 'lodash';\nimport Button from '../../components/button';\n\n\nconst Teams = () => {\n\n    const [teamCount] = useState(3)\n    const [skipCount, setSkipCount] = useState(0)\n    const skipRef = useRef(0)\n\n    const [trigger, result] = useLazyGetTeamsWithMembersQuery();\n\n\n    const isSuccess = useAppSelector(selectSuccess)\n    const isError = useAppSelector(selectError)\n    const dispatch = useAppDispatch()\n\n    const [addTeamModal, setAddTeamModal] = useState(false)\n    const [addMemberModal, setAddMemberModal] = useState(false)\n\n    const [teams, setTeams] = useState<TeamInfoWithMembers[]>([])\n\n    const maxTeamCount = useRef(0)\n\n    useEffect(() => {\n        if (result.data) {\n            maxTeamCount.current = result.data.total;\n            if (skipRef.current !== 0) {\n                setTeams([...teams, ...result.data.teams])\n            } else {\n                setTeams(result.data.teams)\n            }\n            dispatch(changeSuccess({ activate: false }))\n        }\n    }, [result.data])\n\n    useEffect(() => {\n        skipRef.current = skipCount\n        trigger({ take: teamCount, skip: skipCount })\n    }, [skipCount])\n\n\n    useEffect(() => {\n        if (!isSuccess && result.data) {\n            //refetch()\n            skipRef.current = 0;\n            trigger({ take: teams.length < teamCount ? teamCount : teams.length, skip: skipRef.current })\n        }\n    }, [isSuccess])\n\n    return <div>\n        <div className=\"flex sm:justify-between pb-5 space-x-3 md:space-x-0\">\n            <div className=\"grid grid-cols-2 md:grid-cols-3 sm:gap-10 gap-1 col-span-4\">\n                <Button className=\"text-xs sm:text-base !py-2 !px-6\" onClick={() => setAddTeamModal(true)}>Add Team</Button>\n                <Button className=\"text-xs sm:text-base !py-2 !px-6\" onClick={() => setAddMemberModal(true)}>Add Person</Button>\n            </div>\n            {/* <button className=\"px-5 py-2 bg-greylish bg-opacity-5 rounded-xl\">\n                Export\n            </button> */}\n        </div>\n        <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n            <div id=\"header\" className=\"hidden sm:grid grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] border-b border-black sm:pb-5 px-5\" >\n                <div className=\"font-normal\">Name</div>\n                <div className=\"font-normal hidden lg:block\">Team</div>\n                <div className=\"font-normal\">Amount</div>\n                <div className=\"font-normal\">Wallet Address</div>\n            </div>\n            <div>\n                {teams.map(w => w && w.members && w.members.length > 0 ? <Fragment key={generate()}><TeamContainer {...w} /></Fragment> : undefined)}\n                {teams.map(w => w && (!w?.members || w?.members?.length === 0) ? <Fragment key={generate()}><TeamContainer {...w} /></Fragment> : undefined)}\n\n                {(result.isLoading || result.isFetching) && <div className=\"flex justify-center py-10\"><ClipLoader /></div>}\n            </div>\n        </div>\n        {(!result.isLoading && !result.isFetching) && (teams.length ?? 0) < maxTeamCount.current && <div className=\"flex justify-center py-4\">\n            <Button version=\"second\" className=\"rounded-xl\" onClick={() => {\n                if (maxTeamCount.current - (teams.length ?? 0) < teamCount) {\n                    setSkipCount(maxTeamCount.current - (maxTeamCount.current - teams.length))\n                } else {\n                    setSkipCount(teams.length)\n                }\n            }}>\n                Load More\n            </Button>\n        </div>}\n        {addTeamModal &&\n            <Modal onDisable={setAddTeamModal}>\n                <AddTeams onDisable={setAddTeamModal} />\n            </Modal>}\n        {addMemberModal &&\n            <Modal onDisable={setAddMemberModal}>\n                <AddMemberModal onDisable={setAddMemberModal} />\n            </Modal>}\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess({ activate: val }))} />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n}\n\nexport default Teams;","import { ClipLoader } from 'react-spinners';\nimport TransactionHistory from '../../components/dashboard/main/transactionHistory'\nimport Statistics from '../../components/dashboard/main/statistics'\nimport useTransactionProcess, { TransactionHook, TransactionHookByDate, TransactionHookByDateInOut } from '../../hooks/useTransactionProcess';\nimport { useEffect, useRef, useState } from 'react';\n\n\nconst Main = () => {\n    const [transactions] = useTransactionProcess(true)\n\n    return <main className=\"flex gap-5\">\n        <div className=\"w-1/2\">\n            <div className=\"grid grid-cols-2 gap-8 max-h-full\">\n                <Statistics />\n            </div>\n        </div>\n        <div className=\" w-1/2\">\n            <div id=\"transaction\" className=\" pt-[30px]\">\n                {transactions ? <TransactionHistory transactions={transactions} /> : <div className=\"flex justify-center\"> <ClipLoader /></div>}\n            </div>\n        </div>\n    </main>\n}\n\nexport default Main;","import dateFormat from \"dateformat\";\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { generate } from \"shortid\";\nimport Web3 from \"web3\";\nimport TransactionItem from \"../../components/transactionItem\";\nimport { useLazyGetTransactionsQuery } from \"../../redux/api\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport { AltCoins, Coins, TransactionFeeTokenName, TransactionDirection } from \"../../types\";\nimport { TransactionStatus } from \"../../types/dashboard/transaction\";\nimport { CSVLink } from \"react-csv\";\nimport _ from \"lodash\";\nimport useTransactionProcess, { TransactionHook, TransactionHookByDateInOut } from \"../../hooks/useTransactionProcess\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\nimport useMultisig from \"../../hooks/useMultisig\";\nimport { selectMultisigTransactions } from \"../../redux/reducers/multisig\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"../../components/dashboard/accordion\";\n\n\nconst Transactions = () => {\n    const storage = useAppSelector(selectStorage);\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const multisigData = useAppSelector(selectMultisigTransactions)\n\n    const { refetch, fetchTxs, isMultisig, data, signData, isTransactionLoading } = useMultisig()\n\n    const [take, setTake] = useState(4)\n    // const [trigger, { data: transactions }] = useLazyGetTransactionsQuery()\n    const [list, transactions] = useTransactionProcess(true)\n\n    const [multiSkip, setMultiSkip] = useState(0)\n\n    const [transactionVisual, setVisual] = useState<JSX.Element | JSX.Element[]>()\n\n    useEffect(() => {\n        if (isMultisig) {\n            const interval = setInterval(() => {\n                refetch(true, 0, (multisigData?.length || 20))\n            }, 60000)\n            return () => clearInterval(interval)\n        }\n    }, [selectedAccount, multisigData])\n\n    useEffect(() => {\n        if (list) {\n            setTimeout(()=>{\n                TransactionGenerator.then((e) => {\n                    setVisual(e)\n                })\n            }, 500)\n        }\n    }, [list])\n\n    const TransactionGenerator = useMemo(() => new Promise<JSX.Element[]>((resolve, reject) => {\n        if (!list) return <></>\n        const result = Object.entries(list).map(([block, transactionObj]) => {\n            const recievedTransactions = transactionObj.recieved;\n            const sentTransactions = transactionObj.sent;\n            const swaps = transactionObj.swaps;\n\n            return <Fragment key={block}>\n                {recievedTransactions.length > 0 && <Accordion grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,25%,15%]\"} direction={TransactionDirection.In} date={transactionObj.date} dataCount={recievedTransactions.length} status={TransactionStatus.Completed}>\n                    <div>\n                        {recievedTransactions.map(({ amount, address, coinName, blockNumber, date, coin, hashs }) => {\n                            return <TransactionItem key={blockNumber + hashs.join(',')} blockNumber={blockNumber} address={address} amountCoin={amount} coinName={coinName} date={date} coin={coin} status={TransactionStatus.Completed} />\n                        })}\n                    </div>\n                </Accordion>}\n                {sentTransactions.length > 0 && <Accordion grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,15%,15%]\"} direction={TransactionDirection.Out} date={transactionObj.date} dataCount={sentTransactions.length} status={TransactionStatus.Completed}>\n                    <div>\n                        {sentTransactions.map(({ amount, coinName, blockNumber, address, date, coin, hashs }) => {\n                            return <TransactionItem key={blockNumber + hashs.join(',')} blockNumber={blockNumber} address={address} date={date} amountCoin={amount} coinName={coinName} coin={coin} status={TransactionStatus.Completed} />\n                        })}\n                    </div>\n                </Accordion>}\n                {swaps.length > 0 && <Accordion grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,15%,15%]\"} direction={TransactionDirection.Swap} date={transactionObj.date} dataCount={swaps.length} status={TransactionStatus.Completed}>\n                    <div>\n                        {swaps.map(({ amount, coinName, blockNum, to, date, coin, hash, direction, swap }) => {\n                            return <TransactionItem key={blockNum + hash} address={to} swap={swap} blockNumber={blockNum} direction={direction} date={date} amountCoin={[amount.toFixed(2)]} coinName={[coinName]} coin={[coin]} status={TransactionStatus.Completed} />\n                        })}\n                    </div>\n                </Accordion>}\n            </Fragment>\n        })\n\n        resolve(result)\n    }), [])\n\n    return <>\n        <div>\n            <div className=\"text-2xl font-bold px-5\">\n                Transactions\n            </div>\n            <div className=\"w-full px-5 pt-4 pb-3 rounded-xl\">\n                <div id=\"header\" className=\"grid grid-cols-[25%,45%,30%] sm:grid-cols-[39%,31%,15%,15%] border-b border-black pb-3 \" >\n                    <div className=\"sm:hidden text-xs font-medium\">Recipient/Sender</div>\n                    <div className=\"hidden sm:block text-xs sm:text-base font-medium\">{isMultisig ? \"Your Confirmation\" : \"Recipient/Sender\"}</div>\n                    <div className=\"text-xs sm:text-base font-medium\">{isMultisig ? \"Action\" : \"Paid Amount\"}</div>\n                    <div className=\"font-medium hidden md:block\">{isMultisig ? \"Signatures\" : \"Details\"}</div>\n                    {!isMultisig && <> <div className=\"place-self-end \">\n                        {transactions && <CSVLink className=\"font-normal px-2 sm:px-5 py-1 rounded-xl cursor-pointer bg-greylish bg-opacity-10 flex items-center justify-center xl:space-x-5\" filename={\"remox_transactions.csv\"} data={transactions.result.map(w => {\n                            let feeToken = Object.entries(TransactionFeeTokenName).find(s => s[0] === w.tokenSymbol)?.[1]\n                            return {\n                                'Sent From:': w.from,\n                                'Amount:': parseFloat(Web3.utils.fromWei(w.value, 'ether')).toFixed(4) + ` ${feeToken ? Coins[feeToken].name : \"Unknown\"}`,\n                                'To:': w.to,\n                                'Date': dateFormat(new Date(parseInt(w.timeStamp) * 1e3), \"mediumDate\"),\n                                \"Gas\": parseFloat(w.gasUsed) * parseFloat(w.gasPrice),\n                                \"Block Number\": w.blockNumber,\n                                \"Transaction Hash\": w.hash,\n                                \"Block Hash\": w.blockHash,\n                                \"Input\": w.input\n                            }\n                        })}>\n                            <div className={'hidden xl:block'}>Export</div>\n                            <img src=\"/icons/downloadicon.svg\" alt=\"\" />\n                        </CSVLink>}\n                    </div></>}\n                </div>\n                {\n                    isMultisig && <div>\n                        {multisigData ?\n                            multisigData.length > 0 ? <>\n                                {multisigData.filter(w => w.method && !w.executed).map((w, i) => {\n\n                                    const method = w.method!.split('').reduce((acc, w, i) => {\n                                        if (i === 0) return acc + w.toUpperCase()\n                                        if (w !== w.toLowerCase() && i > 0) return acc + \" \" + w\n                                        return acc + w;\n                                    }, '')\n\n                                    return <Accordion key={(w.id?.toString() ?? Math.random().toString()) + w.data} grid={\"grid-cols-[25%,45%,30%] sm:grid-cols-[27%,33%,25%,15%]\"} dataCount={1} method={method} status={w.executed ? TransactionStatus.Completed : TransactionStatus.Pending}>\n                                        <div className=\"pl-5 grid grid-cols-[27%,33%,25%,15%] min-h-[75px] py-6 items-center\">\n                                            <div>\n                                                {w.executed ? <div className=\"text-white bg-green-500 border-2 border-green-500 rounded-xl px-3 py-1 text-center text-xs w-[125px]\">Submitted</div> : null}\n                                                {w.executed ? null : w.confirmations.includes(storage!.accountAddress) ? <div className=\"text-white bg-primary border-2 border-primary rounded-xl px-3 py-1 text-center text-xs max-w-[175px]\">You've Confirmed</div> : <div className=\"border-2 text-center border-primary  px-3 py-1 rounded-xl text-xs max-w-[175px]\">You've not confirmed yet</div>}\n                                            </div>\n                                            <div className=\"flex flex-col space-y-1\">\n                                                {/* <div>\n                                                    <div className=\"border-b border-black inline\">\n                                                        {method}\n                                                    </div>\n                                                </div> */}\n                                                {w.owner ? <div className=\"truncate pr-10  text-base\">{w.method?.toLowerCase().includes('transfer') ? 'To' : 'Owner'}: {w.owner}</div> : null}\n                                                {w.valueOfTransfer ? <div className=\"truncate pr-10  text-base\">Value: {w.valueOfTransfer} {(Object.values(Coins).find((s: AltCoins) => s.contractAddress.toLowerCase() === w.destination.toLowerCase()) as AltCoins)?.name}</div> : null}\n                                                {w.newOwner ? <div className=\"truncate pr-10  text-base\">New Owner: {w.newOwner}</div> : null}\n                                                {w.requiredCount ? <div className=\"truncate pr-10  text-base\">New Signature Threshold: {+w.requiredCount}</div> : null}\n                                            </div>\n                                            <div className=\"font-semibold \">\n                                                {w.confirmations.length} <span className=\"font-medium\">out of</span> {w.method?.toLowerCase().includes(\"transfer\") ? signData?.executinTransactions : signData?.changingMultiSigProperties}\n                                            </div>\n                                            <div className=\"flex justify-end cursor-pointer items-start md:pr-0 \">\n                                                <Link to={`/multisig/${w.id}`}><div className={`text-primary px-6 max-h-[80px] border-2 border-primary rounded-xl py-2 hover:bg-primary hover:text-white`}>View Details</div></Link>\n                                            </div>\n                                        </div>\n                                    </Accordion>\n                                })}\n\n                            </> : <div className=\"flex flex-col justify-center\">\n                                <div className=\"text-center py-3\"><ClipLoader /></div>\n                                <div className=\"text-center text-xs text-gray-500\">It can take longer</div>\n                            </div> : <div className=\"text-center py-3\">No Transaction Yet</div>}\n                    </div>\n                }\n                {((isMultisig && multisigData && multisigData.length > 0) || !isMultisig) && list && transactionVisual ? transactionVisual : isMultisig ? null : <div className=\"text-center py-2\"><ClipLoader /></div>}\n            </div>\n        </div>\n    </>\n}\n\nexport default Transactions;","import dateFormat from \"dateformat\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ClipLoader } from \"react-spinners\";\nimport Web3 from \"web3\";\nimport Dropdown from \"../../components/dropdown\";\nimport { useLazyGetTransactionsQuery } from \"../../redux/api\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { SelectCurrencies } from \"../../redux/reducers/currencies\";\nimport { Coins, CoinsURL, TransactionFeeTokenName } from \"../../types/coins\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport lodash from \"lodash\";\nimport { Transactions } from \"../../types/sdk\";\nimport _ from \"lodash\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\n\nconst Details = () => {\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const currencies = useAppSelector(SelectCurrencies)\n    let params = useParams<{ id: string, address: string }>() as { id: string, address: string }\n\n\n    const [totalAmount, setTotalAmount] = useState<number>();\n    const [transactionFee, setTransactionFee] = useState<number>();\n\n    const [list, setList] = useState<{ [name: string]: Transactions[] }>()\n    const [trigger, { data: transactions, isLoading, isFetching }] = useLazyGetTransactionsQuery()\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        if (selectedAccount) {\n            trigger(selectedAccount)\n        }\n    }, [])\n\n    const maList = useMemo(() => {\n        if (transactions?.result) {\n            const res = lodash.groupBy(transactions.result, lodash.iteratee('blockNumber'))\n            let newObject: { [name: string]: Transactions[] } = {}\n            Object.entries(res).map(([key, value]) => {\n                const data = _(value).orderBy((o) => BigInt(o.value), ['desc']).uniqBy('hash').value().filter(s => s.to.toLowerCase() === params.address.toLowerCase() || s.from.toLowerCase() === params.address.toLowerCase())\n                newObject[key] = data\n            })\n            return newObject;\n        }\n    }, [transactions?.result])\n\n    useEffect(() => {\n        if (maList) setList(maList)\n    }, [transactions?.result])\n\n    useEffect(() => {\n        if (list) {\n            setLoading(true)\n            if (list[params.id][0].from.toLowerCase() !== selectedAccount.toLowerCase()) {\n                const maTx = list[params.id].find(w => w.to.toLowerCase() === selectedAccount.toLowerCase())\n                if (maTx) {\n                    let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === maTx.tokenSymbol)?.[1];\n                    const coin = feeToken ? Coins[feeToken] : Coins.cUSD\n                    setTotalAmount(lodash.round((feeToken ? (currencies[coin.name]?.price ?? 0) : 0) * Number(Web3.utils.fromWei(maTx.value, 'ether')), 6))\n\n                    setTransactionFee(Number(Web3.utils.fromWei((Number(maTx.gasUsed) * Number(maTx.gasPrice)).toString(), 'ether')))\n                }\n            } else {\n                const total = lodash.round(list[params.id].reduce((a, c) => {\n                    let feeToken = Object.entries(TransactionFeeTokenName).find(w => w[0] === c.tokenSymbol)?.[1];\n                    const coin = feeToken ? Coins[feeToken] : Coins.cUSD\n                    a += (feeToken ? (currencies[coin.name]?.price ?? 0) : 0) * Number(Web3.utils.fromWei(c.value, 'ether'))\n                    return a;\n                }, 0), 6)\n                setTotalAmount(total)\n\n                const fee = list[params.id].reduce((a, c) => {\n                    a += Number(Web3.utils.fromWei((Number(c.gasUsed) * Number(c.gasPrice)).toString(), 'ether'))\n                    return a\n                }, 0)\n\n                setTransactionFee(fee)\n            }\n            setLoading(false)\n        }\n    }, [list, params.id])\n\n    return <>\n        <div>\n            <div className=\"w-full shadow-custom px-5 py-14 rounded-xl flex flex-col items-center justify-center\">\n                <div className=\"font-bold text-xl sm:text-2xl\">\n                    Transaction Details\n                </div>\n                {list && (!isLoading && !loading) ? <div className=\"flex flex-col sm:grid sm:grid-cols-3 py-5 gap-14\">\n                    {list[params.id].length === 1 ?\n                        TransactionDetailInput(\"Transaction Hash\", `${list[params.id][0].hash}`, `https://explorer.celo.org/tx/${list[params.id][0].hash}/token-transfers`)\n                        :\n                        <Dropdown displayName=\"Transaction Hash\" className=\"h-full bg-greylish bg-opacity-10 font-semibold\" onSelect={(w: DropDownItem) => {\n                            window.open(`https://explorer.celo.org/tx/${w.name}/token-transfers`, '_blank')\n                        }} nameActivation={true} selected={{ name: \"Go to Explorer\", coinUrl: CoinsURL.None }} list={[\n                            ...list[params.id].map(w => ({ name: w.hash, coinUrl: CoinsURL.None })),\n                        ]} />\n                    }\n                    {TransactionDetailInput(\"Paid To\", [...new Set(list[params.id].map(w => w.to))].length === 1 ? '1 person' : `${[...new Set(list[params.id].map(w => w.to))].length} people`)}\n                    {TransactionDetailInput(\"Total Amount\", `${totalAmount} USD`)}\n                    {TransactionDetailInput(\"Transaction Fee\", `${transactionFee}`)}\n                    {TransactionDetailInput(\"Created Date & Time\", `${dateFormat(new Date(Number(list[params.id][0].timeStamp) * 1e3), 'dd/mm/yyyy hh:MM:ss')}`)}\n                    {TransactionDetailInput(\"Status\", <div className=\"flex items-center gap-x-2\"><div className=\"bg-green-400 h-[10px] w-[10px] rounded-full\"></div>Completed</div>)}\n                    {list[params.id].length === 1 || [...new Set(list[params.id].map(w => w.to))].length === 1 ?\n                        TransactionDetailInput(\"Wallet Address\",\n                            (list[params.id][0].from.toLowerCase() !== selectedAccount.toLowerCase() ? list[params.id][0].from : list[params.id][0].to).split('').reduce((a, c, i, arr) => {\n                                return i < 10 || (arr.length - i) < 4 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n                            }, ''), undefined, () => window.navigator.clipboard.writeText(list[params.id][0].from)\n                        )\n                        :\n                        <Dropdown displayName=\"Wallet Address\" className=\"h-[75px] bg-greylish bg-opacity-10\" nameActivation={true} selected={{ name: \"Choose to copy an address\", coinUrl: CoinsURL.None }}\n                            onSelect={(w: DropDownItem) => {\n                                if (w.name) window.navigator.clipboard.writeText(w.name)\n                            }}\n                            list={[\n                                ...list[params.id].map(w => ({ name: w.to, coinUrl: CoinsURL.None, disableAddressDisplay: true })),\n                            ]} />}\n                </div> : <ClipLoader />}\n            </div>\n        </div>\n    </>\n}\n\nexport default Details;\n\n\nconst TransactionDetailInput = (title: string, children: JSX.Element | JSX.Element[] | string, url?: string, onClick?: () => void) => {\n\n    return <div className=\"bg-greylish bg-opacity-10 flex flex-col px-4 py-3 rounded-xl min-h-[75px]\">\n        <div className=\"text-sm text-greylish opacity-80\">\n            {title}\n        </div>\n        <div className={`font-bold text-lg truncate ${onClick && \"cursor-pointer\"} ${url && \"cursor-pointer\"}`} onClick={() => {\n            url ? window.open(url, '_blank') : console.log(\"Wish you more money :)\")\n        }}>\n            {children}\n        </div>\n        { }\n    </div>\n}","import { useState, useRef, useEffect, SyntheticEvent } from \"react\";\nimport Dropdown from \"../../components/dropdown\";\nimport { generate } from 'shortid'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Success from \"../../components/success\";\nimport Error from \"../../components/error\";\nimport { DropDownItem } from \"../../types/dropdown\";\nimport { Member, MultipleTransactionData } from \"../../types/sdk\";\nimport { useGetBalanceQuery, useLazyGetTeamsWithMembersQuery, useSendCeloMutation, useSendStableTokenMutation, useSendMultipleTransactionsMutation, useSendAltTokenMutation, useSubmitTransactionsMutation } from \"../../redux/api\";\nimport { selectStorage } from \"../../redux/reducers/storage\";\nimport TeamInput from \"../../components/pay/teaminput\";\nimport { AltCoins, AltcoinsList, Coins, CoinsName, StableTokens, TransactionFeeTokenName } from \"../../types/coins\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport lodash from \"lodash\";\nimport { IBalanceItem, SelectBalances } from \"../../redux/reducers/currencies\";\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\";\nimport Initalization from \"../../utility/init\";\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\";\nimport { useRefetchData } from \"../../hooks\";\nimport Button from \"../../components/button\";\n\n\nconst MassPay = () => {\n\n    const { state } = useLocation() as { state: { memberList?: Member[] } }\n    const memberList = state?.memberList\n\n    const storage = useAppSelector(selectStorage)\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n    const isError = useAppSelector(selectError)\n    const balance = useAppSelector(SelectBalances)\n    const router = useNavigate();\n    const dispatch = useAppDispatch()\n\n    // const { data, refetch } = useGetBalanceQuery()\n    const [refetch] = useRefetchData(true)\n\n    const [sendCelo] = useSendCeloMutation()\n    const [sendStableToken] = useSendStableTokenMutation()\n    const [sendMultiple] = useSendMultipleTransactionsMutation()\n    const [sendAltcoin] = useSendAltTokenMutation()\n\n    const [sendMultisig] = useSubmitTransactionsMutation()\n\n\n    const [getTeams, { data: teams, isLoading: teamLoading }] = useLazyGetTeamsWithMembersQuery()\n\n\n    const [isPaying, setIsPaying] = useState(false)\n    const [isSuccess, setSuccess] = useState(false)\n\n\n    const [selectedWallet, setSelectedWallet] = useState<DropDownItem>();\n    const [selectedTeam, setSelectedTeam] = useState<DropDownItem | undefined>(memberList ? { name: \"Custom\", address: \"0\" } : undefined);\n\n    // const resMember = useRef<Array<Member & { selected: boolean }>>([])\n    const [resMember, setResMember] = useState<Array<Member & { selected: boolean }>>(memberList ? memberList.map(w => ({ ...w, selected: false })) : [])\n    const [members, setMembers] = useState<Member[] | undefined>(memberList);\n    const [selectedId, setSelectedId] = useState<string[]>(memberList ? memberList.map(w => w.id) : []);\n\n    const [list, setList] = useState<Array<DropDownItem>>([]);\n\n\n    useEffect(() => {\n        getTeams({ take: Number.MAX_SAFE_INTEGER })\n        refetch()\n    }, [])\n\n\n    useEffect(() => {\n        if (balance && balance.CELO) {\n            setSelectedWallet({ name: \"Set all to\", address: \"\" })\n            const coins = Object.values(balance).map((coin: IBalanceItem) => ({\n                name: `${coin.amount.toFixed(3)} ${coin.coins.name}`,\n                type: coin.coins.value.toString(),\n                value: coin.coins.value,\n                coinUrl: coin.coins.coinUrl,\n                amount: coin.amount.toString(),\n            }))\n            setList(coins)\n        }\n    }, [balance])\n\n    useEffect(() => {\n        if (teams && teams.teams.length && !memberList) {\n            setSelectedTeam({ name: teams.teams[0].title, address: teams.teams[0].id })\n        }\n    }, [teams])\n\n    useEffect(() => {\n        if (teams && teams.teams.length && selectedTeam && selectedTeam.address && selectedTeam.name.toLowerCase() !== \"custom\") {\n            const team = teams.teams.find(w => w.id === selectedTeam.address)\n            if (team && team.members) {\n                setResMember(team.members.map(w => ({ ...w, selected: false })))\n            }\n            setMembers(teams.teams.find(w => w.id === selectedTeam.address)!.members)\n        }\n    }, [selectedTeam, teams])\n\n    const Submit = async (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const result: Array<MultipleTransactionData> = []\n\n        const mems = resMember.filter(w => selectedId.includes(w.id))\n\n        if (mems.length) {\n            for (let index = 0; index < mems.length; index++) {\n                let amount;\n                if (mems[index].usdBase) {\n                    amount = (parseFloat(mems[index].amount) * (balance[mems[index].currency as keyof typeof balance]?.tokenPrice ?? 1)).toString()\n                } else {\n                    amount = mems[index].amount\n                }\n                result.push({\n                    toAddress: mems[index].address,\n                    amount,\n                    tokenType: mems[index].currency\n                })\n\n                let secAmount = mems[index].secondaryAmount, secCurrency = mems[index].secondaryCurrency;\n\n                if (secAmount && secCurrency) {\n                    if (mems[index].secondaryAmount) {\n                        secAmount = (parseFloat(secAmount) * (balance[mems[index].secondaryCurrency as keyof typeof balance]?.tokenPrice ?? 1)).toString()\n                    }\n\n                    result.push({\n                        toAddress: mems[index].address,\n                        amount: secAmount,\n                        tokenType: secCurrency\n                    })\n                }\n            }\n        }\n\n        setIsPaying(true)\n\n        try {\n            if (storage!.accountAddress.toLowerCase() === selectedAccount.toLowerCase()) {\n                if (result.length === 1) {\n                    if (result[0].tokenType === CoinsName.CELO) {\n                        await sendCelo({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase\n                        }).unwrap\n\n                    } else if (result[0].tokenType === CoinsName.cUSD || result[0].tokenType === CoinsName.cEUR) {\n                        await sendStableToken({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            stableTokenType: StableTokens[(result[0].tokenType)]\n                        }).unwrap()\n                    } else {\n                        await sendAltcoin({\n                            toAddress: result[0].toAddress,\n                            amount: result[0].amount,\n                            phrase: storage!.encryptedPhrase,\n                            altTokenType: AltcoinsList[(result[0].tokenType as AltcoinsList)]\n                        }).unwrap()\n                    }\n                }\n                else {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    await sendMultiple({\n                        multipleAddresses: arr,\n                        phrase: storage!.encryptedPhrase\n                    }).unwrap()\n                }\n            } else {\n                if (result.length === 1) {\n                    await sendMultisig({\n                        toAddress: result[0].toAddress,\n                        multisigAddress: selectedAccount,\n                        phrase: storage!.encryptedPhrase,\n                        tokenType: result[0].tokenType,\n                        value: result[0].amount,\n                    }).unwrap()\n                }\n                else {\n                    const arr: Array<MultipleTransactionData> = result.map(w => ({\n                        toAddress: w.toAddress,\n                        amount: w.amount,\n                        tokenType: w.tokenType\n                    }))\n\n                    for (let i = 0; i < arr.length; i++) {\n                        await sendMultisig({\n                            toAddress: arr[i].toAddress,\n                            multisigAddress: selectedAccount,\n                            phrase: storage!.encryptedPhrase,\n                            tokenType: arr[i].tokenType,\n                            value: arr[i].amount,\n                        }).unwrap()\n                    }\n                }\n            }\n            setSuccess(true);\n            refetch()\n            // Initalization();\n\n\n        } catch (error: any) {\n            console.error(error)\n            dispatch(changeError({ activate: true, text: error?.data?.message.slice(0, 80) }));\n        }\n\n\n        setIsPaying(false);\n    }\n\n\n    return <div>\n        <form onSubmit={Submit}>\n            <div className=\"flex flex-col items-center justify-center min-h-screen\">\n                <div className=\"w-[95%] sm:w-[85vw] min-h-[75vh]\">\n                    <div className=\"w-full\">\n                        <div className=\"pl-14 text-xl font-semibold\">Mass Payout</div>\n                    </div>\n                    <div className=\" h-auto shadow-xl rounded-xl border flex flex-col gap-10 py-10\">\n                        {!teamLoading && teams && teams.teams.length === 0 ? <div className=\"flex justify-center\">No Team Yet. Please, first, create a team</div> : <><div className=\"flex flex-col px-4 sm:pl-12 sm:pr-[25%] gap-10\">\n                            <div className=\"flex flex-col space-y-3\">\n                                <span className=\"text-left text-sm font-semibold\">Paying From</span>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-3 sm:gap-x-10\">\n                                    {!(teams && selectedTeam) ? <ClipLoader /> : <Dropdown className=\"h-full\" disableAddressDisplay={true} onSelect={setSelectedTeam} nameActivation={true} selected={selectedTeam} list={teams.teams.map(w => ({ name: w.title, address: w.id }))} />}\n                                    {/* {!(balance && balance.CELO && selectedWallet) ? <ClipLoader /> : <Dropdown onSelect={setSelectedWallet} nameActivation={true} selected={selectedWallet} list={list} disableAddressDisplay={true} />} */}\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <div className=\"flex justify-between py-4 items-center\">\n                                    <span className=\"text-left font-semibold\">Team Details</span>\n                                    <div className=\"flex space-x-2 items-center\">\n                                        <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                                            if (e.target.checked) setSelectedId(resMember.map(w => w.id))\n                                            else setSelectedId([])\n                                        }} />\n                                        <div>\n                                            Select All\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"grid grid-cols-2 sm:grid-cols-[20%,42%,33%,5%] gap-5\">\n                                    <div className=\"hidden sm:block font-semibold\">Name</div>\n                                    <div className=\"hidden sm:block font-semibold\">Address</div>\n                                    <div className=\"hidden sm:block font-semibold\">Disbursement</div>\n                                    <div className=\"hidden sm:block\"></div>\n                                    {teams && resMember && members && members.length > 0 ? resMember.map((w, i) => <TeamInput generalWallet={selectedWallet!} setGeneralWallet={setSelectedWallet} selectedId={selectedId} setSelectedId={setSelectedId} key={w.id} index={i} {...w} members={resMember} setMembers={setResMember} />) : 'No Member Yet'}\n                                </div>\n                            </div>\n                            <span className=\"text-lg\">Total: $ {Object.values(resMember.filter(s => selectedId.includes(s.id))).reduce((a, e, i) => {\n                                if (e.secondaryCurrency && e.secondaryAmount) {\n                                    if (e.secondaryUsdBase) {\n                                        a += parseFloat(e.secondaryAmount)\n                                    } else {\n                                        a += parseFloat(e.secondaryAmount) * (balance[Coins[e.secondaryCurrency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)\n                                    }\n                                }\n                                if (e.usdBase) return a + parseFloat(e.amount);\n                                return a + parseFloat(e.amount) * (balance[Coins[e.currency as keyof Coins].name as keyof typeof balance]?.tokenPrice ?? 1);\n                            }, 0).toFixed(2)}</span>\n                            <div className=\"flex flex-col\">\n                                <span className=\"text-left\">Description (Optional)</span>\n                                <div className=\"grid grid-cols-1\">\n                                    <textarea className=\"border-2 rounded-xl p-1 outline-none\" name=\"description\" id=\"\" cols={30} rows={5}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                            <div className=\"flex justify-center\">\n                                <div className=\"flex flex-col-reverse sm:grid sm:grid-cols-2 w-[400px] justify-center gap-5\">\n                                    <Button version=\"second\" onClick={() => router(-1)}>Close</Button>\n                                    <Button type=\"submit\" isLoading={isPaying}>Pay</Button>\n                                </div>\n                            </div> </>}\n                    </div>\n                </div>\n            </div>\n        </form>\n        {isSuccess && <Success onClose={setSuccess} onAction={() => { router(-1) }} />}\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: false, text: '' }))} />}\n    </div>\n\n}\n\nexport default MassPay;","import { NavLink, Outlet, Routes } from \"react-router-dom\";\n\n\nconst SettingLayout = () => {\n    const path = '/dashboard/settings'\n    return (\n        <div>\n            <div className=\"flex w-full relative after:absolute after:w-full after:h-[1px] after:bg-black after:bottom-[1px] after:left-0 after:z-10\">\n                <NavLink to={path} end className={({ isActive }) => isActive ? 'text-primary border-b-[3px] border-primary z-50 mx-5' : 'mx-5'}>\n                    <div className=\"flex gap-x-3 pb-3 \">\n                        <img src=\"/icons/ownerSetting.svg\" />\n                        <span>Owner</span>\n                    </div>\n                </NavLink>\n                {/* <NavLink to={`/dashboard/settings/spending`} className=\"mx-5\" activeClassName='text-primary border-b-[3px] border-primary z-50'>\n                    <div className=\"flex gap-x-3 pb-3\">\n                        <img src=\"/icons/spendingSetting.svg\" />\n                        Spending Limits (soon)\n                    </div>\n                </NavLink>*/}\n                <NavLink to={path + \"/profile\"} className={({ isActive }) => isActive ? 'text-primary border-b-[3px] border-primary z-50 mx-5' : 'mx-5'}>\n                    <div className=\"flex gap-x-3 pb-3 \">\n                        <img src=\"/icons/profileSetting.svg\" />\n                        <span>Profile</span>\n                    </div>\n                </NavLink>\n            </div>\n            <div className=\"px-10 py-5\">\n                <Outlet />\n            </div>\n        </div>\n    )\n}\n\nexport default SettingLayout;","import { useDispatch, useSelector } from \"react-redux\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useConfirmTransactionsMutation, useGetMultisigTransactionQuery, useRevokeTransactionsMutation } from \"../../redux/api\"\nimport useMultisig from '../../hooks/useMultisig'\nimport { SelectSelectedAccount } from \"../../redux/reducers/selectedAccount\"\nimport { ClipLoader } from \"react-spinners\"\nimport { selectStorage } from \"../../redux/reducers/storage\"\nimport { useEffect, useState } from \"react\"\nimport { AltCoins, Coins } from \"../../types/coins\"\nimport { changeError, selectError } from \"../../redux/reducers/notificationSlice\"\nimport Error from \"../../components/error\"\nimport { generate } from \"shortid\"\nimport Button from \"../../components/button\"\n\nconst MultisigTransaction = () => {\n    const history = useNavigate()\n    const { id } = useParams<{ id: string }>()\n    const selectedAddress = useSelector(SelectSelectedAccount)\n    const storage = useSelector(selectStorage)\n    const { signData, data, refetch: refreshMultisig } = useMultisig()\n    const { isLoading, isFetching, data: transactionData, refetch } = useGetMultisigTransactionQuery({ address: selectedAddress, id: (id ?? \"0\") })\n    const [revokeTransaction, { isLoading: revokeLoading }] = useRevokeTransactionsMutation()\n    const [confirmTransaction, { isLoading: confirmLoading }] = useConfirmTransactionsMutation()\n\n    const isError = useSelector(selectError)\n    const dispatch = useDispatch()\n\n    const [filterData, setFilterData] = useState<{\n        requiredCount?: string,\n        owner?: string,\n        newOwner?: string,\n        valueOfTransfer?: string,\n        method?: string\n    }>({})\n\n    useEffect(() => {\n        if (transactionData) {\n            setFilterData({\n                requiredCount: transactionData.txResult?.requiredCount,\n                owner: transactionData.txResult?.owner,\n                newOwner: transactionData.txResult?.newOwner,\n                valueOfTransfer: transactionData.txResult?.valueOfTransfer,\n                method: transactionData.txResult?.method\n            })\n        }\n    }, [transactionData, isFetching])\n\n    const submitAction = async () => {\n        if (!transactionData?.txResult.confirmations.includes(storage!.accountAddress)) {\n            try {\n                await confirmTransaction({\n                    multisigAddress: selectedAddress,\n                    transactionId: parseInt(id!),\n                    phrase: storage!.encryptedPhrase\n                }).unwrap()\n                refetch()\n                refreshMultisig()\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: error?.data?.message }));\n            }\n\n        } else {\n            try {\n                await revokeTransaction({\n                    multisigAddress: selectedAddress,\n                    transactionId: parseInt(id!),\n                    phrase: storage!.encryptedPhrase\n                }).unwrap()\n                refetch()\n                refreshMultisig()\n            } catch (error: any) {\n                console.error(error)\n                dispatch(changeError({ activate: true, text: error?.data?.message }));\n            }\n        }\n    }\n\n\n    if (isLoading || isFetching) {\n        return <div className=\"w-full h-screen flex items-center justify-center\"> <div><ClipLoader /></div></div>\n    }\n\n    return <div className=\"flex w-[60%] my-14 mx-auto\">\n        <div className=\"flex flex-col w-full space-y-10 flex-wrap\">\n            <div className=\"flex flex-col space-y-3\">\n                <div className=\"font-bold text-lg\">\n                    Transaction Status\n                </div>\n                <div>\n                    Transaction requires the confirmation of <span className=\"font-semibold\">{transactionData?.txResult.method?.toLowerCase().includes(\"transfer\") ? signData?.executinTransactions : signData?.changingMultiSigProperties} out of {data?.length} owners</span>\n                </div>\n            </div>\n            <div className=\"flex flex-wrap items-center justify-center gap-y-5\">\n                {data?.map((w, i, arr) =>\n                    <div key={generate()} className=\"flex flex-col   gap-4 items-center justify-center w-[120px]\" title={w}>\n                        <div className={`w-[50px] shadow-custom h-[50px] relative ${w.toLowerCase() === storage!.accountAddress.toLowerCase() ? \"bg-[#3EBE11]\" : \"\"} ${i !== 0 ? \"before:-translate-x-full before:absolute before:top-1/2 before:w-full before:h-[2px] before:bg-black\" : \"\"} ${i !== arr.length - 1 ? \"after:translate-x-full after:absolute after:top-1/2 after:w-full after:h-[2px] after:bg-black \" : \"\"} rounded-full ${transactionData?.txResult.confirmations.includes(w) ? \"bg-[#0055FF]\" : \"bg-[#E90D0D]\"}`}></div>\n                        <div className=\"truncate max-w-[120px] font-semibold\">\n                            {w.toLowerCase() !== storage!.accountAddress.toLowerCase() ? w.split('').reduce((a, c, i, arr) => {\n                                return i < 6 || (arr.length - i) < 3 ? a + c : a.split('.').length - 1 < 6 ? a + '.' : a\n                            }, '') : \"You\"}\n                        </div>\n                        <div className=\"h-[25px]\">\n                            {w.toLowerCase() !== storage!.accountAddress.toLowerCase() ? transactionData?.txResult.confirmations.includes(w) ? \"Approved\" : \"Pending\" : \"\"}\n                        </div>\n                    </div>\n                )}\n            </div>\n            <div className=\"shadow-custom w-full px-10 py-5\">\n                <div className=\"text-xl font-semibold pb-5\">Transaction Detail</div>\n                <div className=\"grid\" style={{\n                    gridTemplateColumns: `repeat(${Object.values(filterData).filter(s => s).length}, minmax(0, 1fr))`\n                }}>\n                    {filterData.method ? <div className=\"py-3 border-b border-black\">Action Name</div> : null}\n                    {filterData.valueOfTransfer ? <div className=\"py-3 border-b border-black\">Amount</div> : null}\n                    {filterData.owner ? <div className=\"py-3 border-b border-black\">{filterData.newOwner ? \"Old\" : \"Address\"}</div> : null}\n                    {filterData.newOwner ? <div className=\" py-3 border-b border-black\">New</div> : null}\n                    {filterData.requiredCount ? <div className=\" py-3 border-b border-black\">New Signature Threshold</div> : null}\n                    {filterData.method ? <div className=\" pt-3\">{\n                        filterData.method!.split('').reduce((acc, w, i) => {\n                            if (i === 0) return acc + w.toUpperCase()\n                            if (w !== w.toLowerCase() && i > 0) return acc + \" \" + w\n                            return acc + w;\n                        }, '')\n                    }</div> : null}\n                    {filterData.valueOfTransfer ? <div className=\"flex space-x-3 items-center pt-3\">\n                        <div>\n                            <img src={(Object.values(Coins).find((s: AltCoins) => s.contractAddress.toLowerCase() === transactionData?.txResult.destination.toLowerCase()) as AltCoins).coinUrl} alt=\"\" className='w-[25px] h-[25px]' />\n                        </div>\n                        <div>{filterData.valueOfTransfer}</div>\n                    </div> : null}\n                    {filterData.owner ? <div className=\" pt-3 text-sm truncate\" title={filterData.owner}>{filterData.owner}</div> : null}\n                    {filterData.newOwner ? <div className=\" pt-3 text-sm truncate\" title={filterData.newOwner}>{filterData.newOwner}</div> : null}\n                    {filterData.requiredCount ? <div className=\" pt-3 text-sm\" title={filterData.requiredCount}>{+filterData.requiredCount}</div> : null}\n                </div>\n            </div>\n            <div className=\"flex justify-center space-x-5\">\n                <div>\n                    <Button version=\"second\" className=\"px-5 py-2 w-[125px]\" onClick={() => history(-1)}>\n                        Back\n                    </Button>\n                </div>\n                {transactionData?.txResult.executed ? null : <div>\n                    <Button onClick={submitAction} className={`${!transactionData?.txResult.confirmations.includes(storage!.accountAddress) ? \"bg-[#2D5EFF] border-[#2D5EFF] hover:border-primary\" : \"bg-[#EF2727] border-[#EF2727]\"} border-2 text-white px-5 py-2 rounded-xl w-[125px]`}>\n                        {revokeLoading || confirmLoading ? <ClipLoader size={15} /> : !transactionData?.txResult.confirmations.includes(storage!.accountAddress) ? \"Approve\" : \"Revoke\"}\n                    </Button>\n                </div>}\n            </div>\n        </div>\n        {isError && <Error onClose={(val) => dispatch(changeError({ activate: val, text: '' }))} />}\n    </div>\n}\n\nexport default MultisigTransaction","import { Coins } from \"../../types/coins\";\nimport Avatar from \"../avatar\";\nimport { Interval, Member } from \"../../types/sdk\";\nimport dateFormat from \"dateformat\";\n\nconst TeamItem = (props:  { member: Member, teamName: string, memberState: [Member[], React.Dispatch<React.SetStateAction<Member[]>>] }) => {\n\n    return <>\n        <div className=\"pl-[2px] items-start\">\n            <div className=\"flex space-x-3 items-center\">\n                <input type=\"checkbox\" checked={props.memberState[0].some(s=>s.id === props.member.id)} className=\"relative cursor-pointer max-w-[20px] max-h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                    const members = [...props.memberState[0]]\n                    if (e.target.checked) {\n                        if (!members.some(s => s.id === props.member.id)) {\n                            members.push(props.member)\n                            props.memberState[1](members)\n                        }\n                        } else {\n                            props.memberState[1](members.filter(m => props.member.id !== m.id))\n                        }\n                    }\n                } />\n                <div className=\"hover:cursor-pointer flex items-center space-x-1\">\n                    <Avatar name={props.member.name} />\n                    <div>\n                        {props.member.name}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"flex flex-col space-y-4\">\n            <div className=\" pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.member.amount}</div>\n                {props.member.usdBase ? <div>USD as {Coins[props.member.currency].name}</div> :\n                    <div>\n                        {Coins[props.member.currency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.member.currency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>\n            {props.member.secondaryCurrency && <div className=\"pl-[2px] flex items-center justify-start gap-1\">\n                <div>{props.member.secondaryAmount}</div>\n                {props.member.secondaryUsdBase ? <div>USD as {Coins[props.member.secondaryCurrency].name}</div> :\n                    <div>\n                        {Coins[props.member.secondaryCurrency].name}\n                    </div>}\n                <div>\n                    <img src={Coins[props.member.secondaryCurrency].coinUrl} width=\"20\" height=\"20\" alt=\"\" className=\"rounded-full\" />\n                </div>\n            </div>}\n        </div>\n        <div className=\"pl-[2px] hidden sm:flex items-start\">\n            {(props.member.interval === Interval.monthly && \"Monthly\")}\n            {(props.member.interval === Interval.weakly && \"Weekly\")}\n        </div>\n        <div className=\"flex space-x-8\">\n            {props.member.paymantDate && <>\n                <div className=\"col-span-2 sm:col-span-1 pt-3 sm:pt-0 pl-[2px] truncate\">\n                    {/* {new Date().getUTCDay() < new Date(props.member.paymantDate).getUTCDay() ? dateFormat(date.addMonths(new Date(), 1), `${new Date(props.member.paymantDate).getUTCDay()} mmm yyyy`) : dateFormat(new Date(props.member.paymantDate), `dd mmm yyyy`)} */}\n                    {dateFormat(new Date(props.member.paymantDate), `dd ${dateFormat(new Date(), 'mmm')} yyyy`)}\n                </div>\n                {new Date().getUTCDay() < new Date(props.member.paymantDate).getUTCDay() && <div title=\"Late Payment\">\n                    <img src=\"/icons/warningmark.svg\" className=\"max-w-[20px] max-h-[20px]\" alt=\"\" />\n                </div>}\n            </>}\n        </div>\n\n    </>\n}\n\nexport default TeamItem;","import { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport { useDeleteTeamMutation, useUpdateTeamMutation } from \"../../redux/api\";\nimport { Member, TeamInfoWithMembers } from \"../../types/sdk\";\nimport Modal from \"../modal\";\nimport TeamItem from \"../payroll/teamItem\";\n\n\nconst TeamContainer = (props: TeamInfoWithMembers & { memberState: [Member[], React.Dispatch<React.SetStateAction<Member[]>>] }) => {\n\n    const [num, setNum] = useState(3)\n\n    return <>\n        <div className=\"col-span-4 flex space-x-3 py-4 pt-4 sm:pt-6 pb-1 px-5 items-center justify-start\">\n            <div>\n                <input type=\"checkbox\" className=\"relative cursor-pointer w-[20px] h-[20px] checked:before:absolute checked:before:w-full checked:before:h-full checked:before:bg-primary checked:before:block\" onChange={(e) => {\n                    const members = [...props.memberState[0]]\n                    if (e.target.checked) {\n                        props.members?.forEach(m => {\n                            if (!members.some(x => x.id === m.id)) {\n                                members.push(m)\n                            }\n                        })\n                        props.memberState[1](members)\n                    }else{\n                        props.memberState[1](members.filter(m => !props.members?.some(x => x.id === m.id)))\n                    }\n                }} />\n            </div>\n            <div className=\"font-semibold text-[1.5rem] overflow-hidden whitespace-nowrap\">\n                <div>{props.title}</div>\n            </div>\n        </div>\n        {props.members && props.members.slice(0, num).map(w =>\n            <div key={generate()} className=\"grid grid-cols-2 sm:grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] py-6 border-b border-black pb-5 px-5 text-sm\">\n                <TeamItem teamName={props.title} member={w} memberState={props.memberState} />\n            </div>\n        )}\n        {props.members && props.members.length > 3 && num !== 100 ? <button className=\"py-3 pb-5 px-5 font-bold text-primary\" onClick={() => setNum(100)}>\n            Show More\n        </button> : null}\n        {!props.members ? <div className=\"b-5 px-5 border-b border-black pb-5\">No Team Member Yet</div> : undefined}\n    </>\n}\n\nexport default TeamContainer;","import { Fragment, useEffect, useState, useRef, useMemo } from 'react';\nimport TeamContainer from '../../components/payroll/teamContainer'\nimport { ClipLoader } from 'react-spinners';\nimport { TeamInfoWithMembers } from '../../types/sdk/Team/GetTeamsWithMembers';\nimport Success from '../../components/success';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks'\nimport { changeError, changeSuccess, selectError, selectSuccess } from '../../redux/reducers/notificationSlice'\nimport Error from '../../components/error';\nimport { useGetTeamsWithMembersQuery, useLazyGetTeamsWithMembersQuery } from '../../redux/api';\nimport _ from 'lodash';\nimport { Member } from '../../types/sdk';\nimport { SelectBalances } from '../../redux/reducers/currencies';\nimport { Coins } from '../../types';\nimport { useNavigate } from 'react-router-dom'\nimport { SelectSelectedAccount } from '../../redux/reducers/selectedAccount';\nimport Button from '../../components/button';\n\nconst Payroll = () => {\n    const history = useNavigate()\n\n    const selectedAccount = useAppSelector(SelectSelectedAccount)\n\n    const result = useGetTeamsWithMembersQuery({ take: 1000 });\n    const balance = useAppSelector(SelectBalances)\n\n    const isSuccess = useAppSelector(selectSuccess)\n    const isError = useAppSelector(selectError)\n    const dispatch = useAppDispatch()\n\n\n    const [teams, setTeams] = useState<TeamInfoWithMembers[]>([])\n\n    //const [totalPrice, setTotalPrice] = useState<{ [name: string]: number }>()\n\n    const memberState = useState<Member[]>([])\n\n    useEffect(() => {\n        //etTotalPrice(undefined)\n        result.refetch()\n    }, [selectedAccount])\n\n    useEffect(() => {\n        if (result.data) {\n            setTeams(result.data.teams)\n        }\n    }, [result.data])\n\n    const totalPrice: { [name: string]: number } = useMemo(() => {\n        if (result.data && !result.isFetching && balance.CELO) {\n            const list: Member[] = [];\n            result.data.teams.forEach(team => {\n                team.members?.forEach(member => {\n                    list.push(member)\n                })\n            })\n            const first = Object.entries(_(list).groupBy('currency').value()).map(([currency, members]) => {\n                let totalAmount = members.reduce((acc, curr) => {\n                    if (new Date(curr.paymantDate).getMonth() !== new Date().getMonth()) {\n                        return acc;\n                    }\n                    let amount = parseFloat(curr.amount)\n\n                    if (curr.usdBase) {\n                        console.log(curr.currency, balance[curr.currency as keyof typeof balance]?.tokenPrice ?? \"1\")\n                        amount /= (balance[curr.currency as keyof typeof balance]?.tokenPrice ?? 1)\n                    }\n\n                    return acc + amount;\n                }, 0)\n\n                return {\n                    currency,\n                    totalAmount\n                }\n            })\n\n            const second = Object.entries(_(list).groupBy('secondaryCurrency').value()).filter(s => s[0] !== 'undefined').map(([currency, members]) => {\n                let totalAmount = members.reduce((acc, curr) => {\n                    if (new Date(curr.paymantDate).getMonth() !== new Date().getMonth()) {\n                        return acc;\n                    }\n                    let amount = (parseFloat(curr!.secondaryAmount!))\n\n                    if (curr.secondaryUsdBase) {\n                        console.log(curr.secondaryCurrency, balance[curr.secondaryCurrency as keyof typeof balance]?.tokenPrice ?? \"1\")\n                        amount /= (balance[curr.secondaryCurrency! as keyof typeof balance]?.tokenPrice ?? 1)\n                    }\n\n                    return acc + amount\n\n                }, 0)\n\n                return {\n                    currency,\n                    totalAmount\n                }\n            })\n\n            let res: any = {}\n\n            first.forEach((item) => {\n                if (!res[item.currency]) {\n                    res[item.currency] = item.totalAmount\n                } else {\n                    res[item.currency] += item.totalAmount\n                }\n            })\n\n            second.forEach((item) => {\n                if (!res[item.currency]) {\n                    res[item.currency] = item.totalAmount\n                } else {\n                    res[item.currency] += item.totalAmount\n                }\n            })\n\n            return res\n            //setTotalPrice(res)\n        }\n    }, [result.data, result.isFetching, balance])\n\n\n    return <div className=\"flex flex-col space-y-3\">\n        <div className=\"text-2xl font-bold pl-10\">\n            Payroll\n        </div>\n        <div className=\"rounded-xl shadow-custom px-10 pb-10 pt-6\">\n            <div className='flex flex-col space-y-3'>\n                <div className='flex space-x-2'>\n                    <div className='text-greylish opacity-90'>Total payout per month:</div>\n                    {totalPrice && !result.isFetching ? <div className='text-greylish'>\n                        {Object.entries(totalPrice).filter(s => s[1]).reduce((a, [currency, amount]) => {\n                            a += amount * (balance[Coins[currency as keyof typeof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)\n                            return a;\n                        }, 0).toFixed(2)} USD\n                    </div> : <div><ClipLoader /></div>}\n                </div>\n                <div className=\"flex justify-between\">\n                    <div className='grid grid-cols-2 gap-12'>\n                        {totalPrice && !result.isFetching ?\n                            Object.entries(totalPrice).filter(s => s[1]).map(([currency, amount]) => {\n                                return <div key={currency} className=\"flex space-x-2 relative h-fit\">\n                                    <div className=\"font-semibold text-xl\">{amount.toFixed(2)}</div>\n                                    <div className=\"font-semibold text-xl\">{Coins[currency as keyof typeof Coins].name}</div>\n                                    <div>\n                                        <img src={Coins[currency as keyof typeof Coins].coinUrl} className=\"w-[25px] h-[25px] rounded-full\" alt=\"\" />\n                                    </div>\n                                    <div className=\"absolute right-2 -bottom-6 text-sm text-greylish opacity-75 text-right\">\n                                        {(amount * (balance[Coins[currency as keyof typeof Coins].name as keyof typeof balance]?.tokenPrice ?? 1)).toFixed(2)} USD\n                                    </div>\n                                </div>\n                            }) : <div className=\"flex py-1 justify-center\"><ClipLoader /></div>\n                        }\n                    </div>\n                    <div>\n                        <Button onClick={() => {\n                            history(\n                                {\n                                    pathname: '/masspayout',\n                                },\n                                {\n                                    state: {\n                                        memberList: memberState[0]\n                                    }\n                                })\n                        }}>\n                            Run Payroll\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"w-full shadow-custom px-5 pt-4 pb-6 rounded-xl\">\n            <div id=\"header\" className=\"hidden sm:grid grid-cols-[30%,30%,1fr] lg:grid-cols-[20%,20%,20%,1fr] border-b border-black sm:pb-5 px-5\" >\n                <div className=\"font-normal\">Name</div>\n                <div className=\"font-normal hidden lg:block\">Amount</div>\n                <div className=\"font-normal\">Frequency</div>\n                <div className=\"font-normal\">Next Payment</div>\n            </div>\n            <div>\n                {teams.map(w => w && w.members && w.members.length > 0 ? <Fragment key={w.id}><TeamContainer {...w} memberState={memberState} /></Fragment> : undefined)}\n\n                {(result.isLoading || result.isFetching) && <div className=\"flex justify-center py-10\"><ClipLoader /></div>}\n            </div>\n        </div>\n        {isSuccess && <Success onClose={(val: boolean) => dispatch(changeSuccess({ activate: val }))} />}\n        {isError && <Error onClose={(val: boolean) => dispatch(changeError({ activate: val }))} />}\n    </div>\n}\n\nexport default Payroll;","\nconst SpendingSetting = ()=>{\n\n    return <>\n    Spending\n    </>\n}\n\nexport default SpendingSetting;","import { FormEvent, useEffect, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport Button from \"../../components/button\";\nimport { useGetDetailsQuery, useLazyGetDetailsQuery, usePutAccountInfoMutation } from \"../../redux/api\";\n\n\nconst ProfileSetting = () => {\n\n    const [updateInfo] = usePutAccountInfoMutation()\n    const [refetch, { data, isLoading, isFetching }] = useLazyGetDetailsQuery()\n\n    const [isUser, setUser] = useState(false)\n    const [isCompany, setCompany] = useState(false)\n\n    useEffect(() => { refetch() }, [])\n\n    const update = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        const { name, surname, company }: { [name: string]: HTMLInputElement } = e.target as HTMLFormElement;\n        try {\n            if (name && surname && !company) {\n                setUser(true)\n                await updateInfo({\n                    companyName: data?.result.companyName ?? \"\",\n                    surname: surname.value,\n                    userName: name.value,\n                }).unwrap()\n                setUser(false)\n            } else if (company && !name && !surname) {\n                setCompany(true)\n                await updateInfo({\n                    companyName: company.value,\n                    surname: data?.result.surname ?? \"\",\n                    userName: data?.result.userName ?? \"\",\n                }).unwrap()\n                setCompany(false)\n            }\n            refetch()\n        } catch (error) {\n            console.error(error)\n            setCompany(false)\n            setUser(false)\n        }\n    }\n\n    return <div className=\"px-3 py-5 flex flex-col space-y-10\">\n        <div>\n            <div className=\"text-lg\">Profile</div>\n            <div className=\"text-sm\">Edit your account</div>\n        </div>\n        {!isLoading ?\n            <>\n                <div className=\"flex flex-col space-y-3\">\n                    <form onSubmit={update}>\n                        <div>Personal Name</div>\n                        <div className=\"flex space-x-4 items-center max-w-[555px]\">\n                            <div>\n                                <input type=\"text\" defaultValue={data?.result.userName} name=\"name\" className=\"border px-2 py-2 outline-none border-gray-700 rounded-lg\" />\n                            </div>\n                            <div>\n                                <input type=\"text\" name=\"surname\" defaultValue={data?.result.surname} className=\"border px-2 py-2 outline-none border-gray-700 rounded-lg\" />\n                            </div>\n                            <div className=\"flex-grow\">\n                                <Button type=\"submit\" className=\"px-12 py-2\" isLoading={isUser}>Update</Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"flex flex-col space-y-3\">\n                    <form onSubmit={update}>\n                        <div>Organization Name</div>\n                        <div className=\"flex space-x-4 items-center max-w-[555px]\">\n                            <div className=\"flex-grow\">\n                                <input type=\"text\" name=\"company\" defaultValue={data?.result.companyName} className=\"border px-2 py-2 outline-none border-gray-700 rounded-lg w-full\" />\n                            </div>\n                            <div>\n                                <Button type=\"submit\" className=\"px-12 py-2\" isLoading={isCompany}>Update</Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </> : <div className=\"flex justify-center\"> <ClipLoader /> </div>}\n    </div>\n}\n\nexport default ProfileSetting;","import Dashboard from './pages/dashboard/index';\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom'\nimport Pay from './pages/dashboard/pay';\nimport Home from './pages/home';\nimport Create from './pages/create';\nimport Unlock from './pages/unlock';\nimport Swap from './pages/swap'\nimport Import from './pages/import/index';\nimport OwnerSetting from './pages/settings/owner'\nimport Assets from './pages/dashboard/assets'\nimport Teams from './pages/teams/index'\nimport Main from './pages/dashboard/main'\nimport Transactions from './pages/transactions/transactions'\nimport { IStorage, selectStorage } from './redux/reducers/storage';\nimport { selectUnlock } from './redux/reducers/unlock';\nimport { useAppSelector } from './redux/hooks';\nimport Details from './pages/transactions/details';\nimport MassPay from './pages/dashboard/masspay'\nimport SettingLayout from './pages/settings';\nimport MultisigTransaction from './pages/multisig/transaction'\nimport Payroll from './pages/payroll'\nimport SpendingSetting from './pages/settings/spending';\nimport ProfileSetting from './pages/settings/profile';\n\nfunction App(): JSX.Element {\n  const storage = useAppSelector(selectStorage)\n  const unlock = useAppSelector(selectUnlock)\n\n\n  return (\n    <div className=\"App min-h-screen w-full\">\n      <Routes>\n        <Route path=\"/\" element={\n          <LockIfUserIn unlock={unlock} storage={storage}>\n            <Home />\n          </LockIfUserIn>} />\n        <Route path=\"/unlock\" element={<Unlock />} />\n        <Route path=\"/create\" element={\n          <LockIfUserIn unlock={unlock} storage={storage}>\n            <Create />\n          </LockIfUserIn>} />\n        <Route path=\"/import\" element={\n          <LockIfUserIn unlock={unlock} storage={storage}>\n            <Import />\n          </LockIfUserIn>} />\n        <Route path={'/masspayout'} element={\n          <ProtectUser unlock={unlock} storage={storage}>\n            <MassPay />\n          </ProtectUser>} />\n        <Route path={'/pay'} element={\n          <ProtectUser unlock={unlock} storage={storage}>\n            <Pay />\n          </ProtectUser>} />\n        <Route path={'/multisig/:id'} element={\n          <ProtectUser unlock={unlock} storage={storage}>\n            <MultisigTransaction />\n          </ProtectUser>} />\n        <Route path={'/dashboard'} element={\n          <ProtectUser unlock={unlock} storage={storage}>\n            <Dashboard />\n          </ProtectUser>} >\n          <Route path={''} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Main />\n            </ProtectUser>\n          } />\n          <Route path={'assets'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Assets />\n            </ProtectUser>\n          } />\n          <Route path={'payroll'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Payroll />\n            </ProtectUser>\n          } />\n          <Route path={'teams'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Teams />\n            </ProtectUser>\n          } />\n          <Route path={'transactions'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Transactions />\n            </ProtectUser>\n          } />\n          <Route path={'transactions/:id/:address'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Details />\n            </ProtectUser>\n          } />\n          <Route path={'swap'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <Swap />\n            </ProtectUser>\n          } />\n          <Route path={'settings'} element={\n            <ProtectUser unlock={unlock} storage={storage}>\n              <SettingLayout />\n            </ProtectUser>\n          }>\n            <Route path={''} element={<OwnerSetting />} />\n            <Route path={`spending`} element={<SpendingSetting />} />\n            <Route path={`profile`} element={<ProfileSetting />} />\n          </Route>\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nconst ProtectUser = ({ unlock, storage, children }: { unlock: boolean, storage: IStorage | null, children: JSX.Element }) => {\n  if (!unlock && !storage) return <Navigate to={'/'} replace />;\n  if (!unlock && storage) return <Navigate to={'/unlock'} replace />;\n\n  return children;\n}\n\nconst LockIfUserIn = ({ unlock, storage, children }: { unlock: boolean, storage: IStorage | null, children: JSX.Element }) => {\n  if (!unlock && storage) return <Navigate to={'/unlock'} replace />;\n  if (unlock && storage) return <Navigate to={'/dashboard'} replace />;\n\n  return children;\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport Notification from './reducers/notificationSlice'\nimport Storage from './reducers/storage'\nimport Unlock from './reducers/unlock'\nimport Currency from './reducers/currencies'\nimport Toggle from './reducers/toggles'\nimport Transaction from './reducers/transactions'\nimport SelectedAcount from './reducers/selectedAccount'\nimport Multisig from './reducers/multisig'\nimport { accountAPI, customerAPI, teamAPI, transactionAPI, teamMemberAPI, BlockScoutApi, swapAPI, multisigAPI } from './api'\n\nconst store = configureStore({\n    reducer: {\n        currencyandbalance: Currency,\n        notification: Notification,\n        storage: Storage,\n        unlock: Unlock,\n        toggle: Toggle,\n        transactionsStore: Transaction,\n        selectedAccount: SelectedAcount,\n        multisig: Multisig,\n        [accountAPI.reducerPath]: accountAPI.reducer,\n        [customerAPI.reducerPath]: customerAPI.reducer,\n        [swapAPI.reducerPath]: swapAPI.reducer,\n        [teamAPI.reducerPath]: teamAPI.reducer,\n        [teamMemberAPI.reducerPath]: teamMemberAPI.reducer,\n        [transactionAPI.reducerPath]: transactionAPI.reducer,\n        [BlockScoutApi.reducerPath]: BlockScoutApi.reducer,\n        [multisigAPI.reducerPath]: multisigAPI.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(accountAPI.middleware, customerAPI.middleware, transactionAPI.middleware, teamAPI.middleware, teamMemberAPI.middleware, BlockScoutApi.middleware, swapAPI.middleware, multisigAPI.middleware),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dist/index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}